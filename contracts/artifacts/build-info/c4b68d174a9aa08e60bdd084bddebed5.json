{
	"id": "c4b68d174a9aa08e60bdd084bddebed5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\ncontract XusdGenesisRewardPool {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    struct UserInfo {\n        uint256 amount;\n        uint256 rewardDebt;\n    }\n\n    struct PoolInfo {\n        IERC20 token;\n        uint256 allocPoint;\n        uint256 lastRewardTime;\n        uint256 accXusdPerShare;\n        bool isStarted;\n        uint256 maxDeposit;\n    }\n\n    EnumerableSet.AddressSet private _comissionTokens;\n    uint256 public comissionPercent;\n\n    address public operator;\n    IERC20 public Xusd;\n    PoolInfo[] public poolInfo;\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\n    uint256 public totalAllocPoint = 0;\n    uint256 public poolStartTime;\n    uint256 public poolEndTime;\n\n    uint256 public XusdPerSecond;\n    uint256 public runningTime;\n    uint256 public totalRewards;\n\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event RewardPaid(address indexed user, uint256 amount);\n\n    constructor(\n        address _Xusd,\n        address[] memory comissionTokens_,\n        uint256 _comissionPercent,\n        uint256 _poolStartTime,\n        uint256 _totalRewards,\n        uint256 _runningTime\n    ) {\n        require(block.timestamp < _poolStartTime, \"late\");\n        require(_Xusd != address(0), \"XusdGenesisPool: Xusd is zero address\");\n        require(_totalRewards > 0, \"XusdGenesisPool: totalRewards is zero\");\n        require(_runningTime > 0, \"XusdGenesisPool: runningTime is zero\");\n        Xusd = IERC20(_Xusd);\n        totalRewards = _totalRewards;\n        runningTime = _runningTime;\n        XusdPerSecond = totalRewards / runningTime;\n        for (uint256 i = 0; i < comissionTokens_.length; i++) {\n            _comissionTokens.add(comissionTokens_[i]);\n        }\n        comissionPercent = _comissionPercent;\n        poolStartTime = _poolStartTime;\n        poolEndTime = poolStartTime + runningTime;\n        operator = msg.sender;\n    }\n\n    function comissionTokensCount() external view returns (uint256) {\n        return _comissionTokens.length();\n    }\n\n    function comissionToken(uint256 index) external view returns (address) {\n        return _comissionTokens.at(index);\n    }\n\n    function pendingXusd(uint256 _pid, address _user) external view returns (uint256) {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_user];\n        uint256 accXusdPerShare = pool.accXusdPerShare;\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\n        if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\n            uint256 _XusdReward = (_generatedReward * pool.allocPoint) / totalAllocPoint;\n            accXusdPerShare += (_XusdReward * 1e18) / tokenSupply;\n        }\n        return (user.amount * accXusdPerShare) / 1e18 - user.rewardDebt;\n    }\n\n    function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\n        if (_fromTime >= _toTime) return 0;\n        if (_toTime >= poolEndTime) {\n            if (_fromTime >= poolEndTime) return 0;\n            if (_fromTime <= poolStartTime) return (poolEndTime - poolStartTime) * XusdPerSecond;\n            return (poolEndTime - _fromTime) * XusdPerSecond;\n        } else {\n            if (_toTime <= poolStartTime) return 0;\n            if (_fromTime <= poolStartTime) return (_toTime - poolStartTime) * XusdPerSecond;\n            return (_toTime - _fromTime) * XusdPerSecond;\n        }\n    }\n\n    function checkPoolDuplicate(IERC20 _token) internal view {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            require(poolInfo[pid].token != _token, \"XusdGenesisPool: existing pool?\");\n        }\n    }\n\n    function add(\n        uint256 _allocPoint,\n        IERC20 _token,\n        bool _withUpdate,\n        uint256 _lastRewardTime,\n        uint256 _maxDeposit\n    ) external onlyOperator {\n        checkPoolDuplicate(_token);\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        if (block.timestamp < poolStartTime) {\n            if (_lastRewardTime == 0) {\n                _lastRewardTime = poolStartTime;\n            } else if (_lastRewardTime < poolStartTime) {\n                _lastRewardTime = poolStartTime;\n            }\n        } else {\n            if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\n                _lastRewardTime = block.timestamp;\n            }\n        }\n        bool _isStarted = (_lastRewardTime <= poolStartTime) || (_lastRewardTime <= block.timestamp);\n        poolInfo.push(\n            PoolInfo({\n                token: _token,\n                allocPoint: _allocPoint,\n                lastRewardTime: _lastRewardTime,\n                accXusdPerShare: 0,\n                isStarted: _isStarted,\n                maxDeposit: _maxDeposit\n            })\n        );\n        if (_isStarted) {\n            totalAllocPoint += _allocPoint;\n        }\n    }\n\n    function deposit(uint256 _pid, uint256 _amount) external {\n        address _sender = msg.sender;\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_sender];\n        updatePool(_pid);\n        if (user.amount > 0) {\n            uint256 _pending = (user.amount * pool.accXusdPerShare) / 1e18 - user.rewardDebt;\n            if (_pending > 0) {\n                safeXusdTransfer(_sender, _pending);\n                emit RewardPaid(_sender, _pending);\n            }\n        }\n        uint256 possibleToDeposit = pool.maxDeposit - user.amount;\n        uint256 amount = _amount > possibleToDeposit ? possibleToDeposit : _amount;\n        if (amount > 0) {\n            pool.token.transferFrom(_sender, address(this), amount);\n            if (_comissionTokens.contains(address(pool.token))) {\n                uint256 hundred = 10000;\n                user.amount += (amount * (hundred - comissionPercent)) / hundred;\n            } else {\n                user.amount += amount;\n            }\n        }\n        user.rewardDebt = (user.amount * pool.accXusdPerShare) / 1e18;\n        emit Deposit(_sender, _pid, amount);\n    }\n\n    function emergencyWithdraw(uint256 _pid) external {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        uint256 _amount = user.amount;\n        user.amount = 0;\n        user.rewardDebt = 0;\n        pool.token.transfer(msg.sender, _amount);\n        emit EmergencyWithdraw(msg.sender, _pid, _amount);\n    }\n\n    function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\n        if (block.timestamp < poolEndTime + 30 days) {\n            require(_token != Xusd, \"Xusd\");\n            uint256 length = poolInfo.length;\n            for (uint256 pid = 0; pid < length; ++pid) {\n                PoolInfo storage pool = poolInfo[pid];\n                require(_token != pool.token, \"pool.token\");\n            }\n        }\n        _token.transfer(to, amount);\n    }\n\n    function set(uint256 _pid, uint256 _allocPoint) external onlyOperator {\n        massUpdatePools();\n        PoolInfo storage pool = poolInfo[_pid];\n        if (pool.isStarted) {\n            totalAllocPoint = totalAllocPoint - pool.allocPoint + _allocPoint;\n        }\n        pool.allocPoint = _allocPoint;\n    }\n\n    function setOperator(address _operator) external onlyOperator {\n        operator = _operator;\n    }\n\n    function withdraw(uint256 _pid, uint256 _amount) external {\n        address _sender = msg.sender;\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_sender];\n        require(user.amount >= _amount, \"withdraw: not good\");\n        updatePool(_pid);\n        uint256 _pending = (user.amount * pool.accXusdPerShare) / 1e18 - user.rewardDebt;\n        if (_pending > 0) {\n            safeXusdTransfer(_sender, _pending);\n            emit RewardPaid(_sender, _pending);\n        }\n        if (_amount > 0) {\n            user.amount -= _amount;\n            pool.token.transfer(_sender, _amount);\n        }\n        user.rewardDebt = (user.amount * pool.accXusdPerShare) / 1e18;\n        emit Withdraw(_sender, _pid, _amount);\n    }\n\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    function updatePool(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        if (block.timestamp <= pool.lastRewardTime) {\n            return;\n        }\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\n        if (tokenSupply == 0) {\n            pool.lastRewardTime = block.timestamp;\n            return;\n        }\n        if (!pool.isStarted) {\n            pool.isStarted = true;\n            totalAllocPoint += pool.allocPoint;\n        }\n        if (totalAllocPoint > 0) {\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\n            uint256 _XusdReward = (_generatedReward * pool.allocPoint) / totalAllocPoint;\n            pool.accXusdPerShare += (_XusdReward * 1e18) / tokenSupply;\n        }\n        pool.lastRewardTime = block.timestamp;\n    }\n\n    function safeXusdTransfer(address _to, uint256 _amount) internal {\n        uint256 _XusdBalance = Xusd.balanceOf(address(this));\n        if (_XusdBalance > 0) {\n            if (_amount > _XusdBalance) {\n                Xusd.transfer(_to, _XusdBalance);\n            } else {\n                Xusd.transfer(_to, _amount);\n            }\n        }\n    }\n\n    modifier onlyOperator() {\n        require(operator == msg.sender, \"XusdGenesisPool: caller is not the operator\");\n        _;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220f965eb27f2c39e96efba88eae351133acd241f03138fcbed03ac102c622967bf64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f965eb27f2c39e96efba88eae351133acd241f03138fcbed03ac102c622967bf64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 PUSH6 0xEB27F2C39E96 0xEF 0xBA DUP9 0xEA 0xE3 MLOAD SGT GASPRICE 0xCD 0x24 0x1F SUB SGT DUP16 0xCB 0xED SUB 0xAC LT 0x2C PUSH3 0x2967BF PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "1330:11640:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1330:11640:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220f965eb27f2c39e96efba88eae351133acd241f03138fcbed03ac102c622967bf64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 PUSH6 0xEB27F2C39E96 0xEF 0xBA DUP9 0xEA 0xE3 MLOAD SGT GASPRICE 0xCD 0x24 0x1F SUB SGT DUP16 0xCB 0xED SUB 0xAC LT 0x2C PUSH3 0x2967BF PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "1330:11640:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f965eb27f2c39e96efba88eae351133acd241f03138fcbed03ac102c622967bf64736f6c634300081b0033",
									".code": [
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"contracts/staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/staking.sol": {
				"XusdGenesisRewardPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Xusd",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "comissionTokens_",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "_comissionPercent",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_poolStartTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_totalRewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_runningTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Xusd",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "XusdPerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_lastRewardTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxDeposit",
									"type": "uint256"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "comissionPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "comissionToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "comissionTokensCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTime",
									"type": "uint256"
								}
							],
							"name": "getGeneratedReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "governanceRecoverUnsupported",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingXusd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accXusdPerShare",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isStarted",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "maxDeposit",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "runningTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "setOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/staking.sol\":181:10092  contract XusdGenesisRewardPool {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/staking.sol\":831:832  0 */\n  0x00\n    /* \"contracts/staking.sol\":798:832  uint256 public totalAllocPoint = 0 */\n  0x07\n  sstore\n    /* \"contracts/staking.sol\":1311:2273  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/staking.sol\":1559:1573  _poolStartTime */\n  dup3\n    /* \"contracts/staking.sol\":1541:1556  block.timestamp */\n  timestamp\n    /* \"contracts/staking.sol\":1541:1573  block.timestamp < _poolStartTime */\n  lt\n    /* \"contracts/staking.sol\":1533:1582  require(block.timestamp < _poolStartTime, \"late\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n    /* \"#utility.yul\":2204:2206   */\n  0x20\n    /* \"#utility.yul\":2186:2207   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":2243:2244   */\n  0x04\n    /* \"#utility.yul\":2223:2241   */\n  swap1\n  dup3\n  add\n    /* \"#utility.yul\":2216:2245   */\n  mstore\n  shl(0xe0, 0x6c617465)\n    /* \"#utility.yul\":2276:2278   */\n  0x40\n    /* \"#utility.yul\":2261:2279   */\n  dup3\n  add\n    /* \"#utility.yul\":2254:2288   */\n  mstore\n    /* \"#utility.yul\":2320:2322   */\n  0x60\n    /* \"#utility.yul\":2305:2323   */\n  add\n  swap1\n    /* \"#utility.yul\":2002:2329   */\n  jump\n    /* \"contracts/staking.sol\":1533:1582  require(block.timestamp < _poolStartTime, \"late\") */\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/staking.sol\":1600:1619  _Xusd != address(0) */\n  dup7\n  and\n    /* \"contracts/staking.sol\":1592:1661  require(_Xusd != address(0), \"XusdGenesisPool: Xusd is zero address\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2536:2538   */\n  0x20\n    /* \"contracts/staking.sol\":1592:1661  require(_Xusd != address(0), \"XusdGenesisPool: Xusd is zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2518:2539   */\n  mstore\n    /* \"#utility.yul\":2575:2577   */\n  0x25\n    /* \"#utility.yul\":2555:2573   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2548:2578   */\n  mstore\n    /* \"#utility.yul\":2614:2648   */\n  0x5875736447656e65736973506f6f6c3a2058757364206973207a65726f206164\n    /* \"#utility.yul\":2594:2612   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2587:2649   */\n  mstore\n  shl(0xd8, 0x6472657373)\n    /* \"#utility.yul\":2665:2683   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2658:2693   */\n  mstore\n    /* \"#utility.yul\":2710:2729   */\n  0x84\n  add\n    /* \"contracts/staking.sol\":1592:1661  require(_Xusd != address(0), \"XusdGenesisPool: Xusd is zero address\") */\n  tag_7\n    /* \"#utility.yul\":2334:2735   */\n  jump\n    /* \"contracts/staking.sol\":1592:1661  require(_Xusd != address(0), \"XusdGenesisPool: Xusd is zero address\") */\ntag_9:\n    /* \"contracts/staking.sol\":1695:1696  0 */\n  0x00\n    /* \"contracts/staking.sol\":1679:1692  _totalRewards */\n  dup3\n    /* \"contracts/staking.sol\":1679:1696  _totalRewards > 0 */\n  gt\n    /* \"contracts/staking.sol\":1671:1738  require(_totalRewards > 0, \"XusdGenesisPool: totalRewards is zero\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2942:2944   */\n  0x20\n    /* \"contracts/staking.sol\":1671:1738  require(_totalRewards > 0, \"XusdGenesisPool: totalRewards is zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2924:2945   */\n  mstore\n    /* \"#utility.yul\":2981:2983   */\n  0x25\n    /* \"#utility.yul\":2961:2979   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2954:2984   */\n  mstore\n    /* \"#utility.yul\":3020:3054   */\n  0x5875736447656e65736973506f6f6c3a20746f74616c52657761726473206973\n    /* \"#utility.yul\":3000:3018   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2993:3055   */\n  mstore\n  shl(0xd8, 0x207a65726f)\n    /* \"#utility.yul\":3071:3089   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":3064:3099   */\n  mstore\n    /* \"#utility.yul\":3116:3135   */\n  0x84\n  add\n    /* \"contracts/staking.sol\":1671:1738  require(_totalRewards > 0, \"XusdGenesisPool: totalRewards is zero\") */\n  tag_7\n    /* \"#utility.yul\":2740:3141   */\n  jump\n    /* \"contracts/staking.sol\":1671:1738  require(_totalRewards > 0, \"XusdGenesisPool: totalRewards is zero\") */\ntag_12:\n    /* \"contracts/staking.sol\":1771:1772  0 */\n  0x00\n    /* \"contracts/staking.sol\":1756:1768  _runningTime */\n  dup2\n    /* \"contracts/staking.sol\":1756:1772  _runningTime > 0 */\n  gt\n    /* \"contracts/staking.sol\":1748:1813  require(_runningTime > 0, \"XusdGenesisPool: runningTime is zero\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3348:3350   */\n  0x20\n    /* \"contracts/staking.sol\":1748:1813  require(_runningTime > 0, \"XusdGenesisPool: runningTime is zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3330:3351   */\n  mstore\n    /* \"#utility.yul\":3387:3389   */\n  0x24\n    /* \"#utility.yul\":3367:3385   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3360:3390   */\n  mstore\n    /* \"#utility.yul\":3426:3460   */\n  0x5875736447656e65736973506f6f6c3a2072756e6e696e6754696d6520697320\n    /* \"#utility.yul\":3406:3424   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3399:3461   */\n  mstore\n  shl(0xe0, 0x7a65726f)\n    /* \"#utility.yul\":3477:3495   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":3470:3504   */\n  mstore\n    /* \"#utility.yul\":3521:3540   */\n  0x84\n  add\n    /* \"contracts/staking.sol\":1748:1813  require(_runningTime > 0, \"XusdGenesisPool: runningTime is zero\") */\n  tag_7\n    /* \"#utility.yul\":3146:3546   */\n  jump\n    /* \"contracts/staking.sol\":1748:1813  require(_runningTime > 0, \"XusdGenesisPool: runningTime is zero\") */\ntag_15:\n    /* \"contracts/staking.sol\":1823:1827  Xusd */\n  0x04\n    /* \"contracts/staking.sol\":1823:1843  Xusd = IERC20(_Xusd) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup9\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/staking.sol\":1853:1865  totalRewards */\n  0x0c\n    /* \"contracts/staking.sol\":1853:1881  totalRewards = _totalRewards */\n  dup3\n  swap1\n  sstore\n    /* \"contracts/staking.sol\":1891:1902  runningTime */\n  0x0b\n    /* \"contracts/staking.sol\":1891:1917  runningTime = _runningTime */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/staking.sol\":1943:1969  totalRewards / runningTime */\n  tag_18\n    /* \"contracts/staking.sol\":1891:1917  runningTime = _runningTime */\n  dup2\n    /* \"contracts/staking.sol\":1853:1881  totalRewards = _totalRewards */\n  dup4\n    /* \"contracts/staking.sol\":1943:1969  totalRewards / runningTime */\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"contracts/staking.sol\":1927:1940  XusdPerSecond */\n  0x0a\n    /* \"contracts/staking.sol\":1927:1969  XusdPerSecond = totalRewards / runningTime */\n  sstore\n    /* \"contracts/staking.sol\":1984:1993  uint256 i */\n  0x00\n    /* \"contracts/staking.sol\":1979:2099  for (uint256 i = 0; i < comissionTokens_.length; i++) {... */\ntag_20:\n    /* \"contracts/staking.sol\":2003:2019  comissionTokens_ */\n  dup6\n    /* \"contracts/staking.sol\":2003:2026  comissionTokens_.length */\n  mload\n    /* \"contracts/staking.sol\":1999:2000  i */\n  dup2\n    /* \"contracts/staking.sol\":1999:2026  i < comissionTokens_.length */\n  lt\n    /* \"contracts/staking.sol\":1979:2099  for (uint256 i = 0; i < comissionTokens_.length; i++) {... */\n  iszero\n  tag_21\n  jumpi\n    /* \"contracts/staking.sol\":2047:2088  _comissionTokens.add(comissionTokens_[i]) */\n  tag_23\n    /* \"contracts/staking.sol\":2068:2084  comissionTokens_ */\n  dup7\n    /* \"contracts/staking.sol\":2085:2086  i */\n  dup3\n    /* \"contracts/staking.sol\":2068:2087  comissionTokens_[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_25\n  jumpi\n  tag_25\n  tag_26\n  jump\t// in\ntag_25:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/staking.sol\":2047:2063  _comissionTokens */\n  0x00\n    /* \"contracts/staking.sol\":2047:2067  _comissionTokens.add */\n  shl(0x20, tag_27)\n  swap1\n    /* \"contracts/staking.sol\":2047:2088  _comissionTokens.add(comissionTokens_[i]) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_23:\n  pop\n    /* \"contracts/staking.sol\":2028:2031  i++ */\n  0x01\n  add\n    /* \"contracts/staking.sol\":1979:2099  for (uint256 i = 0; i < comissionTokens_.length; i++) {... */\n  jump(tag_20)\ntag_21:\n  pop\n    /* \"contracts/staking.sol\":2108:2124  comissionPercent */\n  0x02\n    /* \"contracts/staking.sol\":2108:2144  comissionPercent = _comissionPercent */\n  dup5\n  swap1\n  sstore\n    /* \"contracts/staking.sol\":2154:2167  poolStartTime */\n  0x08\n    /* \"contracts/staking.sol\":2154:2184  poolStartTime = _poolStartTime */\n  dup4\n  swap1\n  sstore\n    /* \"contracts/staking.sol\":2224:2235  runningTime */\n  sload(0x0b)\n    /* \"contracts/staking.sol\":2208:2235  poolStartTime + runningTime */\n  tag_28\n  swap1\n    /* \"contracts/staking.sol\":2170:2184  _poolStartTime */\n  dup5\n    /* \"contracts/staking.sol\":2208:2235  poolStartTime + runningTime */\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"contracts/staking.sol\":2194:2205  poolEndTime */\n  0x09\n    /* \"contracts/staking.sol\":2194:2235  poolEndTime = poolStartTime + runningTime */\n  sstore\n  pop\n  pop\n    /* \"contracts/staking.sol\":2245:2253  operator */\n  0x03\n    /* \"contracts/staking.sol\":2245:2266  operator = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/staking.sol\":2256:2266  msg.sender */\n  caller\n    /* \"contracts/staking.sol\":2245:2266  operator = msg.sender */\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/staking.sol\":181:10092  contract XusdGenesisRewardPool {... */\n  tag_43\n  swap3\n  pop\n  pop\n  pop\n  jump\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8316:8466  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8386:8390  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8459  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  tag_32\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8414:8417  set */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8434:8457  uint256(uint160(value)) */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8413  _add */\n  tag_33\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8459  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8402:8459  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8316:8466  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_31:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2304:2308  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n  dup2\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4374  set._positions */\n  0x01\n  dup4\n  add\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n  tag_37\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2385  set._values.push(value) */\n  dup2\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2373  set._values */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2385  set._values.push(value) */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  keccak256\n  swap1\n  swap4\n  add\n  dup5\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2562  set._values.length */\n  dup5\n  sload\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n  dup5\n  dup3\n  mstore\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2534  set._positions */\n  dup3\n  dup7\n  add\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n  swap1\n  swap4\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2562  set._positions[value] = set._values.length */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2576:2587  return true */\n  jump(tag_31)\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\ntag_37:\n  pop\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2625:2630  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2618:2630  return false */\n  jump(tag_31)\n    /* \"#utility.yul\":14:191   */\ntag_41:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_45:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_42:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:1997   */\ntag_3:\n    /* \"#utility.yul\":468:474   */\n  0x00\n    /* \"#utility.yul\":476:482   */\n  0x00\n    /* \"#utility.yul\":484:490   */\n  0x00\n    /* \"#utility.yul\":492:498   */\n  0x00\n    /* \"#utility.yul\":500:506   */\n  0x00\n    /* \"#utility.yul\":508:514   */\n  0x00\n    /* \"#utility.yul\":561:564   */\n  0xc0\n    /* \"#utility.yul\":549:558   */\n  dup8\n    /* \"#utility.yul\":540:547   */\n  dup10\n    /* \"#utility.yul\":536:559   */\n  sub\n    /* \"#utility.yul\":532:565   */\n  slt\n    /* \"#utility.yul\":529:582   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":578:579   */\n  0x00\n    /* \"#utility.yul\":575:576   */\n  0x00\n    /* \"#utility.yul\":568:580   */\n  revert\n    /* \"#utility.yul\":529:582   */\ntag_48:\n    /* \"#utility.yul\":601:641   */\n  tag_49\n    /* \"#utility.yul\":631:640   */\n  dup8\n    /* \"#utility.yul\":601:641   */\n  tag_41\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":685:687   */\n  0x20\n    /* \"#utility.yul\":670:688   */\n  dup9\n  add\n    /* \"#utility.yul\":664:689   */\n  mload\n    /* \"#utility.yul\":591:641   */\n  swap1\n  swap7\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":701:731   */\n  dup2\n  gt\n    /* \"#utility.yul\":698:748   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":744:745   */\n  0x00\n    /* \"#utility.yul\":741:742   */\n  0x00\n    /* \"#utility.yul\":734:746   */\n  revert\n    /* \"#utility.yul\":698:748   */\ntag_50:\n    /* \"#utility.yul\":767:789   */\n  dup8\n  add\n    /* \"#utility.yul\":820:824   */\n  0x1f\n    /* \"#utility.yul\":812:825   */\n  dup2\n  add\n    /* \"#utility.yul\":808:835   */\n  dup10\n  sgt\n    /* \"#utility.yul\":798:853   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":849:850   */\n  0x00\n    /* \"#utility.yul\":846:847   */\n  0x00\n    /* \"#utility.yul\":839:851   */\n  revert\n    /* \"#utility.yul\":798:853   */\ntag_51:\n    /* \"#utility.yul\":876:885   */\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":897:927   */\n  dup2\n  gt\n    /* \"#utility.yul\":894:950   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":930:948   */\n  tag_53\n  tag_42\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1012:1014   */\n  0x40\n    /* \"#utility.yul\":1006:1015   */\n  mload\n    /* \"#utility.yul\":973:974   */\n  0x05\n    /* \"#utility.yul\":969:983   */\n  dup3\n  swap1\n  shl\n  swap1\n    /* \"#utility.yul\":1066:1068   */\n  0x3f\n    /* \"#utility.yul\":1058:1069   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1054:1079   */\n  and\n    /* \"#utility.yul\":1042:1080   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1095:1129   */\n  dup2\n  gt\n    /* \"#utility.yul\":1131:1153   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":1092:1154   */\n  or\n    /* \"#utility.yul\":1089:1177   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1157:1175   */\n  tag_55\n  tag_42\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1193:1195   */\n  0x40\n    /* \"#utility.yul\":1186:1208   */\n  mstore\n    /* \"#utility.yul\":1243:1265   */\n  swap2\n  dup3\n  mstore\n    /* \"#utility.yul\":1293:1295   */\n  0x20\n    /* \"#utility.yul\":1323:1334   */\n  dup2\n  dup5\n  add\n    /* \"#utility.yul\":1319:1339   */\n  dup2\n  add\n  swap3\n    /* \"#utility.yul\":1243:1265   */\n  swap1\n    /* \"#utility.yul\":1281:1296   */\n  dup2\n  add\n    /* \"#utility.yul\":1351:1370   */\n  dup13\n  dup5\n  gt\n    /* \"#utility.yul\":1348:1387   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1383:1384   */\n  0x00\n    /* \"#utility.yul\":1380:1381   */\n  0x00\n    /* \"#utility.yul\":1373:1385   */\n  revert\n    /* \"#utility.yul\":1348:1387   */\ntag_56:\n    /* \"#utility.yul\":1415:1417   */\n  0x20\n    /* \"#utility.yul\":1411:1413   */\n  dup6\n    /* \"#utility.yul\":1407:1418   */\n  add\n    /* \"#utility.yul\":1396:1418   */\n  swap5\n  pop\n    /* \"#utility.yul\":1427:1586   */\ntag_57:\n    /* \"#utility.yul\":1443:1449   */\n  dup4\n    /* \"#utility.yul\":1438:1441   */\n  dup6\n    /* \"#utility.yul\":1435:1450   */\n  lt\n    /* \"#utility.yul\":1427:1586   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1509:1543   */\n  tag_60\n    /* \"#utility.yul\":1539:1542   */\n  dup6\n    /* \"#utility.yul\":1509:1543   */\n  tag_41\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1497:1544   */\n  dup2\n  mstore\n    /* \"#utility.yul\":1573:1575   */\n  0x20\n    /* \"#utility.yul\":1460:1472   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":1564:1576   */\n  add\n    /* \"#utility.yul\":1427:1586   */\n  jump(tag_57)\ntag_59:\n  pop\n    /* \"#utility.yul\":1673:1675   */\n  0x40\n    /* \"#utility.yul\":1658:1676   */\n  dup12\n  add\n    /* \"#utility.yul\":1652:1677   */\n  mload\n    /* \"#utility.yul\":1767:1769   */\n  0x60\n    /* \"#utility.yul\":1752:1770   */\n  dup13\n  add\n    /* \"#utility.yul\":1746:1771   */\n  mload\n    /* \"#utility.yul\":1863:1866   */\n  0x80\n    /* \"#utility.yul\":1848:1867   */\n  dup14\n  add\n    /* \"#utility.yul\":1842:1868   */\n  mload\n    /* \"#utility.yul\":1960:1963   */\n  0xa0\n    /* \"#utility.yul\":1945:1964   */\n  swap1\n  swap14\n  add\n    /* \"#utility.yul\":1939:1965   */\n  mload\n    /* \"#utility.yul\":328:1997   */\n  swap12\n  swap15\n    /* \"#utility.yul\":1605:1611   */\n  swap3\n  swap14\n  pop\n    /* \"#utility.yul\":1652:1677   */\n  swap1\n  swap12\n    /* \"#utility.yul\":1746:1771   */\n  swap1\n  swap11\n    /* \"#utility.yul\":1842:1868   */\n  swap1\n  swap10\n  pop\n    /* \"#utility.yul\":1939:1965   */\n  swap8\n  pop\n    /* \"#utility.yul\":328:1997   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3551:3768   */\ntag_19:\n    /* \"#utility.yul\":3591:3592   */\n  0x00\n    /* \"#utility.yul\":3617:3618   */\n  dup3\n    /* \"#utility.yul\":3607:3739   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3661:3671   */\n  0x4e487b71\n    /* \"#utility.yul\":3656:3659   */\n  0xe0\n    /* \"#utility.yul\":3652:3672   */\n  shl\n    /* \"#utility.yul\":3649:3650   */\n  0x00\n    /* \"#utility.yul\":3642:3673   */\n  mstore\n    /* \"#utility.yul\":3696:3700   */\n  0x12\n    /* \"#utility.yul\":3693:3694   */\n  0x04\n    /* \"#utility.yul\":3686:3701   */\n  mstore\n    /* \"#utility.yul\":3724:3728   */\n  0x24\n    /* \"#utility.yul\":3721:3722   */\n  0x00\n    /* \"#utility.yul\":3714:3729   */\n  revert\n    /* \"#utility.yul\":3607:3739   */\ntag_66:\n  pop\n    /* \"#utility.yul\":3753:3762   */\n  div\n  swap1\n    /* \"#utility.yul\":3551:3768   */\n  jump\t// out\n    /* \"#utility.yul\":3773:3900   */\ntag_26:\n    /* \"#utility.yul\":3834:3844   */\n  0x4e487b71\n    /* \"#utility.yul\":3829:3832   */\n  0xe0\n    /* \"#utility.yul\":3825:3845   */\n  shl\n    /* \"#utility.yul\":3822:3823   */\n  0x00\n    /* \"#utility.yul\":3815:3846   */\n  mstore\n    /* \"#utility.yul\":3865:3869   */\n  0x32\n    /* \"#utility.yul\":3862:3863   */\n  0x04\n    /* \"#utility.yul\":3855:3870   */\n  mstore\n    /* \"#utility.yul\":3889:3893   */\n  0x24\n    /* \"#utility.yul\":3886:3887   */\n  0x00\n    /* \"#utility.yul\":3879:3894   */\n  revert\n    /* \"#utility.yul\":3905:4127   */\ntag_29:\n    /* \"#utility.yul\":3970:3979   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3991:4001   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3988:4121   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":4043:4053   */\n  0x4e487b71\n    /* \"#utility.yul\":4038:4041   */\n  0xe0\n    /* \"#utility.yul\":4034:4054   */\n  shl\n    /* \"#utility.yul\":4031:4032   */\n  0x00\n    /* \"#utility.yul\":4024:4055   */\n  mstore\n    /* \"#utility.yul\":4078:4082   */\n  0x11\n    /* \"#utility.yul\":4075:4076   */\n  0x04\n    /* \"#utility.yul\":4068:4083   */\n  mstore\n    /* \"#utility.yul\":4106:4110   */\n  0x24\n    /* \"#utility.yul\":4103:4104   */\n  0x00\n    /* \"#utility.yul\":4096:4111   */\n  revert\n    /* \"#utility.yul\":3905:4127   */\ntag_43:\n    /* \"contracts/staking.sol\":181:10092  contract XusdGenesisRewardPool {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/staking.sol\":181:10092  contract XusdGenesisRewardPool {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f96dc11\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x92fae48d\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x92fae48d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x943f013d\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb3ab15fb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf25bb865\n      eq\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      dup1\n      0x5f96dc11\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x628b409f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x62e006c7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6e271dd5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7805583c\n      eq\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_27:\n      dup1\n      0x51eb05a6\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x54575af4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x570ca735\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5715f8f9\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5b142956\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      dup1\n      0x0e15561a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1ab06ee5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x231f0c6a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/staking.sol\":971:998  uint256 public totalRewards */\n    tag_3:\n      tag_30\n      sload(0x0c)\n      dup2\n      jump\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/staking.sol\":971:998  uint256 public totalRewards */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":696:722  PoolInfo[] public poolInfo */\n    tag_4:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":740:772   */\n      swap1\n      swap8\n      and\n        /* \"#utility.yul\":722:773   */\n      dup8\n      mstore\n        /* \"#utility.yul\":804:806   */\n      0x20\n        /* \"#utility.yul\":789:807   */\n      dup8\n      add\n        /* \"#utility.yul\":782:816   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":832:850   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":825:859   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":890:892   */\n      0x60\n        /* \"#utility.yul\":875:893   */\n      dup5\n      add\n        /* \"#utility.yul\":868:902   */\n      mstore\n        /* \"#utility.yul\":946:960   */\n      iszero\n        /* \"#utility.yul\":939:961   */\n      iszero\n        /* \"#utility.yul\":933:936   */\n      0x80\n        /* \"#utility.yul\":918:937   */\n      dup4\n      add\n        /* \"#utility.yul\":911:962   */\n      mstore\n        /* \"#utility.yul\":760:763   */\n      0xa0\n        /* \"#utility.yul\":978:997   */\n      dup3\n      add\n        /* \"#utility.yul\":971:1006   */\n      mstore\n        /* \"#utility.yul\":709:712   */\n      0xc0\n        /* \"#utility.yul\":694:713   */\n      add\n        /* \"contracts/staking.sol\":696:722  PoolInfo[] public poolInfo */\n      tag_32\n        /* \"#utility.yul\":427:1012   */\n      jump\n        /* \"contracts/staking.sol\":798:832  uint256 public totalAllocPoint = 0 */\n    tag_5:\n      tag_30\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/staking.sol\":7393:7703  function set(uint256 _pid, uint256 _allocPoint) external onlyOperator {... */\n    tag_6:\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/staking.sol\":3256:3882  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {... */\n    tag_7:\n      tag_30\n      tag_48\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n        /* \"contracts/staking.sol\":7814:8578  function withdraw(uint256 _pid, uint256 _amount) external {... */\n    tag_8:\n      tag_43\n      tag_52\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/staking.sol\":8765:9600  function updatePool(uint256 _pid) public {... */\n    tag_9:\n      tag_43\n      tag_55\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/staking.sol\":6524:6891  function emergencyWithdraw(uint256 _pid) external {... */\n    tag_10:\n      tag_43\n      tag_58\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"contracts/staking.sol\":6897:7387  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {... */\n    tag_11:\n      tag_43\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"contracts/staking.sol\":643:666  address public operator */\n    tag_12:\n      sload(0x03)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_64:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n        /* \"contracts/staking.sol\":605:636  uint256 public comissionPercent */\n    tag_13:\n      tag_30\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/staking.sol\":2398:2519  function comissionToken(uint256 index) external view returns (address) {... */\n    tag_14:\n      tag_64\n      tag_72\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/staking.sol\":838:866  uint256 public poolStartTime */\n    tag_15:\n      tag_30\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/staking.sol\":905:933  uint256 public XusdPerSecond */\n    tag_16:\n      tag_30\n      sload(0x0a)\n      dup2\n      jump\n        /* \"contracts/staking.sol\":4150:5358  function add(... */\n    tag_17:\n      tag_43\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n        /* \"contracts/staking.sol\":8584:8759  function massUpdatePools() public {... */\n    tag_18:\n      tag_43\n      tag_86\n      jump\t// in\n        /* \"contracts/staking.sol\":872:898  uint256 public poolEndTime */\n    tag_19:\n      tag_30\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/staking.sol\":2525:3250  function pendingXusd(uint256 _pid, address _user) external view returns (uint256) {... */\n    tag_20:\n      tag_30\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"contracts/staking.sol\":2279:2392  function comissionTokensCount() external view returns (uint256) {... */\n    tag_21:\n      tag_30\n      tag_96\n      jump\t// in\n        /* \"contracts/staking.sol\":728:792  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_22:\n      tag_98\n      tag_99\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_99:\n      0x06\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_98:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3711:3736   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3767:3769   */\n      0x20\n        /* \"#utility.yul\":3752:3770   */\n      dup4\n      add\n        /* \"#utility.yul\":3745:3779   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3684:3702   */\n      add\n        /* \"contracts/staking.sol\":728:792  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n      tag_32\n        /* \"#utility.yul\":3537:3785   */\n      jump\n        /* \"contracts/staking.sol\":939:965  uint256 public runningTime */\n    tag_23:\n      tag_30\n      sload(0x0b)\n      dup2\n      jump\n        /* \"contracts/staking.sol\":7709:7808  function setOperator(address _operator) external onlyOperator {... */\n    tag_24:\n      tag_43\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n        /* \"contracts/staking.sol\":5364:6518  function deposit(uint256 _pid, uint256 _amount) external {... */\n    tag_25:\n      tag_43\n      tag_111\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n        /* \"contracts/staking.sol\":672:690  IERC20 public Xusd */\n    tag_26:\n      sload(0x04)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/staking.sol\":696:722  PoolInfo[] public poolInfo */\n    tag_37:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      swap1\n      swap6\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      swap6\n      pop\n      swap2\n      swap4\n      swap1\n      swap3\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n      dup7\n      jump\t// out\n        /* \"contracts/staking.sol\":7393:7703  function set(uint256 _pid, uint256 _allocPoint) external onlyOperator {... */\n    tag_46:\n        /* \"contracts/staking.sol\":10002:10010  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/staking.sol\":10014:10024  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":10002:10024  operator == msg.sender */\n      eq\n        /* \"contracts/staking.sol\":9994:10072  require(operator == msg.sender, \"XusdGenesisPool: caller is not the operator\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/staking.sol\":7473:7490  massUpdatePools() */\n      tag_124\n        /* \"contracts/staking.sol\":7473:7488  massUpdatePools */\n      tag_86\n        /* \"contracts/staking.sol\":7473:7490  massUpdatePools() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/staking.sol\":7500:7521  PoolInfo storage pool */\n      0x00\n        /* \"contracts/staking.sol\":7524:7532  poolInfo */\n      0x05\n        /* \"contracts/staking.sol\":7533:7537  _pid */\n      dup4\n        /* \"contracts/staking.sol\":7524:7538  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_126\n      jumpi\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/staking.sol\":7552:7566  pool.isStarted */\n      0x04\n      dup2\n      add\n      sload\n        /* \"contracts/staking.sol\":7524:7538  poolInfo[_pid] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/staking.sol\":7552:7566  pool.isStarted */\n      0xff\n      and\n        /* \"contracts/staking.sol\":7548:7658  if (pool.isStarted) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/staking.sol\":7636:7647  _allocPoint */\n      dup2\n        /* \"contracts/staking.sol\":7618:7622  pool */\n      dup2\n        /* \"contracts/staking.sol\":7618:7633  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/staking.sol\":7600:7615  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/staking.sol\":7600:7633  totalAllocPoint - pool.allocPoint */\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"contracts/staking.sol\":7600:7647  totalAllocPoint - pool.allocPoint + _allocPoint */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/staking.sol\":7582:7597  totalAllocPoint */\n      0x07\n        /* \"contracts/staking.sol\":7582:7647  totalAllocPoint = totalAllocPoint - pool.allocPoint + _allocPoint */\n      sstore\n        /* \"contracts/staking.sol\":7548:7658  if (pool.isStarted) {... */\n    tag_129:\n        /* \"contracts/staking.sol\":7667:7682  pool.allocPoint */\n      0x01\n      add\n        /* \"contracts/staking.sol\":7667:7696  pool.allocPoint = _allocPoint */\n      sstore\n      pop\n        /* \"contracts/staking.sol\":7393:7703  function set(uint256 _pid, uint256 _allocPoint) external onlyOperator {... */\n      jump\t// out\n        /* \"contracts/staking.sol\":3256:3882  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {... */\n    tag_49:\n        /* \"contracts/staking.sol\":3341:3348  uint256 */\n      0x00\n        /* \"contracts/staking.sol\":3377:3384  _toTime */\n      dup2\n        /* \"contracts/staking.sol\":3364:3373  _fromTime */\n      dup4\n        /* \"contracts/staking.sol\":3364:3384  _fromTime >= _toTime */\n      lt\n        /* \"contracts/staking.sol\":3360:3394  if (_fromTime >= _toTime) return 0 */\n      tag_135\n      jumpi\n      pop\n        /* \"contracts/staking.sol\":3393:3394  0 */\n      0x00\n        /* \"contracts/staking.sol\":3386:3394  return 0 */\n      jump(tag_144)\n        /* \"contracts/staking.sol\":3360:3394  if (_fromTime >= _toTime) return 0 */\n    tag_135:\n        /* \"contracts/staking.sol\":3419:3430  poolEndTime */\n      sload(0x09)\n        /* \"contracts/staking.sol\":3408:3415  _toTime */\n      dup3\n        /* \"contracts/staking.sol\":3408:3430  _toTime >= poolEndTime */\n      lt\n        /* \"contracts/staking.sol\":3404:3876  if (_toTime >= poolEndTime) {... */\n      tag_136\n      jumpi\n        /* \"contracts/staking.sol\":3463:3474  poolEndTime */\n      sload(0x09)\n        /* \"contracts/staking.sol\":3450:3459  _fromTime */\n      dup4\n        /* \"contracts/staking.sol\":3450:3474  _fromTime >= poolEndTime */\n      lt\n        /* \"contracts/staking.sol\":3446:3484  if (_fromTime >= poolEndTime) return 0 */\n      tag_137\n      jumpi\n      pop\n        /* \"contracts/staking.sol\":3483:3484  0 */\n      0x00\n        /* \"contracts/staking.sol\":3476:3484  return 0 */\n      jump(tag_144)\n        /* \"contracts/staking.sol\":3446:3484  if (_fromTime >= poolEndTime) return 0 */\n    tag_137:\n        /* \"contracts/staking.sol\":3515:3528  poolStartTime */\n      sload(0x08)\n        /* \"contracts/staking.sol\":3502:3511  _fromTime */\n      dup4\n        /* \"contracts/staking.sol\":3502:3528  _fromTime <= poolStartTime */\n      gt\n        /* \"contracts/staking.sol\":3498:3582  if (_fromTime <= poolStartTime) return (poolEndTime - poolStartTime) * XusdPerSecond */\n      tag_138\n      jumpi\n        /* \"contracts/staking.sol\":3569:3582  XusdPerSecond */\n      sload(0x0a)\n        /* \"contracts/staking.sol\":3552:3565  poolStartTime */\n      sload(0x08)\n        /* \"contracts/staking.sol\":3538:3549  poolEndTime */\n      sload(0x09)\n        /* \"contracts/staking.sol\":3538:3565  poolEndTime - poolStartTime */\n      tag_139\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_139:\n        /* \"contracts/staking.sol\":3537:3582  (poolEndTime - poolStartTime) * XusdPerSecond */\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"contracts/staking.sol\":3530:3582  return (poolEndTime - poolStartTime) * XusdPerSecond */\n      swap1\n      pop\n      jump(tag_144)\n        /* \"contracts/staking.sol\":3498:3582  if (_fromTime <= poolStartTime) return (poolEndTime - poolStartTime) * XusdPerSecond */\n    tag_138:\n        /* \"contracts/staking.sol\":3631:3644  XusdPerSecond */\n      sload(0x0a)\n        /* \"contracts/staking.sol\":3618:3627  _fromTime */\n      dup4\n        /* \"contracts/staking.sol\":3604:3615  poolEndTime */\n      sload(0x09)\n        /* \"contracts/staking.sol\":3604:3627  poolEndTime - _fromTime */\n      tag_139\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n        /* \"contracts/staking.sol\":3404:3876  if (_toTime >= poolEndTime) {... */\n    tag_136:\n        /* \"contracts/staking.sol\":3690:3703  poolStartTime */\n      sload(0x08)\n        /* \"contracts/staking.sol\":3679:3686  _toTime */\n      dup3\n        /* \"contracts/staking.sol\":3679:3703  _toTime <= poolStartTime */\n      gt\n        /* \"contracts/staking.sol\":3675:3713  if (_toTime <= poolStartTime) return 0 */\n      tag_145\n      jumpi\n      pop\n        /* \"contracts/staking.sol\":3712:3713  0 */\n      0x00\n        /* \"contracts/staking.sol\":3705:3713  return 0 */\n      jump(tag_144)\n        /* \"contracts/staking.sol\":3675:3713  if (_toTime <= poolStartTime) return 0 */\n    tag_145:\n        /* \"contracts/staking.sol\":3744:3757  poolStartTime */\n      sload(0x08)\n        /* \"contracts/staking.sol\":3731:3740  _fromTime */\n      dup4\n        /* \"contracts/staking.sol\":3731:3757  _fromTime <= poolStartTime */\n      gt\n        /* \"contracts/staking.sol\":3727:3807  if (_fromTime <= poolStartTime) return (_toTime - poolStartTime) * XusdPerSecond */\n      tag_146\n      jumpi\n        /* \"contracts/staking.sol\":3794:3807  XusdPerSecond */\n      sload(0x0a)\n        /* \"contracts/staking.sol\":3777:3790  poolStartTime */\n      sload(0x08)\n        /* \"contracts/staking.sol\":3767:3790  _toTime - poolStartTime */\n      tag_139\n      swap1\n        /* \"contracts/staking.sol\":3767:3774  _toTime */\n      dup5\n        /* \"contracts/staking.sol\":3767:3790  _toTime - poolStartTime */\n      tag_131\n      jump\t// in\n        /* \"contracts/staking.sol\":3727:3807  if (_fromTime <= poolStartTime) return (_toTime - poolStartTime) * XusdPerSecond */\n    tag_146:\n        /* \"contracts/staking.sol\":3852:3865  XusdPerSecond */\n      sload(0x0a)\n        /* \"contracts/staking.sol\":3829:3848  _toTime - _fromTime */\n      tag_139\n        /* \"contracts/staking.sol\":3839:3848  _fromTime */\n      dup5\n        /* \"contracts/staking.sol\":3829:3836  _toTime */\n      dup5\n        /* \"contracts/staking.sol\":3829:3848  _toTime - _fromTime */\n      tag_131\n      jump\t// in\n        /* \"contracts/staking.sol\":3404:3876  if (_toTime >= poolEndTime) {... */\n    tag_144:\n        /* \"contracts/staking.sol\":3256:3882  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":7814:8578  function withdraw(uint256 _pid, uint256 _amount) external {... */\n    tag_53:\n        /* \"contracts/staking.sol\":7882:7897  address _sender */\n      0x00\n        /* \"contracts/staking.sol\":7900:7910  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":7882:7910  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":7920:7941  PoolInfo storage pool */\n      0x00\n        /* \"contracts/staking.sol\":7944:7952  poolInfo */\n      0x05\n        /* \"contracts/staking.sol\":7953:7957  _pid */\n      dup5\n        /* \"contracts/staking.sol\":7944:7958  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_153\n      jumpi\n      tag_153\n      tag_127\n      jump\t// in\n    tag_153:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/staking.sol\":7992:8006  userInfo[_pid] */\n      dup8\n      dup5\n      mstore\n        /* \"contracts/staking.sol\":7944:7958  poolInfo[_pid] */\n      0x06\n        /* \"contracts/staking.sol\":7992:8006  userInfo[_pid] */\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup7\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":7992:8015  userInfo[_pid][_sender] */\n      dup10\n      and\n      dup8\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap4\n      keccak256\n        /* \"contracts/staking.sol\":8033:8044  user.amount */\n      dup1\n      sload\n        /* \"contracts/staking.sol\":7944:7958  poolInfo[_pid] */\n      swap3\n      swap1\n      swap2\n      mul\n      swap1\n      swap3\n      add\n      swap3\n      pop\n      dup5\n      gt\n        /* \"contracts/staking.sol\":8033:8055  user.amount >= _amount */\n      iszero\n        /* \"contracts/staking.sol\":8025:8078  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5586:5588   */\n      0x20\n        /* \"contracts/staking.sol\":8025:8078  require(user.amount >= _amount, \"withdraw: not good\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5568:5589   */\n      mstore\n        /* \"#utility.yul\":5625:5627   */\n      0x12\n        /* \"#utility.yul\":5605:5623   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5598:5628   */\n      mstore\n      shl(0x72, 0x1dda5d1a191c985dce881b9bdd0819dbdbd9)\n        /* \"#utility.yul\":5644:5662   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5637:5685   */\n      mstore\n        /* \"#utility.yul\":5702:5720   */\n      0x64\n      add\n        /* \"contracts/staking.sol\":8025:8078  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_121\n        /* \"#utility.yul\":5384:5726   */\n      jump\n        /* \"contracts/staking.sol\":8025:8078  require(user.amount >= _amount, \"withdraw: not good\") */\n    tag_155:\n        /* \"contracts/staking.sol\":8088:8104  updatePool(_pid) */\n      tag_158\n        /* \"contracts/staking.sol\":8099:8103  _pid */\n      dup6\n        /* \"contracts/staking.sol\":8088:8098  updatePool */\n      tag_56\n        /* \"contracts/staking.sol\":8088:8104  updatePool(_pid) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/staking.sol\":8114:8130  uint256 _pending */\n      0x00\n        /* \"contracts/staking.sol\":8179:8183  user */\n      dup2\n        /* \"contracts/staking.sol\":8179:8194  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/staking.sol\":8172:8176  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/staking.sol\":8148:8152  pool */\n      dup5\n        /* \"contracts/staking.sol\":8148:8168  pool.accXusdPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/staking.sol\":8134:8138  user */\n      dup5\n        /* \"contracts/staking.sol\":8134:8145  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/staking.sol\":8134:8168  user.amount * pool.accXusdPerShare */\n      tag_159\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_159:\n        /* \"contracts/staking.sol\":8133:8176  (user.amount * pool.accXusdPerShare) / 1e18 */\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"contracts/staking.sol\":8133:8194  (user.amount * pool.accXusdPerShare) / 1e18 - user.rewardDebt */\n      tag_162\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_162:\n        /* \"contracts/staking.sol\":8114:8194  uint256 _pending = (user.amount * pool.accXusdPerShare) / 1e18 - user.rewardDebt */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":8208:8220  _pending > 0 */\n      dup1\n      iszero\n        /* \"contracts/staking.sol\":8204:8330  if (_pending > 0) {... */\n      tag_163\n      jumpi\n        /* \"contracts/staking.sol\":8236:8271  safeXusdTransfer(_sender, _pending) */\n      tag_164\n        /* \"contracts/staking.sol\":8253:8260  _sender */\n      dup5\n        /* \"contracts/staking.sol\":8262:8270  _pending */\n      dup3\n        /* \"contracts/staking.sol\":8236:8252  safeXusdTransfer */\n      tag_165\n        /* \"contracts/staking.sol\":8236:8271  safeXusdTransfer(_sender, _pending) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/staking.sol\":8301:8308  _sender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":8290:8319  RewardPaid(_sender, _pending) */\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/staking.sol\":8310:8318  _pending */\n      dup3\n        /* \"contracts/staking.sol\":8290:8319  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      tag_166\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/staking.sol\":8290:8319  RewardPaid(_sender, _pending) */\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/staking.sol\":8204:8330  if (_pending > 0) {... */\n    tag_163:\n        /* \"contracts/staking.sol\":8343:8354  _amount > 0 */\n      dup5\n      iszero\n        /* \"contracts/staking.sol\":8339:8454  if (_amount > 0) {... */\n      tag_167\n      jumpi\n        /* \"contracts/staking.sol\":8385:8392  _amount */\n      dup5\n        /* \"contracts/staking.sol\":8370:8374  user */\n      dup3\n        /* \"contracts/staking.sol\":8370:8381  user.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/staking.sol\":8370:8392  user.amount -= _amount */\n      dup3\n      dup3\n      sload\n      tag_168\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_168:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/staking.sol\":8406:8416  pool.token */\n      dup3\n      sload\n        /* \"contracts/staking.sol\":8406:8443  pool.token.transfer(_sender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":8406:8416  pool.token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/staking.sol\":8406:8425  pool.token.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/staking.sol\":8406:8443  pool.token.transfer(_sender, _amount) */\n      tag_169\n      swap1\n        /* \"contracts/staking.sol\":8426:8433  _sender */\n      dup8\n      swap1\n        /* \"contracts/staking.sol\":8435:8442  _amount */\n      dup10\n      swap1\n        /* \"contracts/staking.sol\":8406:8443  pool.token.transfer(_sender, _amount) */\n      0x04\n      add\n      tag_170\n      jump\t// in\n    tag_169:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      pop\n        /* \"contracts/staking.sol\":8339:8454  if (_amount > 0) {... */\n    tag_167:\n        /* \"contracts/staking.sol\":8496:8516  pool.accXusdPerShare */\n      0x03\n      dup4\n      add\n      sload\n        /* \"contracts/staking.sol\":8482:8493  user.amount */\n      dup3\n      sload\n        /* \"contracts/staking.sol\":8520:8524  1e18 */\n      0x0de0b6b3a7640000\n      swap2\n        /* \"contracts/staking.sol\":8482:8516  user.amount * pool.accXusdPerShare */\n      tag_175\n      swap2\n      tag_141\n      jump\t// in\n    tag_175:\n        /* \"contracts/staking.sol\":8481:8524  (user.amount * pool.accXusdPerShare) / 1e18 */\n      tag_176\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_176:\n        /* \"contracts/staking.sol\":8463:8478  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"contracts/staking.sol\":8463:8524  user.rewardDebt = (user.amount * pool.accXusdPerShare) / 1e18 */\n      sstore\n        /* \"contracts/staking.sol\":8539:8571  Withdraw(_sender, _pid, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/staking.sol\":8557:8561  _pid */\n      dup7\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":8539:8571  Withdraw(_sender, _pid, _amount) */\n      dup7\n      and\n      swap1\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/staking.sol\":8539:8571  Withdraw(_sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/staking.sol\":7872:8578  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/staking.sol\":7814:8578  function withdraw(uint256 _pid, uint256 _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":8765:9600  function updatePool(uint256 _pid) public {... */\n    tag_56:\n        /* \"contracts/staking.sol\":8816:8837  PoolInfo storage pool */\n      0x00\n        /* \"contracts/staking.sol\":8840:8848  poolInfo */\n      0x05\n        /* \"contracts/staking.sol\":8849:8853  _pid */\n      dup3\n        /* \"contracts/staking.sol\":8840:8854  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_180\n      jumpi\n      tag_180\n      tag_127\n      jump\t// in\n    tag_180:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"contracts/staking.sol\":8816:8854  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":8887:8891  pool */\n      dup1\n        /* \"contracts/staking.sol\":8887:8906  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/staking.sol\":8868:8883  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":8868:8906  block.timestamp <= pool.lastRewardTime */\n      gt\n        /* \"contracts/staking.sol\":8864:8939  if (block.timestamp <= pool.lastRewardTime) {... */\n      tag_182\n      jumpi\n        /* \"contracts/staking.sol\":8922:8929  return; */\n      pop\n        /* \"contracts/staking.sol\":8765:9600  function updatePool(uint256 _pid) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":8864:8939  if (block.timestamp <= pool.lastRewardTime) {... */\n    tag_182:\n        /* \"contracts/staking.sol\":8970:8980  pool.token */\n      dup1\n      sload\n        /* \"contracts/staking.sol\":8970:9005  pool.token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/staking.sol\":8948:8967  uint256 tokenSupply */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":8970:8980  pool.token */\n      and\n      swap1\n        /* \"contracts/staking.sol\":8970:8990  pool.token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/staking.sol\":8970:9005  pool.token.balanceOf(address(this)) */\n      tag_183\n      swap1\n        /* \"contracts/staking.sol\":8999:9003  this */\n      address\n      swap1\n        /* \"contracts/staking.sol\":8970:9005  pool.token.balanceOf(address(this)) */\n      0x04\n      add\n      tag_67\n      jump\t// in\n    tag_183:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"contracts/staking.sol\":8948:9005  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":9019:9030  tokenSupply */\n      dup1\n        /* \"contracts/staking.sol\":9034:9035  0 */\n      0x00\n        /* \"contracts/staking.sol\":9019:9035  tokenSupply == 0 */\n      sub\n        /* \"contracts/staking.sol\":9015:9119  if (tokenSupply == 0) {... */\n      tag_188\n      jumpi\n      pop\n        /* \"contracts/staking.sol\":9073:9088  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":9051:9070  pool.lastRewardTime */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"contracts/staking.sol\":9051:9088  pool.lastRewardTime = block.timestamp */\n      sstore\n      pop\n        /* \"contracts/staking.sol\":8765:9600  function updatePool(uint256 _pid) public {... */\n      jump\t// out\n        /* \"contracts/staking.sol\":9015:9119  if (tokenSupply == 0) {... */\n    tag_188:\n        /* \"contracts/staking.sol\":9133:9147  pool.isStarted */\n      0x04\n      dup3\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/staking.sol\":9128:9243  if (!pool.isStarted) {... */\n      tag_189\n      jumpi\n        /* \"contracts/staking.sol\":9163:9177  pool.isStarted */\n      0x04\n      dup3\n      add\n        /* \"contracts/staking.sol\":9163:9184  pool.isStarted = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/staking.sol\":9180:9184  true */\n      0x01\n        /* \"contracts/staking.sol\":9163:9184  pool.isStarted = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/staking.sol\":9217:9232  pool.allocPoint */\n      dup3\n      add\n      sload\n        /* \"contracts/staking.sol\":9198:9213  totalAllocPoint */\n      0x07\n        /* \"contracts/staking.sol\":9198:9232  totalAllocPoint += pool.allocPoint */\n      dup1\n      sload\n        /* \"contracts/staking.sol\":9163:9177  pool.isStarted */\n      0x00\n      swap1\n        /* \"contracts/staking.sol\":9198:9232  totalAllocPoint += pool.allocPoint */\n      tag_190\n      swap1\n        /* \"contracts/staking.sol\":9217:9232  pool.allocPoint */\n      dup5\n      swap1\n        /* \"contracts/staking.sol\":9198:9232  totalAllocPoint += pool.allocPoint */\n      tag_133\n      jump\t// in\n    tag_190:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/staking.sol\":9128:9243  if (!pool.isStarted) {... */\n    tag_189:\n        /* \"contracts/staking.sol\":9256:9271  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/staking.sol\":9256:9275  totalAllocPoint > 0 */\n      iszero\n        /* \"contracts/staking.sol\":9252:9547  if (totalAllocPoint > 0) {... */\n      tag_191\n      jumpi\n        /* \"contracts/staking.sol\":9291:9315  uint256 _generatedReward */\n      0x00\n        /* \"contracts/staking.sol\":9318:9374  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_192\n        /* \"contracts/staking.sol\":9337:9341  pool */\n      dup4\n        /* \"contracts/staking.sol\":9337:9356  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/staking.sol\":9358:9373  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":9318:9336  getGeneratedReward */\n      tag_49\n        /* \"contracts/staking.sol\":9318:9374  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/staking.sol\":9291:9374  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":9388:9407  uint256 _XusdReward */\n      0x00\n        /* \"contracts/staking.sol\":9449:9464  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/staking.sol\":9430:9434  pool */\n      dup5\n        /* \"contracts/staking.sol\":9430:9445  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/staking.sol\":9411:9427  _generatedReward */\n      dup4\n        /* \"contracts/staking.sol\":9411:9445  _generatedReward * pool.allocPoint */\n      tag_193\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_193:\n        /* \"contracts/staking.sol\":9410:9464  (_generatedReward * pool.allocPoint) / totalAllocPoint */\n      tag_194\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_194:\n        /* \"contracts/staking.sol\":9388:9464  uint256 _XusdReward = (_generatedReward * pool.allocPoint) / totalAllocPoint */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":9525:9536  tokenSupply */\n      dup3\n        /* \"contracts/staking.sol\":9503:9521  _XusdReward * 1e18 */\n      tag_195\n        /* \"contracts/staking.sol\":9388:9464  uint256 _XusdReward = (_generatedReward * pool.allocPoint) / totalAllocPoint */\n      dup3\n        /* \"contracts/staking.sol\":9517:9521  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/staking.sol\":9503:9521  _XusdReward * 1e18 */\n      tag_141\n      jump\t// in\n    tag_195:\n        /* \"contracts/staking.sol\":9502:9536  (_XusdReward * 1e18) / tokenSupply */\n      tag_196\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_196:\n        /* \"contracts/staking.sol\":9478:9482  pool */\n      dup5\n        /* \"contracts/staking.sol\":9478:9498  pool.accXusdPerShare */\n      0x03\n      add\n      0x00\n        /* \"contracts/staking.sol\":9478:9536  pool.accXusdPerShare += (_XusdReward * 1e18) / tokenSupply */\n      dup3\n      dup3\n      sload\n      tag_197\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_197:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/staking.sol\":9252:9547  if (totalAllocPoint > 0) {... */\n    tag_191:\n      pop\n        /* \"contracts/staking.sol\":9578:9593  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":9556:9575  pool.lastRewardTime */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"contracts/staking.sol\":9556:9593  pool.lastRewardTime = block.timestamp */\n      sstore\n      pop\n        /* \"contracts/staking.sol\":8765:9600  function updatePool(uint256 _pid) public {... */\n      jump\t// out\n        /* \"contracts/staking.sol\":6524:6891  function emergencyWithdraw(uint256 _pid) external {... */\n    tag_59:\n        /* \"contracts/staking.sol\":6584:6605  PoolInfo storage pool */\n      0x00\n        /* \"contracts/staking.sol\":6608:6616  poolInfo */\n      0x05\n        /* \"contracts/staking.sol\":6617:6621  _pid */\n      dup3\n        /* \"contracts/staking.sol\":6608:6622  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_200\n      tag_127\n      jump\t// in\n    tag_200:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/staking.sol\":6656:6670  userInfo[_pid] */\n      dup6\n      dup5\n      mstore\n        /* \"contracts/staking.sol\":6608:6622  poolInfo[_pid] */\n      0x06\n        /* \"contracts/staking.sol\":6656:6670  userInfo[_pid] */\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup7\n      keccak256\n        /* \"contracts/staking.sol\":6671:6681  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":6656:6682  userInfo[_pid][msg.sender] */\n      dup1\n      dup9\n      mstore\n      swap5\n      mstore\n      dup1\n      dup7\n      keccak256\n        /* \"contracts/staking.sol\":6710:6721  user.amount */\n      dup1\n      sload\n        /* \"contracts/staking.sol\":6731:6746  user.amount = 0 */\n      dup8\n      dup3\n      sstore\n      0x01\n        /* \"contracts/staking.sol\":6756:6771  user.rewardDebt */\n      dup3\n      add\n        /* \"contracts/staking.sol\":6756:6775  user.rewardDebt = 0 */\n      swap8\n      swap1\n      swap8\n      sstore\n        /* \"contracts/staking.sol\":6608:6622  poolInfo[_pid] */\n      swap2\n      swap1\n      swap5\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/staking.sol\":6785:6795  pool.token */\n      dup1\n      sload\n        /* \"contracts/staking.sol\":6785:6825  pool.token.transfer(msg.sender, _amount) */\n      swap4\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/staking.sol\":6608:6622  poolInfo[_pid] */\n      swap1\n      swap6\n      pop\n        /* \"contracts/staking.sol\":6656:6682  userInfo[_pid][msg.sender] */\n      swap1\n      swap4\n        /* \"contracts/staking.sol\":6710:6721  user.amount */\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":6785:6795  pool.token */\n      and\n      swap2\n        /* \"contracts/staking.sol\":6785:6804  pool.token.transfer */\n      0xa9059cbb\n      swap2\n        /* \"contracts/staking.sol\":6785:6825  pool.token.transfer(msg.sender, _amount) */\n      tag_202\n      swap2\n        /* \"contracts/staking.sol\":6671:6681  msg.sender */\n      swap1\n        /* \"contracts/staking.sol\":6710:6721  user.amount */\n      dup6\n      swap1\n        /* \"contracts/staking.sol\":6785:6825  pool.token.transfer(msg.sender, _amount) */\n      0x04\n      add\n      tag_170\n      jump\t// in\n    tag_202:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_204\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_205\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_205:\n      pop\n        /* \"contracts/staking.sol\":6840:6884  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/staking.sol\":6870:6874  _pid */\n      dup5\n      swap1\n        /* \"contracts/staking.sol\":6858:6868  msg.sender */\n      caller\n      swap1\n        /* \"contracts/staking.sol\":6840:6884  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/staking.sol\":6840:6884  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/staking.sol\":6574:6891  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/staking.sol\":6524:6891  function emergencyWithdraw(uint256 _pid) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":6897:7387  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {... */\n    tag_63:\n        /* \"contracts/staking.sol\":10002:10010  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/staking.sol\":10014:10024  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":10002:10024  operator == msg.sender */\n      eq\n        /* \"contracts/staking.sol\":9994:10072  require(operator == msg.sender, \"XusdGenesisPool: caller is not the operator\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_208:\n        /* \"contracts/staking.sol\":7032:7043  poolEndTime */\n      sload(0x09)\n        /* \"contracts/staking.sol\":7032:7053  poolEndTime + 30 days */\n      tag_211\n      swap1\n        /* \"contracts/staking.sol\":7046:7053  30 days */\n      0x278d00\n        /* \"contracts/staking.sol\":7032:7053  poolEndTime + 30 days */\n      tag_133\n      jump\t// in\n    tag_211:\n        /* \"contracts/staking.sol\":7014:7029  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":7014:7053  block.timestamp < poolEndTime + 30 days */\n      lt\n        /* \"contracts/staking.sol\":7010:7344  if (block.timestamp < poolEndTime + 30 days) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"contracts/staking.sol\":7087:7091  Xusd */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/staking.sol\":7077:7091  _token != Xusd */\n      swap1\n      dup5\n      and\n      sub\n        /* \"contracts/staking.sol\":7069:7100  require(_token != Xusd, \"Xusd\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n        /* \"#utility.yul\":6873:6875   */\n      0x20\n        /* \"#utility.yul\":6855:6876   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6912:6913   */\n      0x04\n        /* \"#utility.yul\":6892:6910   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6885:6914   */\n      mstore\n      shl(0xe2, 0x161d5cd9)\n        /* \"#utility.yul\":6945:6947   */\n      0x40\n        /* \"#utility.yul\":6930:6948   */\n      dup3\n      add\n        /* \"#utility.yul\":6923:6957   */\n      mstore\n        /* \"#utility.yul\":6989:6991   */\n      0x60\n        /* \"#utility.yul\":6974:6992   */\n      add\n      swap1\n        /* \"#utility.yul\":6671:6998   */\n      jump\n        /* \"contracts/staking.sol\":7069:7100  require(_token != Xusd, \"Xusd\") */\n    tag_213:\n        /* \"contracts/staking.sol\":7131:7139  poolInfo */\n      0x05\n        /* \"contracts/staking.sol\":7131:7146  poolInfo.length */\n      sload\n        /* \"contracts/staking.sol\":7114:7128  uint256 length */\n      0x00\n        /* \"contracts/staking.sol\":7160:7334  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_216:\n        /* \"contracts/staking.sol\":7188:7194  length */\n      dup2\n        /* \"contracts/staking.sol\":7182:7185  pid */\n      dup2\n        /* \"contracts/staking.sol\":7182:7194  pid < length */\n      lt\n        /* \"contracts/staking.sol\":7160:7334  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"contracts/staking.sol\":7221:7242  PoolInfo storage pool */\n      0x00\n        /* \"contracts/staking.sol\":7245:7253  poolInfo */\n      0x05\n        /* \"contracts/staking.sol\":7254:7257  pid */\n      dup3\n        /* \"contracts/staking.sol\":7245:7258  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_220\n      jumpi\n      tag_220\n      tag_127\n      jump\t// in\n    tag_220:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/staking.sol\":7294:7304  pool.token */\n      dup1\n      sload\n        /* \"contracts/staking.sol\":7245:7258  poolInfo[pid] */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":7294:7304  pool.token */\n      swap1\n      dup2\n      and\n        /* \"contracts/staking.sol\":7284:7304  _token != pool.token */\n      swap1\n      dup8\n      and\n      sub\n        /* \"contracts/staking.sol\":7276:7319  require(_token != pool.token, \"pool.token\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7205:7207   */\n      0x20\n        /* \"contracts/staking.sol\":7276:7319  require(_token != pool.token, \"pool.token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7187:7208   */\n      mstore\n        /* \"#utility.yul\":7244:7246   */\n      0x0a\n        /* \"#utility.yul\":7224:7242   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7217:7247   */\n      mstore\n      shl(0xb1, 0x3837b7b6173a37b5b2b7)\n        /* \"#utility.yul\":7263:7281   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7256:7296   */\n      mstore\n        /* \"#utility.yul\":7313:7331   */\n      0x64\n      add\n        /* \"contracts/staking.sol\":7276:7319  require(_token != pool.token, \"pool.token\") */\n      tag_121\n        /* \"#utility.yul\":7003:7337   */\n      jump\n        /* \"contracts/staking.sol\":7276:7319  require(_token != pool.token, \"pool.token\") */\n    tag_222:\n      pop\n        /* \"contracts/staking.sol\":7196:7201  ++pid */\n      0x01\n      add\n        /* \"contracts/staking.sol\":7160:7334  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_216)\n    tag_217:\n      pop\n        /* \"contracts/staking.sol\":7055:7344  {... */\n      pop\n        /* \"contracts/staking.sol\":7010:7344  if (block.timestamp < poolEndTime + 30 days) {... */\n    tag_212:\n        /* \"contracts/staking.sol\":7353:7380  _token.transfer(to, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":7353:7368  _token.transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"contracts/staking.sol\":7353:7380  _token.transfer(to, amount) */\n      tag_225\n      swap1\n        /* \"contracts/staking.sol\":7369:7371  to */\n      dup5\n      swap1\n        /* \"contracts/staking.sol\":7373:7379  amount */\n      dup7\n      swap1\n        /* \"contracts/staking.sol\":7353:7380  _token.transfer(to, amount) */\n      0x04\n      add\n      tag_170\n      jump\t// in\n    tag_225:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_228:\n      pop\n        /* \"contracts/staking.sol\":6897:7387  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":2398:2519  function comissionToken(uint256 index) external view returns (address) {... */\n    tag_73:\n        /* \"contracts/staking.sol\":2460:2467  address */\n      0x00\n        /* \"contracts/staking.sol\":2486:2512  _comissionTokens.at(index) */\n      tag_144\n        /* \"contracts/staking.sol\":2460:2467  address */\n      dup2\n        /* \"contracts/staking.sol\":2506:2511  index */\n      dup4\n        /* \"contracts/staking.sol\":2486:2505  _comissionTokens.at */\n      tag_231\n        /* \"contracts/staking.sol\":2486:2512  _comissionTokens.at(index) */\n      jump\t// in\n        /* \"contracts/staking.sol\":4150:5358  function add(... */\n    tag_84:\n        /* \"contracts/staking.sol\":10002:10010  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/staking.sol\":10014:10024  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":10002:10024  operator == msg.sender */\n      eq\n        /* \"contracts/staking.sol\":9994:10072  require(operator == msg.sender, \"XusdGenesisPool: caller is not the operator\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_233:\n        /* \"contracts/staking.sol\":4341:4367  checkPoolDuplicate(_token) */\n      tag_236\n        /* \"contracts/staking.sol\":4360:4366  _token */\n      dup5\n        /* \"contracts/staking.sol\":4341:4359  checkPoolDuplicate */\n      tag_237\n        /* \"contracts/staking.sol\":4341:4367  checkPoolDuplicate(_token) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/staking.sol\":4381:4392  _withUpdate */\n      dup3\n        /* \"contracts/staking.sol\":4377:4436  if (_withUpdate) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"contracts/staking.sol\":4408:4425  massUpdatePools() */\n      tag_239\n        /* \"contracts/staking.sol\":4408:4423  massUpdatePools */\n      tag_86\n        /* \"contracts/staking.sol\":4408:4425  massUpdatePools() */\n      jump\t// in\n    tag_239:\n        /* \"contracts/staking.sol\":4467:4480  poolStartTime */\n      sload(0x08)\n        /* \"contracts/staking.sol\":4449:4464  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":4449:4480  block.timestamp < poolStartTime */\n      lt\n        /* \"contracts/staking.sol\":4445:4862  if (block.timestamp < poolStartTime) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"contracts/staking.sol\":4500:4515  _lastRewardTime */\n      dup2\n        /* \"contracts/staking.sol\":4519:4520  0 */\n      0x00\n        /* \"contracts/staking.sol\":4500:4520  _lastRewardTime == 0 */\n      sub\n        /* \"contracts/staking.sol\":4496:4693  if (_lastRewardTime == 0) {... */\n      tag_241\n      jumpi\n        /* \"contracts/staking.sol\":4558:4571  poolStartTime */\n      sload(0x08)\n        /* \"contracts/staking.sol\":4540:4571  _lastRewardTime = poolStartTime */\n      swap2\n      pop\n        /* \"contracts/staking.sol\":4445:4862  if (block.timestamp < poolStartTime) {... */\n      jump(tag_246)\n        /* \"contracts/staking.sol\":4496:4693  if (_lastRewardTime == 0) {... */\n    tag_241:\n        /* \"contracts/staking.sol\":4614:4627  poolStartTime */\n      sload(0x08)\n        /* \"contracts/staking.sol\":4596:4611  _lastRewardTime */\n      dup3\n        /* \"contracts/staking.sol\":4596:4627  _lastRewardTime < poolStartTime */\n      lt\n        /* \"contracts/staking.sol\":4592:4693  if (_lastRewardTime < poolStartTime) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"contracts/staking.sol\":4665:4678  poolStartTime */\n      sload(0x08)\n        /* \"contracts/staking.sol\":4647:4678  _lastRewardTime = poolStartTime */\n      swap2\n      pop\n        /* \"contracts/staking.sol\":4592:4693  if (_lastRewardTime < poolStartTime) {... */\n    tag_243:\n        /* \"contracts/staking.sol\":4445:4862  if (block.timestamp < poolStartTime) {... */\n      jump(tag_246)\n    tag_240:\n        /* \"contracts/staking.sol\":4727:4747  _lastRewardTime == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"contracts/staking.sol\":4727:4784  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n      tag_245\n      jumpi\n      pop\n        /* \"contracts/staking.sol\":4769:4784  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":4751:4766  _lastRewardTime */\n      dup3\n        /* \"contracts/staking.sol\":4751:4784  _lastRewardTime < block.timestamp */\n      lt\n        /* \"contracts/staking.sol\":4727:4784  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n    tag_245:\n        /* \"contracts/staking.sol\":4723:4852  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"contracts/staking.sol\":4822:4837  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":4804:4837  _lastRewardTime = block.timestamp */\n      swap2\n      pop\n        /* \"contracts/staking.sol\":4723:4852  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {... */\n    tag_246:\n        /* \"contracts/staking.sol\":4871:4886  bool _isStarted */\n      0x00\n        /* \"contracts/staking.sol\":4909:4922  poolStartTime */\n      sload(0x08)\n        /* \"contracts/staking.sol\":4890:4905  _lastRewardTime */\n      dup4\n        /* \"contracts/staking.sol\":4890:4922  _lastRewardTime <= poolStartTime */\n      gt\n      iszero\n        /* \"contracts/staking.sol\":4889:4963  (_lastRewardTime <= poolStartTime) || (_lastRewardTime <= block.timestamp) */\n      dup1\n      tag_247\n      jumpi\n      pop\n        /* \"contracts/staking.sol\":4947:4962  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":4928:4943  _lastRewardTime */\n      dup4\n        /* \"contracts/staking.sol\":4928:4962  _lastRewardTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/staking.sol\":4889:4963  (_lastRewardTime <= poolStartTime) || (_lastRewardTime <= block.timestamp) */\n    tag_247:\n        /* \"contracts/staking.sol\":5000:5261  PoolInfo({... */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup11\n      dup2\n      mstore\n      swap3\n      dup3\n      add\n      dup8\n      dup2\n      mstore\n      0x00\n      0x60\n      dup5\n      add\n      dup2\n      dup2\n      mstore\n      dup7\n      iszero\n      dup1\n      iszero\n      0x80\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n      0xa0\n      dup8\n      add\n      dup12\n      dup2\n      mstore\n        /* \"contracts/staking.sol\":4973:4981  poolInfo */\n      0x05\n        /* \"contracts/staking.sol\":4973:5271  poolInfo.push(... */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap6\n      mstore\n      swap7\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n      0x06\n      swap1\n      swap6\n      mul\n      swap5\n      dup6\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap2\n      swap1\n      swap8\n      and\n      or\n      swap1\n      swap6\n      sstore\n      swap6\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1\n      dup4\n      add\n      sstore\n      swap2\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2\n      dup3\n      add\n      sstore\n      swap1\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3\n      dup3\n      add\n      sstore\n      swap1\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4\n      dup3\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      swap1\n      mload\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db5\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/staking.sol\":5000:5261  PoolInfo({... */\n      swap1\n      swap2\n      pop\n        /* \"contracts/staking.sol\":5281:5352  if (_isStarted) {... */\n      tag_249\n      jumpi\n        /* \"contracts/staking.sol\":5330:5341  _allocPoint */\n      dup6\n        /* \"contracts/staking.sol\":5311:5326  totalAllocPoint */\n      0x07\n      0x00\n        /* \"contracts/staking.sol\":5311:5341  totalAllocPoint += _allocPoint */\n      dup3\n      dup3\n      sload\n      tag_250\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_250:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/staking.sol\":5281:5352  if (_isStarted) {... */\n    tag_249:\n        /* \"contracts/staking.sol\":4331:5358  {... */\n      pop\n        /* \"contracts/staking.sol\":4150:5358  function add(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":8584:8759  function massUpdatePools() public {... */\n    tag_86:\n        /* \"contracts/staking.sol\":8645:8653  poolInfo */\n      0x05\n        /* \"contracts/staking.sol\":8645:8660  poolInfo.length */\n      sload\n        /* \"contracts/staking.sol\":8628:8642  uint256 length */\n      0x00\n        /* \"contracts/staking.sol\":8670:8753  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_252:\n        /* \"contracts/staking.sol\":8698:8704  length */\n      dup2\n        /* \"contracts/staking.sol\":8692:8695  pid */\n      dup2\n        /* \"contracts/staking.sol\":8692:8704  pid < length */\n      lt\n        /* \"contracts/staking.sol\":8670:8753  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"contracts/staking.sol\":8727:8742  updatePool(pid) */\n      tag_255\n        /* \"contracts/staking.sol\":8738:8741  pid */\n      dup2\n        /* \"contracts/staking.sol\":8727:8737  updatePool */\n      tag_56\n        /* \"contracts/staking.sol\":8727:8742  updatePool(pid) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/staking.sol\":8706:8711  ++pid */\n      0x01\n      add\n        /* \"contracts/staking.sol\":8670:8753  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_252)\n    tag_253:\n      pop\n        /* \"contracts/staking.sol\":8618:8759  {... */\n      pop\n        /* \"contracts/staking.sol\":8584:8759  function massUpdatePools() public {... */\n      jump\t// out\n        /* \"contracts/staking.sol\":2525:3250  function pendingXusd(uint256 _pid, address _user) external view returns (uint256) {... */\n    tag_93:\n        /* \"contracts/staking.sol\":2598:2605  uint256 */\n      0x00\n        /* \"contracts/staking.sol\":2617:2638  PoolInfo storage pool */\n      0x00\n        /* \"contracts/staking.sol\":2641:2649  poolInfo */\n      0x05\n        /* \"contracts/staking.sol\":2650:2654  _pid */\n      dup5\n        /* \"contracts/staking.sol\":2641:2655  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_258\n      jumpi\n      tag_258\n      tag_127\n      jump\t// in\n    tag_258:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/staking.sol\":2689:2703  userInfo[_pid] */\n      dup8\n      dup5\n      mstore\n        /* \"contracts/staking.sol\":2641:2655  poolInfo[_pid] */\n      0x06\n        /* \"contracts/staking.sol\":2689:2703  userInfo[_pid] */\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup7\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":2689:2710  userInfo[_pid][_user] */\n      dup11\n      dup2\n      and\n      dup9\n      mstore\n      swap5\n      mstore\n      dup1\n      dup7\n      keccak256\n        /* \"contracts/staking.sol\":2641:2655  poolInfo[_pid] */\n      swap5\n      swap1\n      swap2\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/staking.sol\":2746:2766  pool.accXusdPerShare */\n      0x03\n      dup2\n      add\n      sload\n        /* \"contracts/staking.sol\":2798:2808  pool.token */\n      dup2\n      sload\n        /* \"contracts/staking.sol\":2798:2833  pool.token.balanceOf(address(this)) */\n      swap3\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/staking.sol\":2641:2655  poolInfo[_pid] */\n      swap2\n      swap7\n      pop\n        /* \"contracts/staking.sol\":2689:2710  userInfo[_pid][_user] */\n      swap4\n      swap5\n        /* \"contracts/staking.sol\":2641:2655  poolInfo[_pid] */\n      swap3\n        /* \"contracts/staking.sol\":2798:2808  pool.token */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/staking.sol\":2798:2818  pool.token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/staking.sol\":2798:2833  pool.token.balanceOf(address(this)) */\n      tag_260\n      swap1\n        /* \"contracts/staking.sol\":2827:2831  this */\n      address\n      swap1\n        /* \"contracts/staking.sol\":2798:2833  pool.token.balanceOf(address(this)) */\n      0x04\n      add\n      tag_67\n      jump\t// in\n    tag_260:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_262:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_263\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_263:\n        /* \"contracts/staking.sol\":2776:2833  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":2865:2869  pool */\n      dup4\n        /* \"contracts/staking.sol\":2865:2884  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/staking.sol\":2847:2862  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":2847:2884  block.timestamp > pool.lastRewardTime */\n      gt\n        /* \"contracts/staking.sol\":2847:2904  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n      dup1\n      iszero\n      tag_264\n      jumpi\n      pop\n        /* \"contracts/staking.sol\":2888:2904  tokenSupply != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/staking.sol\":2847:2904  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n    tag_264:\n        /* \"contracts/staking.sol\":2843:3171  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {... */\n      iszero\n      tag_265\n      jumpi\n        /* \"contracts/staking.sol\":2920:2944  uint256 _generatedReward */\n      0x00\n        /* \"contracts/staking.sol\":2947:3003  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_266\n        /* \"contracts/staking.sol\":2966:2970  pool */\n      dup6\n        /* \"contracts/staking.sol\":2966:2985  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/staking.sol\":2987:3002  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":2947:2965  getGeneratedReward */\n      tag_49\n        /* \"contracts/staking.sol\":2947:3003  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/staking.sol\":2920:3003  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":3017:3036  uint256 _XusdReward */\n      0x00\n        /* \"contracts/staking.sol\":3078:3093  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/staking.sol\":3059:3063  pool */\n      dup7\n        /* \"contracts/staking.sol\":3059:3074  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/staking.sol\":3040:3056  _generatedReward */\n      dup4\n        /* \"contracts/staking.sol\":3040:3074  _generatedReward * pool.allocPoint */\n      tag_267\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_267:\n        /* \"contracts/staking.sol\":3039:3093  (_generatedReward * pool.allocPoint) / totalAllocPoint */\n      tag_268\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_268:\n        /* \"contracts/staking.sol\":3017:3093  uint256 _XusdReward = (_generatedReward * pool.allocPoint) / totalAllocPoint */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":3149:3160  tokenSupply */\n      dup3\n        /* \"contracts/staking.sol\":3127:3145  _XusdReward * 1e18 */\n      tag_269\n        /* \"contracts/staking.sol\":3017:3093  uint256 _XusdReward = (_generatedReward * pool.allocPoint) / totalAllocPoint */\n      dup3\n        /* \"contracts/staking.sol\":3141:3145  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/staking.sol\":3127:3145  _XusdReward * 1e18 */\n      tag_141\n      jump\t// in\n    tag_269:\n        /* \"contracts/staking.sol\":3126:3160  (_XusdReward * 1e18) / tokenSupply */\n      tag_270\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_270:\n        /* \"contracts/staking.sol\":3107:3160  accXusdPerShare += (_XusdReward * 1e18) / tokenSupply */\n      tag_271\n      swap1\n      dup6\n      tag_133\n      jump\t// in\n    tag_271:\n      swap4\n      pop\n        /* \"contracts/staking.sol\":2906:3171  {... */\n      pop\n      pop\n        /* \"contracts/staking.sol\":2843:3171  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {... */\n    tag_265:\n        /* \"contracts/staking.sol\":3228:3243  user.rewardDebt */\n      0x01\n      dup4\n      add\n      sload\n        /* \"contracts/staking.sol\":3188:3199  user.amount */\n      dup4\n      sload\n        /* \"contracts/staking.sol\":3221:3225  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"contracts/staking.sol\":3188:3217  user.amount * accXusdPerShare */\n      tag_272\n      swap1\n        /* \"contracts/staking.sol\":3202:3217  accXusdPerShare */\n      dup6\n      swap1\n        /* \"contracts/staking.sol\":3188:3217  user.amount * accXusdPerShare */\n      tag_141\n      jump\t// in\n    tag_272:\n        /* \"contracts/staking.sol\":3187:3225  (user.amount * accXusdPerShare) / 1e18 */\n      tag_273\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_273:\n        /* \"contracts/staking.sol\":3187:3243  (user.amount * accXusdPerShare) / 1e18 - user.rewardDebt */\n      tag_274\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_274:\n        /* \"contracts/staking.sol\":3180:3243  return (user.amount * accXusdPerShare) / 1e18 - user.rewardDebt */\n      swap8\n        /* \"contracts/staking.sol\":2525:3250  function pendingXusd(uint256 _pid, address _user) external view returns (uint256) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":2279:2392  function comissionTokensCount() external view returns (uint256) {... */\n    tag_96:\n        /* \"contracts/staking.sol\":2334:2341  uint256 */\n      0x00\n        /* \"contracts/staking.sol\":2360:2385  _comissionTokens.length() */\n      tag_276\n        /* \"contracts/staking.sol\":2360:2376  _comissionTokens */\n      0x00\n        /* \"contracts/staking.sol\":2360:2383  _comissionTokens.length */\n      tag_277\n        /* \"contracts/staking.sol\":2360:2385  _comissionTokens.length() */\n      jump\t// in\n    tag_276:\n        /* \"contracts/staking.sol\":2353:2385  return _comissionTokens.length() */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":2279:2392  function comissionTokensCount() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/staking.sol\":7709:7808  function setOperator(address _operator) external onlyOperator {... */\n    tag_109:\n        /* \"contracts/staking.sol\":10002:10010  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/staking.sol\":10014:10024  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":10002:10024  operator == msg.sender */\n      eq\n        /* \"contracts/staking.sol\":9994:10072  require(operator == msg.sender, \"XusdGenesisPool: caller is not the operator\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_279:\n        /* \"contracts/staking.sol\":7781:7789  operator */\n      0x03\n        /* \"contracts/staking.sol\":7781:7801  operator = _operator */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/staking.sol\":7709:7808  function setOperator(address _operator) external onlyOperator {... */\n      jump\t// out\n        /* \"contracts/staking.sol\":5364:6518  function deposit(uint256 _pid, uint256 _amount) external {... */\n    tag_112:\n        /* \"contracts/staking.sol\":5431:5446  address _sender */\n      0x00\n        /* \"contracts/staking.sol\":5449:5459  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":5431:5459  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":5469:5490  PoolInfo storage pool */\n      0x00\n        /* \"contracts/staking.sol\":5493:5501  poolInfo */\n      0x05\n        /* \"contracts/staking.sol\":5502:5506  _pid */\n      dup5\n        /* \"contracts/staking.sol\":5493:5507  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_284\n      jumpi\n      tag_284\n      tag_127\n      jump\t// in\n    tag_284:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/staking.sol\":5541:5555  userInfo[_pid] */\n      dup8\n      dup5\n      mstore\n        /* \"contracts/staking.sol\":5493:5507  poolInfo[_pid] */\n      0x06\n        /* \"contracts/staking.sol\":5541:5555  userInfo[_pid] */\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup7\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":5541:5564  userInfo[_pid][_sender] */\n      dup10\n      and\n      dup8\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap4\n      keccak256\n        /* \"contracts/staking.sol\":5493:5507  poolInfo[_pid] */\n      swap2\n      mul\n      swap1\n      swap2\n      add\n      swap2\n      pop\n        /* \"contracts/staking.sol\":5574:5590  updatePool(_pid) */\n      tag_286\n        /* \"contracts/staking.sol\":5550:5554  _pid */\n      dup6\n        /* \"contracts/staking.sol\":5574:5584  updatePool */\n      tag_56\n        /* \"contracts/staking.sol\":5574:5590  updatePool(_pid) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/staking.sol\":5604:5615  user.amount */\n      dup1\n      sload\n        /* \"contracts/staking.sol\":5604:5619  user.amount > 0 */\n      iszero\n        /* \"contracts/staking.sol\":5600:5877  if (user.amount > 0) {... */\n      tag_287\n      jumpi\n        /* \"contracts/staking.sol\":5635:5651  uint256 _pending */\n      0x00\n        /* \"contracts/staking.sol\":5700:5704  user */\n      dup2\n        /* \"contracts/staking.sol\":5700:5715  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/staking.sol\":5693:5697  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/staking.sol\":5669:5673  pool */\n      dup5\n        /* \"contracts/staking.sol\":5669:5689  pool.accXusdPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/staking.sol\":5655:5659  user */\n      dup5\n        /* \"contracts/staking.sol\":5655:5666  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/staking.sol\":5655:5689  user.amount * pool.accXusdPerShare */\n      tag_288\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_288:\n        /* \"contracts/staking.sol\":5654:5697  (user.amount * pool.accXusdPerShare) / 1e18 */\n      tag_289\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_289:\n        /* \"contracts/staking.sol\":5654:5715  (user.amount * pool.accXusdPerShare) / 1e18 - user.rewardDebt */\n      tag_290\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_290:\n        /* \"contracts/staking.sol\":5635:5715  uint256 _pending = (user.amount * pool.accXusdPerShare) / 1e18 - user.rewardDebt */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":5733:5745  _pending > 0 */\n      dup1\n      iszero\n        /* \"contracts/staking.sol\":5729:5867  if (_pending > 0) {... */\n      tag_291\n      jumpi\n        /* \"contracts/staking.sol\":5765:5800  safeXusdTransfer(_sender, _pending) */\n      tag_292\n        /* \"contracts/staking.sol\":5782:5789  _sender */\n      dup5\n        /* \"contracts/staking.sol\":5791:5799  _pending */\n      dup3\n        /* \"contracts/staking.sol\":5765:5781  safeXusdTransfer */\n      tag_165\n        /* \"contracts/staking.sol\":5765:5800  safeXusdTransfer(_sender, _pending) */\n      jump\t// in\n    tag_292:\n        /* \"contracts/staking.sol\":5834:5841  _sender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":5823:5852  RewardPaid(_sender, _pending) */\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/staking.sol\":5843:5851  _pending */\n      dup3\n        /* \"contracts/staking.sol\":5823:5852  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      tag_293\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/staking.sol\":5823:5852  RewardPaid(_sender, _pending) */\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/staking.sol\":5729:5867  if (_pending > 0) {... */\n    tag_291:\n        /* \"contracts/staking.sol\":5621:5877  {... */\n      pop\n        /* \"contracts/staking.sol\":5600:5877  if (user.amount > 0) {... */\n    tag_287:\n        /* \"contracts/staking.sol\":5932:5943  user.amount */\n      dup1\n      sload\n        /* \"contracts/staking.sol\":5914:5929  pool.maxDeposit */\n      0x05\n      dup4\n      add\n      sload\n        /* \"contracts/staking.sol\":5886:5911  uint256 possibleToDeposit */\n      0x00\n      swap2\n        /* \"contracts/staking.sol\":5914:5943  pool.maxDeposit - user.amount */\n      tag_294\n      swap2\n      tag_131\n      jump\t// in\n    tag_294:\n        /* \"contracts/staking.sol\":5886:5943  uint256 possibleToDeposit = pool.maxDeposit - user.amount */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":5953:5967  uint256 amount */\n      0x00\n        /* \"contracts/staking.sol\":5980:5997  possibleToDeposit */\n      dup2\n        /* \"contracts/staking.sol\":5970:5977  _amount */\n      dup7\n        /* \"contracts/staking.sol\":5970:5997  _amount > possibleToDeposit */\n      gt\n        /* \"contracts/staking.sol\":5970:6027  _amount > possibleToDeposit ? possibleToDeposit : _amount */\n      tag_295\n      jumpi\n        /* \"contracts/staking.sol\":6020:6027  _amount */\n      dup6\n        /* \"contracts/staking.sol\":5970:6027  _amount > possibleToDeposit ? possibleToDeposit : _amount */\n      jump(tag_296)\n    tag_295:\n        /* \"contracts/staking.sol\":6000:6017  possibleToDeposit */\n      dup2\n        /* \"contracts/staking.sol\":5970:6027  _amount > possibleToDeposit ? possibleToDeposit : _amount */\n    tag_296:\n        /* \"contracts/staking.sol\":5953:6027  uint256 amount = _amount > possibleToDeposit ? possibleToDeposit : _amount */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":6041:6051  amount > 0 */\n      dup1\n      iszero\n        /* \"contracts/staking.sol\":6037:6396  if (amount > 0) {... */\n      tag_310\n      jumpi\n        /* \"contracts/staking.sol\":6067:6077  pool.token */\n      dup4\n      sload\n        /* \"contracts/staking.sol\":6067:6122  pool.token.transferFrom(_sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7562:7594   */\n      dup8\n      dup2\n      and\n        /* \"contracts/staking.sol\":6067:6122  pool.token.transferFrom(_sender, address(this), amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7544:7595   */\n      mstore\n        /* \"contracts/staking.sol\":6108:6112  this */\n      address\n        /* \"#utility.yul\":7611:7629   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7604:7664   */\n      mstore\n        /* \"#utility.yul\":7680:7698   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7673:7707   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/staking.sol\":6067:6077  pool.token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/staking.sol\":6067:6090  pool.token.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":7517:7535   */\n      0x64\n      add\n        /* \"contracts/staking.sol\":6067:6122  pool.token.transferFrom(_sender, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_301\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_301:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_302\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_302:\n      pop\n        /* \"contracts/staking.sol\":6174:6184  pool.token */\n      dup4\n      sload\n        /* \"contracts/staking.sol\":6140:6186  _comissionTokens.contains(address(pool.token)) */\n      tag_303\n      swap1\n        /* \"contracts/staking.sol\":6174:6184  pool.token */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/staking.sol\":6140:6165  _comissionTokens.contains */\n      tag_304\n        /* \"contracts/staking.sol\":6140:6186  _comissionTokens.contains(address(pool.token)) */\n      jump\t// in\n    tag_303:\n        /* \"contracts/staking.sol\":6136:6386  if (_comissionTokens.contains(address(pool.token))) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"contracts/staking.sol\":6283:6299  comissionPercent */\n      sload(0x02)\n        /* \"contracts/staking.sol\":6224:6229  10000 */\n      0x2710\n      swap1\n      dup2\n      swap1\n        /* \"contracts/staking.sol\":6273:6299  hundred - comissionPercent */\n      tag_306\n      swap1\n        /* \"contracts/staking.sol\":6224:6229  10000 */\n      dup3\n        /* \"contracts/staking.sol\":6273:6299  hundred - comissionPercent */\n      tag_131\n      jump\t// in\n    tag_306:\n        /* \"contracts/staking.sol\":6263:6300  amount * (hundred - comissionPercent) */\n      tag_307\n      swap1\n        /* \"contracts/staking.sol\":6263:6269  amount */\n      dup5\n        /* \"contracts/staking.sol\":6263:6300  amount * (hundred - comissionPercent) */\n      tag_141\n      jump\t// in\n    tag_307:\n        /* \"contracts/staking.sol\":6262:6311  (amount * (hundred - comissionPercent)) / hundred */\n      tag_308\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_308:\n        /* \"contracts/staking.sol\":6247:6251  user */\n      dup5\n        /* \"contracts/staking.sol\":6247:6258  user.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/staking.sol\":6247:6311  user.amount += (amount * (hundred - comissionPercent)) / hundred */\n      dup3\n      dup3\n      sload\n      tag_309\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_309:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/staking.sol\":6136:6386  if (_comissionTokens.contains(address(pool.token))) {... */\n      tag_310\n      swap2\n      pop\n      pop\n      jump\n    tag_305:\n        /* \"contracts/staking.sol\":6365:6371  amount */\n      dup1\n        /* \"contracts/staking.sol\":6350:6354  user */\n      dup4\n        /* \"contracts/staking.sol\":6350:6361  user.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/staking.sol\":6350:6371  user.amount += amount */\n      dup3\n      dup3\n      sload\n      tag_311\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_311:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/staking.sol\":6136:6386  if (_comissionTokens.contains(address(pool.token))) {... */\n    tag_310:\n        /* \"contracts/staking.sol\":6438:6458  pool.accXusdPerShare */\n      0x03\n      dup5\n      add\n      sload\n        /* \"contracts/staking.sol\":6424:6435  user.amount */\n      dup4\n      sload\n        /* \"contracts/staking.sol\":6462:6466  1e18 */\n      0x0de0b6b3a7640000\n      swap2\n        /* \"contracts/staking.sol\":6424:6458  user.amount * pool.accXusdPerShare */\n      tag_312\n      swap2\n      tag_141\n      jump\t// in\n    tag_312:\n        /* \"contracts/staking.sol\":6423:6466  (user.amount * pool.accXusdPerShare) / 1e18 */\n      tag_313\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_313:\n        /* \"contracts/staking.sol\":6405:6420  user.rewardDebt */\n      0x01\n      dup5\n      add\n        /* \"contracts/staking.sol\":6405:6466  user.rewardDebt = (user.amount * pool.accXusdPerShare) / 1e18 */\n      sstore\n        /* \"contracts/staking.sol\":6481:6511  Deposit(_sender, _pid, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/staking.sol\":6498:6502  _pid */\n      dup8\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":6481:6511  Deposit(_sender, _pid, amount) */\n      dup8\n      and\n      swap1\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/staking.sol\":6481:6511  Deposit(_sender, _pid, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/staking.sol\":5421:6518  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/staking.sol\":5364:6518  function deposit(uint256 _pid, uint256 _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":9606:9954  function safeXusdTransfer(address _to, uint256 _amount) internal {... */\n    tag_165:\n        /* \"contracts/staking.sol\":9704:9708  Xusd */\n      0x04\n      dup1\n      sload\n        /* \"contracts/staking.sol\":9704:9733  Xusd.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/staking.sol\":9681:9701  uint256 _XusdBalance */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":9704:9708  Xusd */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/staking.sol\":9704:9718  Xusd.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/staking.sol\":9704:9733  Xusd.balanceOf(address(this)) */\n      tag_316\n      swap2\n        /* \"contracts/staking.sol\":9727:9731  this */\n      address\n      swap2\n        /* \"contracts/staking.sol\":9704:9733  Xusd.balanceOf(address(this)) */\n      add\n      tag_67\n      jump\t// in\n    tag_316:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_318\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_318:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_319\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_319:\n        /* \"contracts/staking.sol\":9681:9733  uint256 _XusdBalance = Xusd.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":9747:9763  _XusdBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/staking.sol\":9743:9948  if (_XusdBalance > 0) {... */\n      tag_326\n      jumpi\n        /* \"contracts/staking.sol\":9793:9805  _XusdBalance */\n      dup1\n        /* \"contracts/staking.sol\":9783:9790  _amount */\n      dup3\n        /* \"contracts/staking.sol\":9783:9805  _amount > _XusdBalance */\n      gt\n        /* \"contracts/staking.sol\":9779:9938  if (_amount > _XusdBalance) {... */\n      iszero\n      tag_321\n      jumpi\n        /* \"contracts/staking.sol\":9825:9829  Xusd */\n      0x04\n      dup1\n      sload\n        /* \"contracts/staking.sol\":9825:9857  Xusd.transfer(_to, _XusdBalance) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":9825:9829  Xusd */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/staking.sol\":9825:9838  Xusd.transfer */\n      0xa9059cbb\n      swap2\n        /* \"contracts/staking.sol\":9825:9857  Xusd.transfer(_to, _XusdBalance) */\n      tag_225\n      swap2\n        /* \"contracts/staking.sol\":9839:9842  _to */\n      dup8\n      swap2\n        /* \"contracts/staking.sol\":9844:9856  _XusdBalance */\n      dup7\n      swap2\n        /* \"contracts/staking.sol\":9825:9857  Xusd.transfer(_to, _XusdBalance) */\n      add\n      tag_170\n      jump\t// in\n        /* \"contracts/staking.sol\":9779:9938  if (_amount > _XusdBalance) {... */\n    tag_321:\n        /* \"contracts/staking.sol\":9896:9900  Xusd */\n      0x04\n      dup1\n      sload\n        /* \"contracts/staking.sol\":9896:9923  Xusd.transfer(_to, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":9896:9900  Xusd */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/staking.sol\":9896:9909  Xusd.transfer */\n      0xa9059cbb\n      swap2\n        /* \"contracts/staking.sol\":9896:9923  Xusd.transfer(_to, _amount) */\n      tag_225\n      swap2\n        /* \"contracts/staking.sol\":9910:9913  _to */\n      dup8\n      swap2\n        /* \"contracts/staking.sol\":9915:9922  _amount */\n      dup8\n      swap2\n        /* \"contracts/staking.sol\":9896:9923  Xusd.transfer(_to, _amount) */\n      add\n      tag_170\n      jump\t// in\n        /* \"contracts/staking.sol\":9779:9938  if (_amount > _XusdBalance) {... */\n    tag_326:\n        /* \"contracts/staking.sol\":9671:9954  {... */\n      pop\n        /* \"contracts/staking.sol\":9606:9954  function safeXusdTransfer(address _to, uint256 _amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9574:9730  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9648:9655  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9698:9720  _at(set._inner, index) */\n      tag_332\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9702:9705  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9714:9719  index */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9698:9701  _at */\n      tag_333\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9698:9720  _at(set._inner, index) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9690:9721  uint256(_at(set._inner, index)) */\n      swap4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9574:9730  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":3888:4144  function checkPoolDuplicate(IERC20 _token) internal view {... */\n    tag_237:\n        /* \"contracts/staking.sol\":3972:3980  poolInfo */\n      0x05\n        /* \"contracts/staking.sol\":3972:3987  poolInfo.length */\n      sload\n        /* \"contracts/staking.sol\":3955:3969  uint256 length */\n      0x00\n        /* \"contracts/staking.sol\":3997:4138  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_335:\n        /* \"contracts/staking.sol\":4025:4031  length */\n      dup2\n        /* \"contracts/staking.sol\":4019:4022  pid */\n      dup2\n        /* \"contracts/staking.sol\":4019:4031  pid < length */\n      lt\n        /* \"contracts/staking.sol\":3997:4138  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_326\n      jumpi\n        /* \"contracts/staking.sol\":4085:4091  _token */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/staking.sol\":4062:4091  poolInfo[pid].token != _token */\n      and\n        /* \"contracts/staking.sol\":4062:4070  poolInfo */\n      0x05\n        /* \"contracts/staking.sol\":4071:4074  pid */\n      dup3\n        /* \"contracts/staking.sol\":4062:4075  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_339\n      jumpi\n      tag_339\n      tag_127\n      jump\t// in\n    tag_339:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x06\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/staking.sol\":4062:4081  poolInfo[pid].token */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/staking.sol\":4062:4091  poolInfo[pid].token != _token */\n      sub\n        /* \"contracts/staking.sol\":4054:4127  require(poolInfo[pid].token != _token, \"XusdGenesisPool: existing pool?\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7920:7922   */\n      0x20\n        /* \"contracts/staking.sol\":4054:4127  require(poolInfo[pid].token != _token, \"XusdGenesisPool: existing pool?\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7902:7923   */\n      mstore\n        /* \"#utility.yul\":7959:7961   */\n      0x1f\n        /* \"#utility.yul\":7939:7957   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7932:7962   */\n      mstore\n        /* \"#utility.yul\":7998:8031   */\n      0x5875736447656e65736973506f6f6c3a206578697374696e6720706f6f6c3f00\n        /* \"#utility.yul\":7978:7996   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7971:8032   */\n      mstore\n        /* \"#utility.yul\":8049:8067   */\n      0x64\n      add\n        /* \"contracts/staking.sol\":4054:4127  require(poolInfo[pid].token != _token, \"XusdGenesisPool: existing pool?\") */\n      tag_121\n        /* \"#utility.yul\":7718:8073   */\n      jump\n        /* \"contracts/staking.sol\":4054:4127  require(poolInfo[pid].token != _token, \"XusdGenesisPool: existing pool?\") */\n    tag_341:\n        /* \"contracts/staking.sol\":4033:4038  ++pid */\n      0x01\n      add\n        /* \"contracts/staking.sol\":3997:4138  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_335)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9117:9232  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9180:9187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9206:9225  _length(set._inner) */\n      tag_144\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9214:9217  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4556:4574  set._values.length */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4474:4581  function _length(Set storage set) private view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8871:9036  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_304:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9004:9027  uint256(uint160(value)) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8951:8955  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4374  set._positions */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4386  set._positions[value] != 0 */\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8974:9029  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_332\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4923:5041  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4990:4997  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5016:5019  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5016:5027  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5028:5033  index */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5016:5034  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_352\n      jumpi\n      tag_352\n      tag_127\n      jump\t// in\n    tag_352:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5009:5034  return set._values[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4923:5041  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:422   */\n    tag_36:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      0x00\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_362:\n      pop\n        /* \"#utility.yul\":369:392   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:422   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1017:1363   */\n    tag_45:\n        /* \"#utility.yul\":1085:1091   */\n      0x00\n        /* \"#utility.yul\":1093:1099   */\n      0x00\n        /* \"#utility.yul\":1146:1148   */\n      0x40\n        /* \"#utility.yul\":1134:1143   */\n      dup4\n        /* \"#utility.yul\":1125:1132   */\n      dup6\n        /* \"#utility.yul\":1121:1144   */\n      sub\n        /* \"#utility.yul\":1117:1149   */\n      slt\n        /* \"#utility.yul\":1114:1166   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":1162:1163   */\n      0x00\n        /* \"#utility.yul\":1159:1160   */\n      0x00\n        /* \"#utility.yul\":1152:1164   */\n      revert\n        /* \"#utility.yul\":1114:1166   */\n    tag_365:\n      pop\n      pop\n        /* \"#utility.yul\":1207:1230   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1327:1329   */\n      0x20\n        /* \"#utility.yul\":1312:1330   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1299:1331   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1017:1363   */\n      jump\t// out\n        /* \"#utility.yul\":1368:1507   */\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1451:1482   */\n      dup2\n      and\n        /* \"#utility.yul\":1441:1483   */\n      dup2\n      eq\n        /* \"#utility.yul\":1431:1501   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":1497:1498   */\n      0x00\n        /* \"#utility.yul\":1494:1495   */\n      0x00\n        /* \"#utility.yul\":1487:1499   */\n      revert\n        /* \"#utility.yul\":1431:1501   */\n    tag_367:\n        /* \"#utility.yul\":1368:1507   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1512:2050   */\n    tag_62:\n        /* \"#utility.yul\":1603:1609   */\n      0x00\n        /* \"#utility.yul\":1611:1617   */\n      0x00\n        /* \"#utility.yul\":1619:1625   */\n      0x00\n        /* \"#utility.yul\":1672:1674   */\n      0x60\n        /* \"#utility.yul\":1660:1669   */\n      dup5\n        /* \"#utility.yul\":1651:1658   */\n      dup7\n        /* \"#utility.yul\":1647:1670   */\n      sub\n        /* \"#utility.yul\":1643:1675   */\n      slt\n        /* \"#utility.yul\":1640:1692   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":1688:1689   */\n      0x00\n        /* \"#utility.yul\":1685:1686   */\n      0x00\n        /* \"#utility.yul\":1678:1690   */\n      revert\n        /* \"#utility.yul\":1640:1692   */\n    tag_369:\n        /* \"#utility.yul\":1727:1736   */\n      dup4\n        /* \"#utility.yul\":1714:1737   */\n      calldataload\n        /* \"#utility.yul\":1746:1785   */\n      tag_370\n        /* \"#utility.yul\":1779:1784   */\n      dup2\n        /* \"#utility.yul\":1746:1785   */\n      tag_356\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1804:1809   */\n      swap3\n      pop\n        /* \"#utility.yul\":1882:1884   */\n      0x20\n        /* \"#utility.yul\":1867:1885   */\n      dup5\n      add\n        /* \"#utility.yul\":1854:1886   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1964:1966   */\n      0x40\n        /* \"#utility.yul\":1949:1967   */\n      dup5\n      add\n        /* \"#utility.yul\":1936:1968   */\n      calldataload\n        /* \"#utility.yul\":1977:2018   */\n      tag_371\n        /* \"#utility.yul\":1936:1968   */\n      dup2\n        /* \"#utility.yul\":1977:2018   */\n      tag_356\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2037:2044   */\n      dup1\n        /* \"#utility.yul\":2027:2044   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1512:2050   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2055:2258   */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2219:2251   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2201:2252   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2189:2191   */\n      0x20\n        /* \"#utility.yul\":2174:2192   */\n      add\n      swap1\n        /* \"#utility.yul\":2055:2258   */\n      jump\t// out\n        /* \"#utility.yul\":2263:2381   */\n    tag_357:\n        /* \"#utility.yul\":2349:2354   */\n      dup1\n        /* \"#utility.yul\":2342:2355   */\n      iszero\n        /* \"#utility.yul\":2335:2356   */\n      iszero\n        /* \"#utility.yul\":2328:2333   */\n      dup2\n        /* \"#utility.yul\":2325:2357   */\n      eq\n        /* \"#utility.yul\":2315:2375   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":2371:2372   */\n      0x00\n        /* \"#utility.yul\":2368:2369   */\n      0x00\n        /* \"#utility.yul\":2361:2373   */\n      revert\n        /* \"#utility.yul\":2386:3152   */\n    tag_83:\n        /* \"#utility.yul\":2492:2498   */\n      0x00\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2516:2522   */\n      0x00\n        /* \"#utility.yul\":2524:2530   */\n      0x00\n        /* \"#utility.yul\":2577:2580   */\n      0xa0\n        /* \"#utility.yul\":2565:2574   */\n      dup7\n        /* \"#utility.yul\":2556:2563   */\n      dup9\n        /* \"#utility.yul\":2552:2575   */\n      sub\n        /* \"#utility.yul\":2548:2581   */\n      slt\n        /* \"#utility.yul\":2545:2598   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":2594:2595   */\n      0x00\n        /* \"#utility.yul\":2591:2592   */\n      0x00\n        /* \"#utility.yul\":2584:2596   */\n      revert\n        /* \"#utility.yul\":2545:2598   */\n    tag_376:\n        /* \"#utility.yul\":2639:2662   */\n      dup6\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":2738:2740   */\n      0x20\n        /* \"#utility.yul\":2723:2741   */\n      dup7\n      add\n        /* \"#utility.yul\":2710:2742   */\n      calldataload\n        /* \"#utility.yul\":2751:2792   */\n      tag_377\n        /* \"#utility.yul\":2710:2742   */\n      dup2\n        /* \"#utility.yul\":2751:2792   */\n      tag_356\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2811:2818   */\n      swap4\n      pop\n        /* \"#utility.yul\":2870:2872   */\n      0x40\n        /* \"#utility.yul\":2855:2873   */\n      dup7\n      add\n        /* \"#utility.yul\":2842:2874   */\n      calldataload\n        /* \"#utility.yul\":2883:2913   */\n      tag_378\n        /* \"#utility.yul\":2842:2874   */\n      dup2\n        /* \"#utility.yul\":2883:2913   */\n      tag_357\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2386:3152   */\n      swap5\n      swap8\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":2932:2939   */\n      swap4\n      swap5\n        /* \"#utility.yul\":3012:3014   */\n      0x60\n        /* \"#utility.yul\":2997:3015   */\n      dup2\n      add\n        /* \"#utility.yul\":2984:3016   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":3115:3118   */\n      0x80\n        /* \"#utility.yul\":3100:3119   */\n      add\n        /* \"#utility.yul\":3087:3120   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":2386:3152   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3157:3532   */\n    tag_92:\n        /* \"#utility.yul\":3225:3231   */\n      0x00\n        /* \"#utility.yul\":3233:3239   */\n      0x00\n        /* \"#utility.yul\":3286:3288   */\n      0x40\n        /* \"#utility.yul\":3274:3283   */\n      dup4\n        /* \"#utility.yul\":3265:3272   */\n      dup6\n        /* \"#utility.yul\":3261:3284   */\n      sub\n        /* \"#utility.yul\":3257:3289   */\n      slt\n        /* \"#utility.yul\":3254:3306   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":3302:3303   */\n      0x00\n        /* \"#utility.yul\":3299:3300   */\n      0x00\n        /* \"#utility.yul\":3292:3304   */\n      revert\n        /* \"#utility.yul\":3254:3306   */\n    tag_380:\n        /* \"#utility.yul\":3347:3370   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3431:3449   */\n      dup4\n      add\n        /* \"#utility.yul\":3418:3450   */\n      calldataload\n        /* \"#utility.yul\":3459:3500   */\n      tag_381\n        /* \"#utility.yul\":3418:3450   */\n      dup2\n        /* \"#utility.yul\":3459:3500   */\n      tag_356\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3519:3526   */\n      dup1\n        /* \"#utility.yul\":3509:3526   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3157:3532   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3790:4045   */\n    tag_108:\n        /* \"#utility.yul\":3849:3855   */\n      0x00\n        /* \"#utility.yul\":3902:3904   */\n      0x20\n        /* \"#utility.yul\":3890:3899   */\n      dup3\n        /* \"#utility.yul\":3881:3888   */\n      dup5\n        /* \"#utility.yul\":3877:3900   */\n      sub\n        /* \"#utility.yul\":3873:3905   */\n      slt\n        /* \"#utility.yul\":3870:3922   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":3918:3919   */\n      0x00\n        /* \"#utility.yul\":3915:3916   */\n      0x00\n        /* \"#utility.yul\":3908:3920   */\n      revert\n        /* \"#utility.yul\":3870:3922   */\n    tag_384:\n        /* \"#utility.yul\":3957:3966   */\n      dup2\n        /* \"#utility.yul\":3944:3967   */\n      calldataload\n        /* \"#utility.yul\":3976:4015   */\n      tag_332\n        /* \"#utility.yul\":4009:4014   */\n      dup2\n        /* \"#utility.yul\":3976:4015   */\n      tag_356\n      jump\t// in\n        /* \"#utility.yul\":4272:4679   */\n    tag_122:\n        /* \"#utility.yul\":4474:4476   */\n      0x20\n        /* \"#utility.yul\":4456:4477   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4513:4515   */\n      0x2b\n        /* \"#utility.yul\":4493:4511   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4486:4516   */\n      mstore\n        /* \"#utility.yul\":4552:4586   */\n      0x5875736447656e65736973506f6f6c3a2063616c6c6572206973206e6f742074\n        /* \"#utility.yul\":4547:4549   */\n      0x40\n        /* \"#utility.yul\":4532:4550   */\n      dup3\n      add\n        /* \"#utility.yul\":4525:4587   */\n      mstore\n      shl(0xa9, 0x34329037b832b930ba37b9)\n        /* \"#utility.yul\":4618:4620   */\n      0x60\n        /* \"#utility.yul\":4603:4621   */\n      dup3\n      add\n        /* \"#utility.yul\":4596:4637   */\n      mstore\n        /* \"#utility.yul\":4669:4672   */\n      0x80\n        /* \"#utility.yul\":4654:4673   */\n      add\n      swap1\n        /* \"#utility.yul\":4272:4679   */\n      jump\t// out\n        /* \"#utility.yul\":4684:4811   */\n    tag_127:\n        /* \"#utility.yul\":4745:4755   */\n      0x4e487b71\n        /* \"#utility.yul\":4740:4743   */\n      0xe0\n        /* \"#utility.yul\":4736:4756   */\n      shl\n        /* \"#utility.yul\":4733:4734   */\n      0x00\n        /* \"#utility.yul\":4726:4757   */\n      mstore\n        /* \"#utility.yul\":4776:4780   */\n      0x32\n        /* \"#utility.yul\":4773:4774   */\n      0x04\n        /* \"#utility.yul\":4766:4781   */\n      mstore\n        /* \"#utility.yul\":4800:4804   */\n      0x24\n        /* \"#utility.yul\":4797:4798   */\n      0x00\n        /* \"#utility.yul\":4790:4805   */\n      revert\n        /* \"#utility.yul\":4816:4943   */\n    tag_358:\n        /* \"#utility.yul\":4877:4887   */\n      0x4e487b71\n        /* \"#utility.yul\":4872:4875   */\n      0xe0\n        /* \"#utility.yul\":4868:4888   */\n      shl\n        /* \"#utility.yul\":4865:4866   */\n      0x00\n        /* \"#utility.yul\":4858:4889   */\n      mstore\n        /* \"#utility.yul\":4908:4912   */\n      0x11\n        /* \"#utility.yul\":4905:4906   */\n      0x04\n        /* \"#utility.yul\":4898:4913   */\n      mstore\n        /* \"#utility.yul\":4932:4936   */\n      0x24\n        /* \"#utility.yul\":4929:4930   */\n      0x00\n        /* \"#utility.yul\":4922:4937   */\n      revert\n        /* \"#utility.yul\":4948:5076   */\n    tag_131:\n        /* \"#utility.yul\":5015:5024   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5036:5047   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5033:5070   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":5050:5068   */\n      tag_144\n      tag_358\n      jump\t// in\n        /* \"#utility.yul\":5081:5206   */\n    tag_133:\n        /* \"#utility.yul\":5146:5155   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5167:5177   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5164:5200   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":5180:5198   */\n      tag_144\n      tag_358\n      jump\t// in\n        /* \"#utility.yul\":5211:5379   */\n    tag_141:\n        /* \"#utility.yul\":5284:5293   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5315:5324   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5332:5347   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5326:5348   */\n      dup5\n      eq\n        /* \"#utility.yul\":5312:5349   */\n      or\n        /* \"#utility.yul\":5302:5373   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":5353:5371   */\n      tag_144\n      tag_358\n      jump\t// in\n        /* \"#utility.yul\":5731:5948   */\n    tag_161:\n        /* \"#utility.yul\":5771:5772   */\n      0x00\n        /* \"#utility.yul\":5797:5798   */\n      dup3\n        /* \"#utility.yul\":5787:5919   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":5841:5851   */\n      0x4e487b71\n        /* \"#utility.yul\":5836:5839   */\n      0xe0\n        /* \"#utility.yul\":5832:5852   */\n      shl\n        /* \"#utility.yul\":5829:5830   */\n      0x00\n        /* \"#utility.yul\":5822:5853   */\n      mstore\n        /* \"#utility.yul\":5876:5880   */\n      0x12\n        /* \"#utility.yul\":5873:5874   */\n      0x04\n        /* \"#utility.yul\":5866:5881   */\n      mstore\n        /* \"#utility.yul\":5904:5908   */\n      0x24\n        /* \"#utility.yul\":5901:5902   */\n      0x00\n        /* \"#utility.yul\":5894:5909   */\n      revert\n        /* \"#utility.yul\":5787:5919   */\n    tag_401:\n      pop\n        /* \"#utility.yul\":5933:5942   */\n      div\n      swap1\n        /* \"#utility.yul\":5731:5948   */\n      jump\t// out\n        /* \"#utility.yul\":5953:6227   */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6145:6177   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":6127:6178   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6209:6211   */\n      0x20\n        /* \"#utility.yul\":6194:6212   */\n      dup3\n      add\n        /* \"#utility.yul\":6187:6221   */\n      mstore\n        /* \"#utility.yul\":6115:6117   */\n      0x40\n        /* \"#utility.yul\":6100:6118   */\n      add\n      swap1\n        /* \"#utility.yul\":5953:6227   */\n      jump\t// out\n        /* \"#utility.yul\":6232:6477   */\n    tag_174:\n        /* \"#utility.yul\":6299:6305   */\n      0x00\n        /* \"#utility.yul\":6352:6354   */\n      0x20\n        /* \"#utility.yul\":6340:6349   */\n      dup3\n        /* \"#utility.yul\":6331:6338   */\n      dup5\n        /* \"#utility.yul\":6327:6350   */\n      sub\n        /* \"#utility.yul\":6323:6355   */\n      slt\n        /* \"#utility.yul\":6320:6372   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":6368:6369   */\n      0x00\n        /* \"#utility.yul\":6365:6366   */\n      0x00\n        /* \"#utility.yul\":6358:6370   */\n      revert\n        /* \"#utility.yul\":6320:6372   */\n    tag_404:\n        /* \"#utility.yul\":6400:6409   */\n      dup2\n        /* \"#utility.yul\":6394:6410   */\n      mload\n        /* \"#utility.yul\":6419:6447   */\n      tag_332\n        /* \"#utility.yul\":6441:6446   */\n      dup2\n        /* \"#utility.yul\":6419:6447   */\n      tag_357\n      jump\t// in\n        /* \"#utility.yul\":6482:6666   */\n    tag_187:\n        /* \"#utility.yul\":6552:6558   */\n      0x00\n        /* \"#utility.yul\":6605:6607   */\n      0x20\n        /* \"#utility.yul\":6593:6602   */\n      dup3\n        /* \"#utility.yul\":6584:6591   */\n      dup5\n        /* \"#utility.yul\":6580:6603   */\n      sub\n        /* \"#utility.yul\":6576:6608   */\n      slt\n        /* \"#utility.yul\":6573:6625   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":6621:6622   */\n      0x00\n        /* \"#utility.yul\":6618:6619   */\n      0x00\n        /* \"#utility.yul\":6611:6623   */\n      revert\n        /* \"#utility.yul\":6573:6625   */\n    tag_407:\n      pop\n        /* \"#utility.yul\":6644:6660   */\n      mload\n      swap2\n        /* \"#utility.yul\":6482:6666   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e39b6ba85b135184adef6900236c7e8d953eb40ac576770644fb1d557b358bcf64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1598": {
									"entryPoint": null,
									"id": 1598,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_add_838": {
									"entryPoint": 599,
									"id": 838,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_contains_941": {
									"entryPoint": null,
									"id": 941,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@add_1138": {
									"entryPoint": 570,
									"id": 1138,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_uint256t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_tuple_t_stringliteral_087c1afcbc4b80d51e756fd5b00eab1f558e892efb01f001555bfc4ba77a2ed0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24073964cebb5a480a1017d149dc5fd778a4b28a8ec6083e8b545a9135500bad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2734a09ecd0aa61fbb750d6a51502de29edef70e696f5af4ce6e8c880e7c2102__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4129:7",
										"nodeType": "YulBlock",
										"src": "0:4129:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:7",
													"nodeType": "YulBlock",
													"src": "74:117:7",
													"statements": [
														{
															"nativeSrc": "84:22:7",
															"nodeType": "YulAssignment",
															"src": "84:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:7"
																},
																"nativeSrc": "93:13:7",
																"nodeType": "YulFunctionCall",
																"src": "93:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:7",
																"nodeType": "YulBlock",
																"src": "169:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:7",
																					"nodeType": "YulLiteral",
																					"src": "178:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:7",
																					"nodeType": "YulLiteral",
																					"src": "181:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:7"
																			},
																			"nativeSrc": "171:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:7"
																		},
																		"nativeSrc": "171:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:7",
																										"nodeType": "YulLiteral",
																										"src": "154:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:7",
																										"nodeType": "YulLiteral",
																										"src": "159:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:7"
																								},
																								"nativeSrc": "150:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:7",
																								"nodeType": "YulLiteral",
																								"src": "163:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:7"
																						},
																						"nativeSrc": "146:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:7"
																				},
																				"nativeSrc": "135:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:7"
																		},
																		"nativeSrc": "125:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:7"
																},
																"nativeSrc": "118:50:7",
																"nodeType": "YulFunctionCall",
																"src": "118:50:7"
															},
															"nativeSrc": "115:70:7",
															"nodeType": "YulIf",
															"src": "115:70:7"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:7",
														"nodeType": "YulTypedName",
														"src": "53:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:7",
														"nodeType": "YulTypedName",
														"src": "64:5:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "228:95:7",
													"nodeType": "YulBlock",
													"src": "228:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "245:1:7",
																		"nodeType": "YulLiteral",
																		"src": "245:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "252:3:7",
																				"nodeType": "YulLiteral",
																				"src": "252:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "257:10:7",
																				"nodeType": "YulLiteral",
																				"src": "257:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "248:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:7"
																		},
																		"nativeSrc": "248:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "238:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:7"
																},
																"nativeSrc": "238:31:7",
																"nodeType": "YulFunctionCall",
																"src": "238:31:7"
															},
															"nativeSrc": "238:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "238:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "285:1:7",
																		"nodeType": "YulLiteral",
																		"src": "285:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "288:4:7",
																		"nodeType": "YulLiteral",
																		"src": "288:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "278:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:7"
																},
																"nativeSrc": "278:15:7",
																"nodeType": "YulFunctionCall",
																"src": "278:15:7"
															},
															"nativeSrc": "278:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "278:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "309:1:7",
																		"nodeType": "YulLiteral",
																		"src": "309:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "312:4:7",
																		"nodeType": "YulLiteral",
																		"src": "312:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "302:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:7"
																},
																"nativeSrc": "302:15:7",
																"nodeType": "YulFunctionCall",
																"src": "302:15:7"
															},
															"nativeSrc": "302:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "302:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "196:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:7"
											},
											{
												"body": {
													"nativeSrc": "519:1478:7",
													"nodeType": "YulBlock",
													"src": "519:1478:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "566:16:7",
																"nodeType": "YulBlock",
																"src": "566:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "575:1:7",
																					"nodeType": "YulLiteral",
																					"src": "575:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "578:1:7",
																					"nodeType": "YulLiteral",
																					"src": "578:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "568:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:7"
																			},
																			"nativeSrc": "568:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "568:12:7"
																		},
																		"nativeSrc": "568:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "568:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "540:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "540:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "549:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "549:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "536:3:7"
																		},
																		"nativeSrc": "536:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "536:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "561:3:7",
																		"nodeType": "YulLiteral",
																		"src": "561:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "532:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:3:7"
																},
																"nativeSrc": "532:33:7",
																"nodeType": "YulFunctionCall",
																"src": "532:33:7"
															},
															"nativeSrc": "529:53:7",
															"nodeType": "YulIf",
															"src": "529:53:7"
														},
														{
															"nativeSrc": "591:50:7",
															"nodeType": "YulAssignment",
															"src": "591:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "631:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "631:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "601:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "601:29:7"
																},
																"nativeSrc": "601:40:7",
																"nodeType": "YulFunctionCall",
																"src": "601:40:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "591:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "591:6:7"
																}
															]
														},
														{
															"nativeSrc": "650:39:7",
															"nodeType": "YulVariableDeclaration",
															"src": "650:39:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "674:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "674:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "685:2:7",
																				"nodeType": "YulLiteral",
																				"src": "685:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "670:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "670:3:7"
																		},
																		"nativeSrc": "670:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "670:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "664:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "664:5:7"
																},
																"nativeSrc": "664:25:7",
																"nodeType": "YulFunctionCall",
																"src": "664:25:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "654:6:7",
																	"nodeType": "YulTypedName",
																	"src": "654:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "732:16:7",
																"nodeType": "YulBlock",
																"src": "732:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "741:1:7",
																					"nodeType": "YulLiteral",
																					"src": "741:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "744:1:7",
																					"nodeType": "YulLiteral",
																					"src": "744:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "734:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "734:6:7"
																			},
																			"nativeSrc": "734:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "734:12:7"
																		},
																		"nativeSrc": "734:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "734:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "704:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "704:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "720:2:7",
																						"nodeType": "YulLiteral",
																						"src": "720:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "724:1:7",
																						"nodeType": "YulLiteral",
																						"src": "724:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "716:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "716:3:7"
																				},
																				"nativeSrc": "716:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "716:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "728:1:7",
																				"nodeType": "YulLiteral",
																				"src": "728:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "712:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "712:3:7"
																		},
																		"nativeSrc": "712:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "712:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:7"
																},
																"nativeSrc": "701:30:7",
																"nodeType": "YulFunctionCall",
																"src": "701:30:7"
															},
															"nativeSrc": "698:50:7",
															"nodeType": "YulIf",
															"src": "698:50:7"
														},
														{
															"nativeSrc": "757:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "757:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "771:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "771:9:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "782:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "767:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:7"
																},
																"nativeSrc": "767:22:7",
																"nodeType": "YulFunctionCall",
																"src": "767:22:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "761:2:7",
																	"nodeType": "YulTypedName",
																	"src": "761:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "837:16:7",
																"nodeType": "YulBlock",
																"src": "837:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "846:1:7",
																					"nodeType": "YulLiteral",
																					"src": "846:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "849:1:7",
																					"nodeType": "YulLiteral",
																					"src": "849:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "839:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:7"
																			},
																			"nativeSrc": "839:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "839:12:7"
																		},
																		"nativeSrc": "839:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "839:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "816:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "816:2:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "820:4:7",
																						"nodeType": "YulLiteral",
																						"src": "820:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "812:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "812:3:7"
																				},
																				"nativeSrc": "812:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "812:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "827:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "827:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "808:3:7"
																		},
																		"nativeSrc": "808:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "808:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "801:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "801:6:7"
																},
																"nativeSrc": "801:35:7",
																"nodeType": "YulFunctionCall",
																"src": "801:35:7"
															},
															"nativeSrc": "798:55:7",
															"nodeType": "YulIf",
															"src": "798:55:7"
														},
														{
															"nativeSrc": "862:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "862:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "882:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "882:2:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "876:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "876:5:7"
																},
																"nativeSrc": "876:9:7",
																"nodeType": "YulFunctionCall",
																"src": "876:9:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "866:6:7",
																	"nodeType": "YulTypedName",
																	"src": "866:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "928:22:7",
																"nodeType": "YulBlock",
																"src": "928:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "930:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "930:16:7"
																			},
																			"nativeSrc": "930:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "930:18:7"
																		},
																		"nativeSrc": "930:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "930:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "900:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "900:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "916:2:7",
																						"nodeType": "YulLiteral",
																						"src": "916:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "920:1:7",
																						"nodeType": "YulLiteral",
																						"src": "920:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "912:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "912:3:7"
																				},
																				"nativeSrc": "912:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "912:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "924:1:7",
																				"nodeType": "YulLiteral",
																				"src": "924:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "908:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "908:3:7"
																		},
																		"nativeSrc": "908:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "908:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "897:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "897:2:7"
																},
																"nativeSrc": "897:30:7",
																"nodeType": "YulFunctionCall",
																"src": "897:30:7"
															},
															"nativeSrc": "894:56:7",
															"nodeType": "YulIf",
															"src": "894:56:7"
														},
														{
															"nativeSrc": "959:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "959:24:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "973:1:7",
																		"nodeType": "YulLiteral",
																		"src": "973:1:7",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "976:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "969:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:7"
																},
																"nativeSrc": "969:14:7",
																"nodeType": "YulFunctionCall",
																"src": "969:14:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "963:2:7",
																	"nodeType": "YulTypedName",
																	"src": "963:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "992:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "992:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1012:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1012:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1006:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1006:5:7"
																},
																"nativeSrc": "1006:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1006:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "996:6:7",
																	"nodeType": "YulTypedName",
																	"src": "996:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1024:56:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1024:56:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1046:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1046:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1062:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1062:2:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1066:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1066:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1058:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1058:3:7"
																				},
																				"nativeSrc": "1058:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1058:11:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1075:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1075:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1071:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1071:3:7"
																				},
																				"nativeSrc": "1071:7:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1071:7:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1054:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1054:3:7"
																		},
																		"nativeSrc": "1054:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1054:25:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1042:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1042:3:7"
																},
																"nativeSrc": "1042:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1042:38:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1028:10:7",
																	"nodeType": "YulTypedName",
																	"src": "1028:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1155:22:7",
																"nodeType": "YulBlock",
																"src": "1155:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1157:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1157:16:7"
																			},
																			"nativeSrc": "1157:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1157:18:7"
																		},
																		"nativeSrc": "1157:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1098:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:10:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1118:2:7",
																								"nodeType": "YulLiteral",
																								"src": "1118:2:7",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1114:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1114:3:7"
																						},
																						"nativeSrc": "1114:10:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1114:10:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1126:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1126:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1110:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1110:3:7"
																				},
																				"nativeSrc": "1110:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1110:18:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1095:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1095:2:7"
																		},
																		"nativeSrc": "1095:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1095:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1134:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1134:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1146:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1131:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1131:2:7"
																		},
																		"nativeSrc": "1131:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1131:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1092:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1092:2:7"
																},
																"nativeSrc": "1092:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1092:62:7"
															},
															"nativeSrc": "1089:88:7",
															"nodeType": "YulIf",
															"src": "1089:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1193:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1193:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1197:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1197:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1186:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:7"
																},
																"nativeSrc": "1186:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1186:22:7"
															},
															"nativeSrc": "1186:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1186:22:7"
														},
														{
															"nativeSrc": "1217:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1217:17:7",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1228:6:7",
																"nodeType": "YulIdentifier",
																"src": "1228:6:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1221:3:7",
																	"nodeType": "YulTypedName",
																	"src": "1221:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1250:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1250:6:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1258:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1258:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1243:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1243:6:7"
																},
																"nativeSrc": "1243:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1243:22:7"
															},
															"nativeSrc": "1243:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1243:22:7"
														},
														{
															"nativeSrc": "1274:22:7",
															"nodeType": "YulAssignment",
															"src": "1274:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1285:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1285:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1293:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1293:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1281:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1281:3:7"
																},
																"nativeSrc": "1281:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1281:15:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "1274:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:7"
																}
															]
														},
														{
															"nativeSrc": "1305:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1305:34:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "1327:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1327:2:7"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "1331:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1331:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1323:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1323:3:7"
																		},
																		"nativeSrc": "1323:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1323:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1336:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1319:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1319:3:7"
																},
																"nativeSrc": "1319:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1319:20:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "1309:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1309:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1371:16:7",
																"nodeType": "YulBlock",
																"src": "1371:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1380:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1380:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1383:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1383:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1373:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1373:6:7"
																			},
																			"nativeSrc": "1373:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1373:12:7"
																		},
																		"nativeSrc": "1373:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1373:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "1354:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1354:6:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1362:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1351:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1351:2:7"
																},
																"nativeSrc": "1351:19:7",
																"nodeType": "YulFunctionCall",
																"src": "1351:19:7"
															},
															"nativeSrc": "1348:39:7",
															"nodeType": "YulIf",
															"src": "1348:39:7"
														},
														{
															"nativeSrc": "1396:22:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1396:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1411:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1411:2:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1407:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:7"
																},
																"nativeSrc": "1407:11:7",
																"nodeType": "YulFunctionCall",
																"src": "1407:11:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "1400:3:7",
																	"nodeType": "YulTypedName",
																	"src": "1400:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1483:103:7",
																"nodeType": "YulBlock",
																"src": "1483:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "1504:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1504:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "1539:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1539:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address_fromMemory",
																						"nativeSrc": "1509:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "1509:29:7"
																					},
																					"nativeSrc": "1509:34:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1509:34:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1497:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1497:6:7"
																			},
																			"nativeSrc": "1497:47:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1497:47:7"
																		},
																		"nativeSrc": "1497:47:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1497:47:7"
																	},
																	{
																		"nativeSrc": "1557:19:7",
																		"nodeType": "YulAssignment",
																		"src": "1557:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "1568:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1568:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1573:2:7",
																					"nodeType": "YulLiteral",
																					"src": "1573:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1564:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1564:3:7"
																			},
																			"nativeSrc": "1564:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1564:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "1557:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1557:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1438:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1438:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "1443:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1443:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1435:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1435:2:7"
																},
																"nativeSrc": "1435:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1435:15:7"
															},
															"nativeSrc": "1427:159:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1451:23:7",
																"nodeType": "YulBlock",
																"src": "1451:23:7",
																"statements": [
																	{
																		"nativeSrc": "1453:19:7",
																		"nodeType": "YulAssignment",
																		"src": "1453:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "1464:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1464:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1469:2:7",
																					"nodeType": "YulLiteral",
																					"src": "1469:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1460:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1460:3:7"
																			},
																			"nativeSrc": "1460:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1460:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "1453:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1453:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1431:3:7",
																"nodeType": "YulBlock",
																"src": "1431:3:7",
																"statements": []
															},
															"src": "1427:159:7"
														},
														{
															"nativeSrc": "1595:16:7",
															"nodeType": "YulAssignment",
															"src": "1595:16:7",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1605:6:7",
																"nodeType": "YulIdentifier",
																"src": "1605:6:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1595:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1595:6:7"
																}
															]
														},
														{
															"nativeSrc": "1620:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1620:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1633:1:7",
																"nodeType": "YulLiteral",
																"src": "1633:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1624:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1624:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1643:34:7",
															"nodeType": "YulAssignment",
															"src": "1643:34:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1662:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1673:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1673:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1658:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1658:3:7"
																		},
																		"nativeSrc": "1658:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1658:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1652:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1652:5:7"
																},
																"nativeSrc": "1652:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1652:25:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1643:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1643:5:7"
																}
															]
														},
														{
															"nativeSrc": "1686:15:7",
															"nodeType": "YulAssignment",
															"src": "1686:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1696:5:7",
																"nodeType": "YulIdentifier",
																"src": "1696:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1686:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:7"
																}
															]
														},
														{
															"nativeSrc": "1710:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1710:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1725:1:7",
																"nodeType": "YulLiteral",
																"src": "1725:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1714:7:7",
																	"nodeType": "YulTypedName",
																	"src": "1714:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1735:36:7",
															"nodeType": "YulAssignment",
															"src": "1735:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1756:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1756:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1767:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1767:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1752:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1752:3:7"
																		},
																		"nativeSrc": "1752:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1752:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1746:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1746:5:7"
																},
																"nativeSrc": "1746:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1746:25:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1735:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1735:7:7"
																}
															]
														},
														{
															"nativeSrc": "1780:17:7",
															"nodeType": "YulAssignment",
															"src": "1780:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "1790:7:7",
																"nodeType": "YulIdentifier",
																"src": "1790:7:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1780:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1780:6:7"
																}
															]
														},
														{
															"nativeSrc": "1806:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1806:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1821:1:7",
																"nodeType": "YulLiteral",
																"src": "1821:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "1810:7:7",
																	"nodeType": "YulTypedName",
																	"src": "1810:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1831:37:7",
															"nodeType": "YulAssignment",
															"src": "1831:37:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1852:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1852:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1863:3:7",
																				"nodeType": "YulLiteral",
																				"src": "1863:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1848:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1848:3:7"
																		},
																		"nativeSrc": "1848:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1848:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1842:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1842:5:7"
																},
																"nativeSrc": "1842:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1842:26:7"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "1831:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1831:7:7"
																}
															]
														},
														{
															"nativeSrc": "1877:17:7",
															"nodeType": "YulAssignment",
															"src": "1877:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "1887:7:7",
																"nodeType": "YulIdentifier",
																"src": "1887:7:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1877:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1877:6:7"
																}
															]
														},
														{
															"nativeSrc": "1903:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1903:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1918:1:7",
																"nodeType": "YulLiteral",
																"src": "1918:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "1907:7:7",
																	"nodeType": "YulTypedName",
																	"src": "1907:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1928:37:7",
															"nodeType": "YulAssignment",
															"src": "1928:37:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1949:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1949:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1960:3:7",
																				"nodeType": "YulLiteral",
																				"src": "1960:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1945:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1945:3:7"
																		},
																		"nativeSrc": "1945:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1945:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1939:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1939:5:7"
																},
																"nativeSrc": "1939:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1939:26:7"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "1928:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1928:7:7"
																}
															]
														},
														{
															"nativeSrc": "1974:17:7",
															"nodeType": "YulAssignment",
															"src": "1974:17:7",
															"value": {
																"name": "value_3",
																"nativeSrc": "1984:7:7",
																"nodeType": "YulIdentifier",
																"src": "1984:7:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "1974:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1974:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_uint256t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "328:1669:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "445:9:7",
														"nodeType": "YulTypedName",
														"src": "445:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "456:7:7",
														"nodeType": "YulTypedName",
														"src": "456:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "468:6:7",
														"nodeType": "YulTypedName",
														"src": "468:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "476:6:7",
														"nodeType": "YulTypedName",
														"src": "476:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "484:6:7",
														"nodeType": "YulTypedName",
														"src": "484:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "492:6:7",
														"nodeType": "YulTypedName",
														"src": "492:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "500:6:7",
														"nodeType": "YulTypedName",
														"src": "500:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "508:6:7",
														"nodeType": "YulTypedName",
														"src": "508:6:7",
														"type": ""
													}
												],
												"src": "328:1669:7"
											},
											{
												"body": {
													"nativeSrc": "2176:153:7",
													"nodeType": "YulBlock",
													"src": "2176:153:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2193:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2193:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2204:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2204:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2186:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2186:6:7"
																},
																"nativeSrc": "2186:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2186:21:7"
															},
															"nativeSrc": "2186:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2186:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2227:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2227:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2238:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2238:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2223:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2223:3:7"
																		},
																		"nativeSrc": "2223:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2223:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2243:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2243:1:7",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2216:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2216:6:7"
																},
																"nativeSrc": "2216:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2216:29:7"
															},
															"nativeSrc": "2216:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "2216:29:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2265:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2265:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2276:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2276:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2261:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2261:3:7"
																		},
																		"nativeSrc": "2261:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2261:18:7"
																	},
																	{
																		"hexValue": "6c617465",
																		"kind": "string",
																		"nativeSrc": "2281:6:7",
																		"nodeType": "YulLiteral",
																		"src": "2281:6:7",
																		"type": "",
																		"value": "late"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2254:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2254:6:7"
																},
																"nativeSrc": "2254:34:7",
																"nodeType": "YulFunctionCall",
																"src": "2254:34:7"
															},
															"nativeSrc": "2254:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "2254:34:7"
														},
														{
															"nativeSrc": "2297:26:7",
															"nodeType": "YulAssignment",
															"src": "2297:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2309:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2309:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2320:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2320:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2305:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:7"
																},
																"nativeSrc": "2305:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2305:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2297:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2297:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2002:327:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2153:9:7",
														"nodeType": "YulTypedName",
														"src": "2153:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2167:4:7",
														"nodeType": "YulTypedName",
														"src": "2167:4:7",
														"type": ""
													}
												],
												"src": "2002:327:7"
											},
											{
												"body": {
													"nativeSrc": "2508:227:7",
													"nodeType": "YulBlock",
													"src": "2508:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2525:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2536:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:7"
																},
																"nativeSrc": "2518:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2518:21:7"
															},
															"nativeSrc": "2518:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2518:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2559:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2559:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2570:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2570:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2555:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2555:3:7"
																		},
																		"nativeSrc": "2555:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2555:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2575:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2575:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2548:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2548:6:7"
																},
																"nativeSrc": "2548:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2548:30:7"
															},
															"nativeSrc": "2548:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "2548:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2598:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2598:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2609:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2609:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2594:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2594:3:7"
																		},
																		"nativeSrc": "2594:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2594:18:7"
																	},
																	{
																		"hexValue": "5875736447656e65736973506f6f6c3a2058757364206973207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "2614:34:7",
																		"nodeType": "YulLiteral",
																		"src": "2614:34:7",
																		"type": "",
																		"value": "XusdGenesisPool: Xusd is zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2587:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2587:6:7"
																},
																"nativeSrc": "2587:62:7",
																"nodeType": "YulFunctionCall",
																"src": "2587:62:7"
															},
															"nativeSrc": "2587:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "2587:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2669:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2669:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2680:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2680:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2665:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2665:3:7"
																		},
																		"nativeSrc": "2665:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2665:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "2685:7:7",
																		"nodeType": "YulLiteral",
																		"src": "2685:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2658:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:7"
																},
																"nativeSrc": "2658:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2658:35:7"
															},
															"nativeSrc": "2658:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "2658:35:7"
														},
														{
															"nativeSrc": "2702:27:7",
															"nodeType": "YulAssignment",
															"src": "2702:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2714:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2714:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2725:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2725:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2710:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2710:3:7"
																},
																"nativeSrc": "2710:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2710:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2702:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2702:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2734a09ecd0aa61fbb750d6a51502de29edef70e696f5af4ce6e8c880e7c2102__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2334:401:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2485:9:7",
														"nodeType": "YulTypedName",
														"src": "2485:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2499:4:7",
														"nodeType": "YulTypedName",
														"src": "2499:4:7",
														"type": ""
													}
												],
												"src": "2334:401:7"
											},
											{
												"body": {
													"nativeSrc": "2914:227:7",
													"nodeType": "YulBlock",
													"src": "2914:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2931:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2931:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2942:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2942:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2924:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:7"
																},
																"nativeSrc": "2924:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2924:21:7"
															},
															"nativeSrc": "2924:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2924:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2965:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2965:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2976:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2976:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2961:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2961:3:7"
																		},
																		"nativeSrc": "2961:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2981:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2981:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2954:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:7"
																},
																"nativeSrc": "2954:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2954:30:7"
															},
															"nativeSrc": "2954:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "2954:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3004:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3004:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3015:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3015:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3000:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3000:3:7"
																		},
																		"nativeSrc": "3000:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3000:18:7"
																	},
																	{
																		"hexValue": "5875736447656e65736973506f6f6c3a20746f74616c52657761726473206973",
																		"kind": "string",
																		"nativeSrc": "3020:34:7",
																		"nodeType": "YulLiteral",
																		"src": "3020:34:7",
																		"type": "",
																		"value": "XusdGenesisPool: totalRewards is"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2993:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:7"
																},
																"nativeSrc": "2993:62:7",
																"nodeType": "YulFunctionCall",
																"src": "2993:62:7"
															},
															"nativeSrc": "2993:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "2993:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3075:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3075:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3086:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3086:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3071:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3071:3:7"
																		},
																		"nativeSrc": "3071:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3071:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3091:7:7",
																		"nodeType": "YulLiteral",
																		"src": "3091:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3064:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3064:6:7"
																},
																"nativeSrc": "3064:35:7",
																"nodeType": "YulFunctionCall",
																"src": "3064:35:7"
															},
															"nativeSrc": "3064:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "3064:35:7"
														},
														{
															"nativeSrc": "3108:27:7",
															"nodeType": "YulAssignment",
															"src": "3108:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3120:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3120:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3131:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3131:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3116:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3116:3:7"
																},
																"nativeSrc": "3116:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3116:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3108:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3108:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24073964cebb5a480a1017d149dc5fd778a4b28a8ec6083e8b545a9135500bad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2740:401:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2891:9:7",
														"nodeType": "YulTypedName",
														"src": "2891:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2905:4:7",
														"nodeType": "YulTypedName",
														"src": "2905:4:7",
														"type": ""
													}
												],
												"src": "2740:401:7"
											},
											{
												"body": {
													"nativeSrc": "3320:226:7",
													"nodeType": "YulBlock",
													"src": "3320:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3337:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3337:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3348:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3348:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3330:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:6:7"
																},
																"nativeSrc": "3330:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:21:7"
															},
															"nativeSrc": "3330:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3330:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3371:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3371:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3382:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3382:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3367:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:7"
																		},
																		"nativeSrc": "3367:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3367:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3387:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3360:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:7"
																},
																"nativeSrc": "3360:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3360:30:7"
															},
															"nativeSrc": "3360:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3360:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3410:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3410:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3421:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3421:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3406:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3406:3:7"
																		},
																		"nativeSrc": "3406:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:18:7"
																	},
																	{
																		"hexValue": "5875736447656e65736973506f6f6c3a2072756e6e696e6754696d6520697320",
																		"kind": "string",
																		"nativeSrc": "3426:34:7",
																		"nodeType": "YulLiteral",
																		"src": "3426:34:7",
																		"type": "",
																		"value": "XusdGenesisPool: runningTime is "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3399:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:7"
																},
																"nativeSrc": "3399:62:7",
																"nodeType": "YulFunctionCall",
																"src": "3399:62:7"
															},
															"nativeSrc": "3399:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "3399:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3481:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3481:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3492:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3492:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3477:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3477:3:7"
																		},
																		"nativeSrc": "3477:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3477:18:7"
																	},
																	{
																		"hexValue": "7a65726f",
																		"kind": "string",
																		"nativeSrc": "3497:6:7",
																		"nodeType": "YulLiteral",
																		"src": "3497:6:7",
																		"type": "",
																		"value": "zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3470:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3470:6:7"
																},
																"nativeSrc": "3470:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3470:34:7"
															},
															"nativeSrc": "3470:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3470:34:7"
														},
														{
															"nativeSrc": "3513:27:7",
															"nodeType": "YulAssignment",
															"src": "3513:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3525:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3525:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3536:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3536:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3521:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3521:3:7"
																},
																"nativeSrc": "3521:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3521:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3513:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3513:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_087c1afcbc4b80d51e756fd5b00eab1f558e892efb01f001555bfc4ba77a2ed0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3146:400:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3297:9:7",
														"nodeType": "YulTypedName",
														"src": "3297:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3311:4:7",
														"nodeType": "YulTypedName",
														"src": "3311:4:7",
														"type": ""
													}
												],
												"src": "3146:400:7"
											},
											{
												"body": {
													"nativeSrc": "3597:171:7",
													"nodeType": "YulBlock",
													"src": "3597:171:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3628:111:7",
																"nodeType": "YulBlock",
																"src": "3628:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3649:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3649:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3656:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3656:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3661:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3661:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3652:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3652:3:7"
																					},
																					"nativeSrc": "3652:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3652:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3642:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3642:6:7"
																			},
																			"nativeSrc": "3642:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3642:31:7"
																		},
																		"nativeSrc": "3642:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3642:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3693:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3693:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3696:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3696:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3686:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3686:6:7"
																			},
																			"nativeSrc": "3686:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3686:15:7"
																		},
																		"nativeSrc": "3686:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3686:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3721:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3721:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3724:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3724:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3714:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3714:6:7"
																			},
																			"nativeSrc": "3714:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3714:15:7"
																		},
																		"nativeSrc": "3714:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3714:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3617:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3617:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3610:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:7"
																},
																"nativeSrc": "3610:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3610:9:7"
															},
															"nativeSrc": "3607:132:7",
															"nodeType": "YulIf",
															"src": "3607:132:7"
														},
														{
															"nativeSrc": "3748:14:7",
															"nodeType": "YulAssignment",
															"src": "3748:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3757:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3757:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3760:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3760:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3753:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3753:3:7"
																},
																"nativeSrc": "3753:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3753:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3748:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "3748:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3551:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3582:1:7",
														"nodeType": "YulTypedName",
														"src": "3582:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3585:1:7",
														"nodeType": "YulTypedName",
														"src": "3585:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3591:1:7",
														"nodeType": "YulTypedName",
														"src": "3591:1:7",
														"type": ""
													}
												],
												"src": "3551:217:7"
											},
											{
												"body": {
													"nativeSrc": "3805:95:7",
													"nodeType": "YulBlock",
													"src": "3805:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3822:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3822:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3829:3:7",
																				"nodeType": "YulLiteral",
																				"src": "3829:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3834:10:7",
																				"nodeType": "YulLiteral",
																				"src": "3834:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3825:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3825:3:7"
																		},
																		"nativeSrc": "3825:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3825:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3815:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3815:6:7"
																},
																"nativeSrc": "3815:31:7",
																"nodeType": "YulFunctionCall",
																"src": "3815:31:7"
															},
															"nativeSrc": "3815:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "3815:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3862:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3862:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3865:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3865:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3855:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3855:6:7"
																},
																"nativeSrc": "3855:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3855:15:7"
															},
															"nativeSrc": "3855:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3855:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3886:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3886:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3889:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3889:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3879:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3879:6:7"
																},
																"nativeSrc": "3879:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3879:15:7"
															},
															"nativeSrc": "3879:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3879:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "3773:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3773:127:7"
											},
											{
												"body": {
													"nativeSrc": "3953:174:7",
													"nodeType": "YulBlock",
													"src": "3953:174:7",
													"statements": [
														{
															"nativeSrc": "3963:16:7",
															"nodeType": "YulAssignment",
															"src": "3963:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3974:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3974:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3977:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3977:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3970:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3970:3:7"
																},
																"nativeSrc": "3970:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3970:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3963:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3963:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4010:111:7",
																"nodeType": "YulBlock",
																"src": "4010:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4031:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4031:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4038:3:7",
																							"nodeType": "YulLiteral",
																							"src": "4038:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4043:10:7",
																							"nodeType": "YulLiteral",
																							"src": "4043:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4034:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4034:3:7"
																					},
																					"nativeSrc": "4034:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4034:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4024:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4024:6:7"
																			},
																			"nativeSrc": "4024:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4024:31:7"
																		},
																		"nativeSrc": "4024:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4024:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4075:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4075:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4078:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4078:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4068:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4068:6:7"
																			},
																			"nativeSrc": "4068:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4068:15:7"
																		},
																		"nativeSrc": "4068:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4068:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4103:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4103:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4106:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4106:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4096:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4096:6:7"
																			},
																			"nativeSrc": "4096:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4096:15:7"
																		},
																		"nativeSrc": "4096:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4096:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3994:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3994:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3997:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3997:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3991:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3991:2:7"
																},
																"nativeSrc": "3991:10:7",
																"nodeType": "YulFunctionCall",
																"src": "3991:10:7"
															},
															"nativeSrc": "3988:133:7",
															"nodeType": "YulIf",
															"src": "3988:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3905:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3936:1:7",
														"nodeType": "YulTypedName",
														"src": "3936:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3939:1:7",
														"nodeType": "YulTypedName",
														"src": "3939:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3945:3:7",
														"nodeType": "YulTypedName",
														"src": "3945:3:7",
														"type": ""
													}
												],
												"src": "3905:222:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let offset := mload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let _2 := shl(5, length)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_2, 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, length)\n        dst := add(memPtr, 32)\n        let srcEnd := add(add(_1, _2), 32)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_1, 32)\n        for { } lt(src, srcEnd) { src := add(src, 32) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, 32)\n        }\n        value1 := memPtr\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 128))\n        value4 := value_2\n        let value_3 := 0\n        value_3 := mload(add(headStart, 160))\n        value5 := value_3\n    }\n    function abi_encode_tuple_t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 4)\n        mstore(add(headStart, 64), \"late\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2734a09ecd0aa61fbb750d6a51502de29edef70e696f5af4ce6e8c880e7c2102__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"XusdGenesisPool: Xusd is zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24073964cebb5a480a1017d149dc5fd778a4b28a8ec6083e8b545a9135500bad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"XusdGenesisPool: totalRewards is\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_087c1afcbc4b80d51e756fd5b00eab1f558e892efb01f001555bfc4ba77a2ed0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"XusdGenesisPool: runningTime is \")\n        mstore(add(headStart, 96), \"zero\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f600755348015610013575f5ffd5b50604051611a04380380611a04833981016040819052610032916102d2565b8242106100735760405162461bcd60e51b815260040161006a906020808252600490820152636c61746560e01b604082015260600190565b60405180910390fd5b6001600160a01b0386166100d75760405162461bcd60e51b815260206004820152602560248201527f5875736447656e65736973506f6f6c3a2058757364206973207a65726f206164604482015264647265737360d81b606482015260840161006a565b5f82116101345760405162461bcd60e51b815260206004820152602560248201527f5875736447656e65736973506f6f6c3a20746f74616c52657761726473206973604482015264207a65726f60d81b606482015260840161006a565b5f811161018f5760405162461bcd60e51b8152602060048201526024808201527f5875736447656e65736973506f6f6c3a2072756e6e696e6754696d65206973206044820152637a65726f60e01b606482015260840161006a565b600480546001600160a01b0319166001600160a01b038816179055600c829055600b8190556101be81836103d2565b600a555f5b8551811015610201576101f88682815181106101e1576101e16103f1565b60200260200101515f61023a60201b90919060201c565b506001016101c3565b5060028490556008839055600b546102199084610405565b6009555050600380546001600160a01b031916331790555061042492505050565b5f61024e836001600160a01b038416610257565b90505b92915050565b5f81815260018301602052604081205461029c57508154600181810184555f848152602080822090930184905584548482528286019093526040902091909155610251565b505f610251565b80516001600160a01b03811681146102b9575f5ffd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f5f5f60c087890312156102e7575f5ffd5b6102f0876102a3565b60208801519096506001600160401b0381111561030b575f5ffd5b8701601f8101891361031b575f5ffd5b80516001600160401b03811115610334576103346102be565b604051600582901b90603f8201601f191681016001600160401b0381118282101715610362576103626102be565b60405291825260208184018101929081018c84111561037f575f5ffd5b6020850194505b838510156103a557610397856102a3565b815260209485019401610386565b5060408b015160608c015160808d015160a0909d01519b9e929d50909b909a909950975095505050505050565b5f826103ec57634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b8082018082111561025157634e487b7160e01b5f52601160045260245ffd5b6115d3806104315f395ff3fe608060405234801561000f575f5ffd5b5060043610610153575f3560e01c80635f96dc11116100bf57806392fae48d1161007957806392fae48d146102c157806393f1a40b146102c9578063943f013d1461030f578063b3ab15fb14610318578063e2bbb1581461032b578063f25bb8651461033e575f5ffd5b80635f96dc1114610278578063628b409f1461028157806362e006c71461028a578063630b5ba11461029d5780636e271dd5146102a55780637805583c146102ae575f5ffd5b806351eb05a61161011057806351eb05a6146102035780635312ea8e1461021657806354575af414610229578063570ca7351461023c5780635715f8f91461025c5780635b14295614610265575f5ffd5b80630e15561a146101575780631526fe271461017357806317caf6f1146101bf5780631ab06ee5146101c8578063231f0c6a146101dd578063441a3e70146101f0575b5f5ffd5b610160600c5481565b6040519081526020015b60405180910390f35b61018661018136600461133e565b610351565b604080516001600160a01b03909716875260208701959095529385019290925260608401521515608083015260a082015260c00161016a565b61016060075481565b6101db6101d6366004611355565b6103a5565b005b6101606101eb366004611355565b61043b565b6101db6101fe366004611355565b6104dd565b6101db61021136600461133e565b610703565b6101db61022436600461133e565b610869565b6101db61023736600461138c565b610961565b60035461024f906001600160a01b031681565b60405161016a91906113cb565b61016060025481565b61024f61027336600461133e565b610ae6565b61016060085481565b610160600a5481565b6101db6102983660046113ec565b610af1565b6101db610d05565b61016060095481565b6101606102bc36600461143a565b610d27565b610160610e8d565b6102fa6102d736600461143a565b600660209081525f92835260408084209091529082529020805460019091015482565b6040805192835260208301919091520161016a565b610160600b5481565b6101db610326366004611468565b610e9c565b6101db610339366004611355565b610ee8565b60045461024f906001600160a01b031681565b60058181548110610360575f80fd5b5f9182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909260ff9091169086565b6003546001600160a01b031633146103d85760405162461bcd60e51b81526004016103cf90611483565b60405180910390fd5b6103e0610d05565b5f600583815481106103f4576103f46114ce565b5f9182526020909120600690910201600481015490915060ff16156104345781816001015460075461042691906114f6565b6104309190611509565b6007555b6001015550565b5f81831061044a57505f6104d7565b60095482106104a157600954831061046357505f6104d7565b600854831161049057600a5460085460095461047f91906114f6565b610489919061151c565b90506104d7565b600a548360095461047f91906114f6565b60085482116104b157505f6104d7565b60085483116104ca57600a5460085461047f90846114f6565b600a5461047f84846114f6565b92915050565b5f3390505f600584815481106104f5576104f56114ce565b5f9182526020808320878452600680835260408086206001600160a01b038916875290935291909320805492909102909201925084111561056d5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b60448201526064016103cf565b61057685610703565b5f8160010154670de0b6b3a76400008460030154845f0154610598919061151c565b6105a29190611533565b6105ac91906114f6565b90508015610602576105be848261115d565b836001600160a01b03167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040516105f991815260200190565b60405180910390a25b84156106925784825f015f82825461061a91906114f6565b9091555050825460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906106509087908990600401611552565b6020604051808303815f875af115801561066c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610690919061156b565b505b60038301548254670de0b6b3a7640000916106ac9161151c565b6106b69190611533565b600183015560405185815286906001600160a01b038616907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a3505050505050565b5f60058281548110610717576107176114ce565b905f5260205f209060060201905080600201544211610734575050565b80546040516370a0823160e01b81525f916001600160a01b0316906370a08231906107639030906004016113cb565b602060405180830381865afa15801561077e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a29190611586565b9050805f036107b657504260029091015550565b600482015460ff166107ee5760048201805460ff19166001908117909155820154600780545f906107e8908490611509565b90915550505b6007541561085e575f61080583600201544261043b565b90505f60075484600101548361081b919061151c565b6108259190611533565b90508261083a82670de0b6b3a764000061151c565b6108449190611533565b846003015f8282546108569190611509565b909155505050505b504260029091015550565b5f6005828154811061087d5761087d6114ce565b5f91825260208083208584526006808352604080862033808852945280862080548782556001820197909755919094029091018054935163a9059cbb60e01b81529095509093926001600160a01b03169163a9059cbb916108e391908590600401611552565b6020604051808303815f875af11580156108ff573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610923919061156b565b50604051818152849033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a350505050565b6003546001600160a01b0316331461098b5760405162461bcd60e51b81526004016103cf90611483565b60095461099b9062278d00611509565b421015610a72576004546001600160a01b03908116908416036109e95760405162461bcd60e51b81526004016103cf90602080825260049082015263161d5cd960e21b604082015260600190565b6005545f5b81811015610a6f575f60058281548110610a0a57610a0a6114ce565b5f918252602090912060069091020180549091506001600160a01b0390811690871603610a665760405162461bcd60e51b815260206004820152600a6024820152693837b7b6173a37b5b2b760b11b60448201526064016103cf565b506001016109ee565b50505b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb90610aa09084908690600401611552565b6020604051808303815f875af1158015610abc573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ae0919061156b565b50505050565b5f6104d78183611244565b6003546001600160a01b03163314610b1b5760405162461bcd60e51b81526004016103cf90611483565b610b2484611256565b8215610b3257610b32610d05565b600854421015610b6257815f03610b4d576008549150610b77565b600854821015610b5d5760085491505b610b77565b811580610b6e57504282105b15610b77574291505b5f60085483111580610b895750428311155b6040805160c0810182526001600160a01b038881168252602082018a81529282018781525f60608401818152861580156080870190815260a087018b815260058054600181018255955296517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600690950294850180546001600160a01b031916919097161790955595517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db183015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db382015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db48201805460ff191691151591909117905590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db590910155909150610cfd578560075f828254610cf79190611509565b90915550505b505050505050565b6005545f5b81811015610d2357610d1b81610703565b600101610d0a565b5050565b5f5f60058481548110610d3c57610d3c6114ce565b5f9182526020808320878452600680835260408086206001600160a01b038a811688529452808620949091029091016003810154815492516370a0823160e01b815291965093949291909116906370a0823190610d9d9030906004016113cb565b602060405180830381865afa158015610db8573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ddc9190611586565b9050836002015442118015610df057508015155b15610e52575f610e0485600201544261043b565b90505f600754866001015483610e1a919061151c565b610e249190611533565b905082610e3982670de0b6b3a764000061151c565b610e439190611533565b610e4d9085611509565b935050505b60018301548354670de0b6b3a764000090610e6e90859061151c565b610e789190611533565b610e8291906114f6565b979650505050505050565b5f610e975f6112ee565b905090565b6003546001600160a01b03163314610ec65760405162461bcd60e51b81526004016103cf90611483565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b5f3390505f60058481548110610f0057610f006114ce565b5f9182526020808320878452600680835260408086206001600160a01b03891687529093529190932091029091019150610f3985610703565b805415610fce575f8160010154670de0b6b3a76400008460030154845f0154610f62919061151c565b610f6c9190611533565b610f7691906114f6565b90508015610fcc57610f88848261115d565b836001600160a01b03167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610fc391815260200190565b60405180910390a25b505b805460058301545f91610fe0916114f6565b90505f818611610ff05785610ff2565b815b905080156110eb5783546040516323b872dd60e01b81526001600160a01b03878116600483015230602483015260448201849052909116906323b872dd906064016020604051808303815f875af115801561104f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611073919061156b565b50835461108a905f906001600160a01b03166112f7565b156110d3576002546127109081906110a290826114f6565b6110ac908461151c565b6110b69190611533565b845f015f8282546110c79190611509565b909155506110eb915050565b80835f015f8282546110e59190611509565b90915550505b60038401548354670de0b6b3a7640000916111059161151c565b61110f9190611533565b600184015560405181815287906001600160a01b038716907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a350505050505050565b600480546040516370a0823160e01b81525f926001600160a01b03909216916370a082319161118e913091016113cb565b602060405180830381865afa1580156111a9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111cd9190611586565b9050801561123f578082111561120e576004805460405163a9059cbb60e01b81526001600160a01b039091169163a9059cbb91610aa0918791869101611552565b6004805460405163a9059cbb60e01b81526001600160a01b039091169163a9059cbb91610aa0918791879101611552565b505050565b5f61124f8383611318565b9392505050565b6005545f5b8181101561123f57826001600160a01b031660058281548110611280576112806114ce565b5f9182526020909120600690910201546001600160a01b0316036112e65760405162461bcd60e51b815260206004820152601f60248201527f5875736447656e65736973506f6f6c3a206578697374696e6720706f6f6c3f0060448201526064016103cf565b60010161125b565b5f6104d7825490565b6001600160a01b0381165f908152600183016020526040812054151561124f565b5f825f01828154811061132d5761132d6114ce565b905f5260205f200154905092915050565b5f6020828403121561134e575f5ffd5b5035919050565b5f5f60408385031215611366575f5ffd5b50508035926020909101359150565b6001600160a01b0381168114611389575f5ffd5b50565b5f5f5f6060848603121561139e575f5ffd5b83356113a981611375565b92506020840135915060408401356113c081611375565b809150509250925092565b6001600160a01b0391909116815260200190565b8015158114611389575f5ffd5b5f5f5f5f5f60a08688031215611400575f5ffd5b85359450602086013561141281611375565b93506040860135611422816113df565b94979396509394606081013594506080013592915050565b5f5f6040838503121561144b575f5ffd5b82359150602083013561145d81611375565b809150509250929050565b5f60208284031215611478575f5ffd5b813561124f81611375565b6020808252602b908201527f5875736447656e65736973506f6f6c3a2063616c6c6572206973206e6f74207460408201526a34329037b832b930ba37b960a91b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b818103818111156104d7576104d76114e2565b808201808211156104d7576104d76114e2565b80820281158282048414176104d7576104d76114e2565b5f8261154d57634e487b7160e01b5f52601260045260245ffd5b500490565b6001600160a01b03929092168252602082015260400190565b5f6020828403121561157b575f5ffd5b815161124f816113df565b5f60208284031215611596575f5ffd5b505191905056fea2646970667358221220e39b6ba85b135184adef6900236c7e8d953eb40ac576770644fb1d557b358bcf64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1A04 CODESIZE SUB DUP1 PUSH2 0x1A04 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x32 SWAP2 PUSH2 0x2D2 JUMP JUMPDEST DUP3 TIMESTAMP LT PUSH2 0x73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x6C617465 PUSH1 0xE0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5875736447656E65736973506F6F6C3A2058757364206973207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x134 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5875736447656E65736973506F6F6C3A20746F74616C52657761726473206973 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x18F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5875736447656E65736973506F6F6C3A2072756E6E696E6754696D6520697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x7A65726F PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0xB DUP2 SWAP1 SSTORE PUSH2 0x1BE DUP2 DUP4 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0xA SSTORE PUSH0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x201 JUMPI PUSH2 0x1F8 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E1 JUMPI PUSH2 0x1E1 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 PUSH2 0x23A PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1C3 JUMP JUMPDEST POP PUSH1 0x2 DUP5 SWAP1 SSTORE PUSH1 0x8 DUP4 SWAP1 SSTORE PUSH1 0xB SLOAD PUSH2 0x219 SWAP1 DUP5 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x9 SSTORE POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP PUSH2 0x424 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24E DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x257 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x29C JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x251 JUMP JUMPDEST POP PUSH0 PUSH2 0x251 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2F0 DUP8 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x30B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0x31B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x334 JUMPI PUSH2 0x334 PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x5 DUP3 SWAP1 SHL SWAP1 PUSH1 0x3F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x362 JUMPI PUSH2 0x362 PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP13 DUP5 GT ISZERO PUSH2 0x37F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x3A5 JUMPI PUSH2 0x397 DUP6 PUSH2 0x2A3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 ADD PUSH2 0x386 JUMP JUMPDEST POP PUSH1 0x40 DUP12 ADD MLOAD PUSH1 0x60 DUP13 ADD MLOAD PUSH1 0x80 DUP14 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP14 ADD MLOAD SWAP12 SWAP15 SWAP3 SWAP14 POP SWAP1 SWAP12 SWAP1 SWAP11 SWAP1 SWAP10 POP SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3EC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x251 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x15D3 DUP1 PUSH2 0x431 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x153 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F96DC11 GT PUSH2 0xBF JUMPI DUP1 PUSH4 0x92FAE48D GT PUSH2 0x79 JUMPI DUP1 PUSH4 0x92FAE48D EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x943F013D EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xF25BB865 EQ PUSH2 0x33E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x628B409F EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x62E006C7 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x6E271DD5 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x7805583C EQ PUSH2 0x2AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x5715F8F9 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x5B142956 EQ PUSH2 0x265 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xE15561A EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1F0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x160 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x16A JUMP JUMPDEST PUSH2 0x160 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x3A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x869 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x138C JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x160 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x160 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x160 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x160 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x160 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x2FA PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x16A JUMP JUMPDEST PUSH2 0x160 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP6 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E0 PUSH2 0xD05 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3F4 JUMPI PUSH2 0x3F4 PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x434 JUMPI DUP2 DUP2 PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x1 ADD SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x44A JUMPI POP PUSH0 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x4A1 JUMPI PUSH1 0x9 SLOAD DUP4 LT PUSH2 0x463 JUMPI POP PUSH0 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 GT PUSH2 0x490 JUMPI PUSH1 0xA SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST SWAP1 POP PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0xA SLOAD DUP4 PUSH1 0x9 SLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 GT PUSH2 0x4B1 JUMPI POP PUSH0 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 GT PUSH2 0x4CA JUMPI PUSH1 0xA SLOAD PUSH1 0x8 SLOAD PUSH2 0x47F SWAP1 DUP5 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x47F DUP5 DUP5 PUSH2 0x14F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4F5 JUMPI PUSH2 0x4F5 PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x6 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP8 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SWAP2 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP5 GT ISZERO PUSH2 0x56D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x576 DUP6 PUSH2 0x703 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x598 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x602 JUMPI PUSH2 0x5BE DUP5 DUP3 PUSH2 0x115D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5F9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP5 ISZERO PUSH2 0x692 JUMPI DUP5 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x650 SWAP1 DUP8 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x690 SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST POP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP3 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x6AC SWAP2 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x717 JUMPI PUSH2 0x717 PUSH2 0x14CE JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x734 JUMPI POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x763 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x77E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x7B6 JUMPI POP TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH2 0x7EE JUMPI PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x7E8 SWAP1 DUP5 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x85E JUMPI PUSH0 PUSH2 0x805 DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x43B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 SLOAD DUP5 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x81B SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x825 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x83A DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMPDEST POP TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x87D JUMPI PUSH2 0x87D PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x6 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 CALLER DUP1 DUP9 MSTORE SWAP5 MSTORE DUP1 DUP7 KECCAK256 DUP1 SLOAD DUP8 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP8 SWAP1 SWAP8 SSTORE SWAP2 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD SWAP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP6 POP SWAP1 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x8E3 SWAP2 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x923 SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x99B SWAP1 PUSH3 0x278D00 PUSH2 0x1509 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA72 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x161D5CD9 PUSH1 0xE2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA6F JUMPI PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA0A JUMPI PUSH2 0xA0A PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP8 AND SUB PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x3837B7B6173A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x9EE JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0xAA0 SWAP1 DUP5 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xABC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D7 DUP2 DUP4 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0x1483 JUMP JUMPDEST PUSH2 0xB24 DUP5 PUSH2 0x1256 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xB32 JUMPI PUSH2 0xB32 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO PUSH2 0xB62 JUMPI DUP2 PUSH0 SUB PUSH2 0xB4D JUMPI PUSH1 0x8 SLOAD SWAP2 POP PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0xB5D JUMPI PUSH1 0x8 SLOAD SWAP2 POP JUMPDEST PUSH2 0xB77 JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0xB6E JUMPI POP TIMESTAMP DUP3 LT JUMPDEST ISZERO PUSH2 0xB77 JUMPI TIMESTAMP SWAP2 POP JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP4 GT ISZERO DUP1 PUSH2 0xB89 JUMPI POP TIMESTAMP DUP4 GT ISZERO JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP11 DUP2 MSTORE SWAP3 DUP3 ADD DUP8 DUP2 MSTORE PUSH0 PUSH1 0x60 DUP5 ADD DUP2 DUP2 MSTORE DUP7 ISZERO DUP1 ISZERO PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD DUP12 DUP2 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP6 MSTORE SWAP7 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 PUSH1 0x6 SWAP1 SWAP6 MUL SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP8 AND OR SWAP1 SWAP6 SSTORE SWAP6 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP4 ADD SSTORE SWAP2 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5 SWAP1 SWAP2 ADD SSTORE SWAP1 SWAP2 POP PUSH2 0xCFD JUMPI DUP6 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF7 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD23 JUMPI PUSH2 0xD1B DUP2 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD0A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD3C JUMPI PUSH2 0xD3C PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x6 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP9 MSTORE SWAP5 MSTORE DUP1 DUP7 KECCAK256 SWAP5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD PUSH1 0x3 DUP2 ADD SLOAD DUP2 SLOAD SWAP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP7 POP SWAP4 SWAP5 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xD9D SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDB8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDDC SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0xDF0 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE52 JUMPI PUSH0 PUSH2 0xE04 DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x43B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 SLOAD DUP7 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0xE1A SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0xE39 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x151C JUMP JUMPDEST PUSH2 0xE43 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0xE4D SWAP1 DUP6 PUSH2 0x1509 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD DUP4 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0xE6E SWAP1 DUP6 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0xE78 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE97 PUSH0 PUSH2 0x12EE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF00 JUMPI PUSH2 0xF00 PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x6 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP8 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xF39 DUP6 PUSH2 0x703 JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0xFCE JUMPI PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0xF62 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0xF6C SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xFCC JUMPI PUSH2 0xF88 DUP5 DUP3 PUSH2 0x115D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xFC3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH1 0x5 DUP4 ADD SLOAD PUSH0 SWAP2 PUSH2 0xFE0 SWAP2 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP7 GT PUSH2 0xFF0 JUMPI DUP6 PUSH2 0xFF2 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x10EB JUMPI DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x104F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1073 SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST POP DUP4 SLOAD PUSH2 0x108A SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12F7 JUMP JUMPDEST ISZERO PUSH2 0x10D3 JUMPI PUSH1 0x2 SLOAD PUSH2 0x2710 SWAP1 DUP2 SWAP1 PUSH2 0x10A2 SWAP1 DUP3 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x10AC SWAP1 DUP5 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x10B6 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST DUP5 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x10EB SWAP2 POP POP JUMP JUMPDEST DUP1 DUP4 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10E5 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD DUP4 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1105 SWAP2 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x110F SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH2 0x118E SWAP2 ADDRESS SWAP2 ADD PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11CD SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x123F JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x120E JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0xAA0 SWAP2 DUP8 SWAP2 DUP7 SWAP2 ADD PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0xAA0 SWAP2 DUP8 SWAP2 DUP8 SWAP2 ADD PUSH2 0x1552 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x124F DUP4 DUP4 PUSH2 0x1318 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x123F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1280 JUMPI PUSH2 0x1280 PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x12E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5875736447656E65736973506F6F6C3A206578697374696E6720706F6F6C3F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x125B JUMP JUMPDEST PUSH0 PUSH2 0x4D7 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x124F JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x132D JUMPI PUSH2 0x132D PUSH2 0x14CE JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1366 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1389 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x139E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x13A9 DUP2 PUSH2 0x1375 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x13C0 DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1389 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1400 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1412 DUP2 PUSH2 0x1375 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x1422 DUP2 PUSH2 0x13DF JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x145D DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1478 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x124F DUP2 PUSH2 0x1375 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x5875736447656E65736973506F6F6C3A2063616C6C6572206973206E6F742074 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x34329037B832B930BA37B9 PUSH1 0xA9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4D7 JUMPI PUSH2 0x4D7 PUSH2 0x14E2 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4D7 JUMPI PUSH2 0x4D7 PUSH2 0x14E2 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4D7 JUMPI PUSH2 0x4D7 PUSH2 0x14E2 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x154D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x124F DUP2 PUSH2 0x13DF JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1596 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SWAP12 PUSH12 0xA85B135184ADEF6900236C7E DUP14 SWAP6 RETURNDATACOPY 0xB4 EXP 0xC5 PUSH23 0x770644FB1D557B358BCF64736F6C634300081B00330000 ",
							"sourceMap": "181:9911:6:-:0;;;831:1;798:34;;1311:962;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1559:14;1541:15;:32;1533:49;;;;-1:-1:-1;;;1533:49:6;;;;;;2204:2:7;2186:21;;;2243:1;2223:18;;;2216:29;-1:-1:-1;;;2276:2:7;2261:18;;2254:34;2320:2;2305:18;;2002:327;1533:49:6;;;;;;;;;-1:-1:-1;;;;;1600:19:6;;1592:69;;;;-1:-1:-1;;;1592:69:6;;2536:2:7;1592:69:6;;;2518:21:7;2575:2;2555:18;;;2548:30;2614:34;2594:18;;;2587:62;-1:-1:-1;;;2665:18:7;;;2658:35;2710:19;;1592:69:6;2334:401:7;1592:69:6;1695:1;1679:13;:17;1671:67;;;;-1:-1:-1;;;1671:67:6;;2942:2:7;1671:67:6;;;2924:21:7;2981:2;2961:18;;;2954:30;3020:34;3000:18;;;2993:62;-1:-1:-1;;;3071:18:7;;;3064:35;3116:19;;1671:67:6;2740:401:7;1671:67:6;1771:1;1756:12;:16;1748:65;;;;-1:-1:-1;;;1748:65:6;;3348:2:7;1748:65:6;;;3330:21:7;3387:2;3367:18;;;3360:30;3426:34;3406:18;;;3399:62;-1:-1:-1;;;3477:18:7;;;3470:34;3521:19;;1748:65:6;3146:400:7;1748:65:6;1823:4;:20;;-1:-1:-1;;;;;;1823:20:6;-1:-1:-1;;;;;1823:20:6;;;;;1853:12;:28;;;1891:11;:26;;;1943;1891;1853:28;1943:26;:::i;:::-;1927:13;:42;1984:9;1979:120;2003:16;:23;1999:1;:27;1979:120;;;2047:41;2068:16;2085:1;2068:19;;;;;;;;:::i;:::-;;;;;;;2047:16;:20;;;;:41;;;;:::i;:::-;-1:-1:-1;2028:3:6;;1979:120;;;-1:-1:-1;2108:16:6;:36;;;2154:13;:30;;;2224:11;;2208:27;;2170:14;2208:27;:::i;:::-;2194:11;:41;-1:-1:-1;;2245:8:6;:21;;-1:-1:-1;;;;;;2245:21:6;2256:10;2245:21;;;-1:-1:-1;181:9911:6;;-1:-1:-1;;;181:9911:6;8316:150:5;8386:4;8409:50;8414:3;-1:-1:-1;;;;;8434:23:5;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;;:::o;2241:406::-;2304:4;4360:21;;;:14;;;:21;;;;;;2320:321;;-1:-1:-1;2362:23:5;;;;;;;;:11;:23;;;;;;;;;;;;;2544:18;;2520:21;;;:14;;;:21;;;;;;:42;;;;2576:11;;2320:321;-1:-1:-1;2625:5:5;2618:12;;14:177:7;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1669;468:6;476;484;492;500;508;561:3;549:9;540:7;536:23;532:33;529:53;;;578:1;575;568:12;529:53;601:40;631:9;601:40;:::i;:::-;685:2;670:18;;664:25;591:50;;-1:-1:-1;;;;;;701:30:7;;698:50;;;744:1;741;734:12;698:50;767:22;;820:4;812:13;;808:27;-1:-1:-1;798:55:7;;849:1;846;839:12;798:55;876:9;;-1:-1:-1;;;;;897:30:7;;894:56;;;930:18;;:::i;:::-;1012:2;1006:9;973:1;969:14;;;;1066:2;1058:11;;-1:-1:-1;;1054:25:7;1042:38;;-1:-1:-1;;;;;1095:34:7;;1131:22;;;1092:62;1089:88;;;1157:18;;:::i;:::-;1193:2;1186:22;1243;;;1293:2;1323:11;;;1319:20;;;1243:22;1281:15;;1351:19;;;1348:39;;;1383:1;1380;1373:12;1348:39;1415:2;1411;1407:11;1396:22;;1427:159;1443:6;1438:3;1435:15;1427:159;;;1509:34;1539:3;1509:34;:::i;:::-;1497:47;;1573:2;1460:12;;;;1564;1427:159;;;-1:-1:-1;1673:2:7;1658:18;;1652:25;1767:2;1752:18;;1746:25;1863:3;1848:19;;1842:26;1960:3;1945:19;;;1939:26;328:1669;;1605:6;;-1:-1:-1;1652:25:7;;1746;;1842:26;;-1:-1:-1;1939:26:7;-1:-1:-1;328:1669:7;-1:-1:-1;;;;;;328:1669:7:o;3551:217::-;3591:1;3617;3607:132;;3661:10;3656:3;3652:20;3649:1;3642:31;3696:4;3693:1;3686:15;3724:4;3721:1;3714:15;3607:132;-1:-1:-1;3753:9:7;;3551:217::o;3773:127::-;3834:10;3829:3;3825:20;3822:1;3815:31;3865:4;3862:1;3855:15;3889:4;3886:1;3879:15;3905:222;3970:9;;;3991:10;;;3988:133;;;4043:10;4038:3;4034:20;4031:1;4024:31;4078:4;4075:1;4068:15;4106:4;4103:1;4096:15;3905:222;181:9911:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@XusdPerSecond_1455": {
									"entryPoint": null,
									"id": 1455,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Xusd_1435": {
									"entryPoint": null,
									"id": 1435,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_at_972": {
									"entryPoint": 4888,
									"id": 972,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_contains_941": {
									"entryPoint": null,
									"id": 941,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_length_955": {
									"entryPoint": null,
									"id": 955,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_1917": {
									"entryPoint": 2801,
									"id": 1917,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@at_1234": {
									"entryPoint": 4676,
									"id": 1234,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkPoolDuplicate_1817": {
									"entryPoint": 4694,
									"id": 1817,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@comissionPercent_1430": {
									"entryPoint": null,
									"id": 1430,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@comissionToken_1621": {
									"entryPoint": 2790,
									"id": 1621,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@comissionTokensCount_1608": {
									"entryPoint": 3725,
									"id": 1608,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@contains_1192": {
									"entryPoint": 4855,
									"id": 1192,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deposit_2074": {
									"entryPoint": 3816,
									"id": 2074,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_2131": {
									"entryPoint": 2153,
									"id": 2131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getGeneratedReward_1783": {
									"entryPoint": 1083,
									"id": 1783,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@governanceRecoverUnsupported_2198": {
									"entryPoint": 2401,
									"id": 2198,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@length_1207": {
									"entryPoint": 4846,
									"id": 1207,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@massUpdatePools_2383": {
									"entryPoint": 3333,
									"id": 2383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@operator_1432": {
									"entryPoint": null,
									"id": 1432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pendingXusd_1713": {
									"entryPoint": 3367,
									"id": 1713,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolEndTime_1453": {
									"entryPoint": null,
									"id": 1453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolInfo_1439": {
									"entryPoint": 849,
									"id": 1439,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolStartTime_1451": {
									"entryPoint": null,
									"id": 1451,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@runningTime_1457": {
									"entryPoint": null,
									"id": 1457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeXusdTransfer_2529": {
									"entryPoint": 4445,
									"id": 2529,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setOperator_2249": {
									"entryPoint": 3740,
									"id": 2249,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_2237": {
									"entryPoint": 933,
									"id": 2237,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@totalAllocPoint_1449": {
									"entryPoint": null,
									"id": 1449,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalRewards_1459": {
									"entryPoint": null,
									"id": 1459,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updatePool_2486": {
									"entryPoint": 1795,
									"id": 2486,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_1446": {
									"entryPoint": null,
									"id": 1446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_2358": {
									"entryPoint": 1245,
									"id": 2358,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$729t_uint256t_address": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 5178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$729t_boolt_uint256t_uint256": {
									"entryPoint": 5100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5458,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94801dfd38f295ab953066afbb6df9200e899d0f59adca75e6b3a000501ad8e8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a3ad23ca9ea6675f31c99a26a92dd1cd138946af4198749db7a4e3ff1ee8c462__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a9f72e63f751613ead647b479c0f98983ffcc3fa58c3c2b364cd8c5c4ac9b8d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5346,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 5087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_contract_IERC20": {
									"entryPoint": 4981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8075:7",
										"nodeType": "YulBlock",
										"src": "0:8075:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:7",
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:25:7",
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nativeSrc": "160:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "266:156:7",
													"nodeType": "YulBlock",
													"src": "266:156:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "312:16:7",
																"nodeType": "YulBlock",
																"src": "312:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "321:1:7",
																					"nodeType": "YulLiteral",
																					"src": "321:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "324:1:7",
																					"nodeType": "YulLiteral",
																					"src": "324:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "314:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:7"
																			},
																			"nativeSrc": "314:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:7"
																		},
																		"nativeSrc": "314:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "287:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "296:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "283:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:7"
																		},
																		"nativeSrc": "283:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "308:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "279:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:7"
																},
																"nativeSrc": "279:32:7",
																"nodeType": "YulFunctionCall",
																"src": "279:32:7"
															},
															"nativeSrc": "276:52:7",
															"nodeType": "YulIf",
															"src": "276:52:7"
														},
														{
															"nativeSrc": "337:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "337:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "350:1:7",
																"nodeType": "YulLiteral",
																"src": "350:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "341:5:7",
																	"nodeType": "YulTypedName",
																	"src": "341:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "360:32:7",
															"nodeType": "YulAssignment",
															"src": "360:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "382:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "382:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "369:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "369:12:7"
																},
																"nativeSrc": "369:23:7",
																"nodeType": "YulFunctionCall",
																"src": "369:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																}
															]
														},
														{
															"nativeSrc": "401:15:7",
															"nodeType": "YulAssignment",
															"src": "401:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "411:5:7",
																"nodeType": "YulIdentifier",
																"src": "411:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "401:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "401:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "196:226:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "232:9:7",
														"nodeType": "YulTypedName",
														"src": "232:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "243:7:7",
														"nodeType": "YulTypedName",
														"src": "243:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "255:6:7",
														"nodeType": "YulTypedName",
														"src": "255:6:7",
														"type": ""
													}
												],
												"src": "196:226:7"
											},
											{
												"body": {
													"nativeSrc": "676:336:7",
													"nodeType": "YulBlock",
													"src": "676:336:7",
													"statements": [
														{
															"nativeSrc": "686:27:7",
															"nodeType": "YulAssignment",
															"src": "686:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "698:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "698:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "709:3:7",
																		"nodeType": "YulLiteral",
																		"src": "709:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "694:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "694:3:7"
																},
																"nativeSrc": "694:19:7",
																"nodeType": "YulFunctionCall",
																"src": "694:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "686:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "686:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "729:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "729:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "744:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "760:3:7",
																								"nodeType": "YulLiteral",
																								"src": "760:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "765:1:7",
																								"nodeType": "YulLiteral",
																								"src": "765:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "756:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "756:3:7"
																						},
																						"nativeSrc": "756:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "756:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "769:1:7",
																						"nodeType": "YulLiteral",
																						"src": "769:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "752:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "752:3:7"
																				},
																				"nativeSrc": "752:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "752:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "740:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:3:7"
																		},
																		"nativeSrc": "740:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "722:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "722:6:7"
																},
																"nativeSrc": "722:51:7",
																"nodeType": "YulFunctionCall",
																"src": "722:51:7"
															},
															"nativeSrc": "722:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "722:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "793:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "793:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "804:2:7",
																				"nodeType": "YulLiteral",
																				"src": "804:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "789:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:7"
																		},
																		"nativeSrc": "789:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "789:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "809:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "809:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "782:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:7"
																},
																"nativeSrc": "782:34:7",
																"nodeType": "YulFunctionCall",
																"src": "782:34:7"
															},
															"nativeSrc": "782:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "782:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "836:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "836:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "847:2:7",
																				"nodeType": "YulLiteral",
																				"src": "847:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "832:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "832:3:7"
																		},
																		"nativeSrc": "832:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "832:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "852:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "852:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "825:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:7"
																},
																"nativeSrc": "825:34:7",
																"nodeType": "YulFunctionCall",
																"src": "825:34:7"
															},
															"nativeSrc": "825:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "825:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "879:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "879:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "890:2:7",
																				"nodeType": "YulLiteral",
																				"src": "890:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "875:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "875:3:7"
																		},
																		"nativeSrc": "875:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "875:18:7"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "895:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "895:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "868:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:7"
																},
																"nativeSrc": "868:34:7",
																"nodeType": "YulFunctionCall",
																"src": "868:34:7"
															},
															"nativeSrc": "868:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "868:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "922:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "922:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "933:3:7",
																				"nodeType": "YulLiteral",
																				"src": "933:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "918:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "918:3:7"
																		},
																		"nativeSrc": "918:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "918:19:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "953:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "953:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "946:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "946:6:7"
																				},
																				"nativeSrc": "946:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "946:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "939:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:7"
																		},
																		"nativeSrc": "939:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "939:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "911:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "911:6:7"
																},
																"nativeSrc": "911:51:7",
																"nodeType": "YulFunctionCall",
																"src": "911:51:7"
															},
															"nativeSrc": "911:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "911:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "982:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "982:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "993:3:7",
																				"nodeType": "YulLiteral",
																				"src": "993:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "978:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:7"
																		},
																		"nativeSrc": "978:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "978:19:7"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "999:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "999:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "971:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "971:6:7"
																},
																"nativeSrc": "971:35:7",
																"nodeType": "YulFunctionCall",
																"src": "971:35:7"
															},
															"nativeSrc": "971:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "971:35:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "427:585:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "605:9:7",
														"nodeType": "YulTypedName",
														"src": "605:9:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "616:6:7",
														"nodeType": "YulTypedName",
														"src": "616:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "624:6:7",
														"nodeType": "YulTypedName",
														"src": "624:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "632:6:7",
														"nodeType": "YulTypedName",
														"src": "632:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "640:6:7",
														"nodeType": "YulTypedName",
														"src": "640:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "648:6:7",
														"nodeType": "YulTypedName",
														"src": "648:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "656:6:7",
														"nodeType": "YulTypedName",
														"src": "656:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "667:4:7",
														"nodeType": "YulTypedName",
														"src": "667:4:7",
														"type": ""
													}
												],
												"src": "427:585:7"
											},
											{
												"body": {
													"nativeSrc": "1104:259:7",
													"nodeType": "YulBlock",
													"src": "1104:259:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1150:16:7",
																"nodeType": "YulBlock",
																"src": "1150:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1159:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1159:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1162:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1162:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1152:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1152:6:7"
																			},
																			"nativeSrc": "1152:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1152:12:7"
																		},
																		"nativeSrc": "1152:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1152:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1125:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1125:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1134:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1134:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1121:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1121:3:7"
																		},
																		"nativeSrc": "1121:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1121:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1146:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1146:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1117:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:7"
																},
																"nativeSrc": "1117:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1117:32:7"
															},
															"nativeSrc": "1114:52:7",
															"nodeType": "YulIf",
															"src": "1114:52:7"
														},
														{
															"nativeSrc": "1175:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1175:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1188:1:7",
																"nodeType": "YulLiteral",
																"src": "1188:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1179:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1179:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1198:32:7",
															"nodeType": "YulAssignment",
															"src": "1198:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1220:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1220:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1207:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1207:12:7"
																},
																"nativeSrc": "1207:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1207:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1198:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:7"
																}
															]
														},
														{
															"nativeSrc": "1239:15:7",
															"nodeType": "YulAssignment",
															"src": "1239:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1249:5:7",
																"nodeType": "YulIdentifier",
																"src": "1249:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1239:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:7"
																}
															]
														},
														{
															"nativeSrc": "1263:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1263:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1278:1:7",
																"nodeType": "YulLiteral",
																"src": "1278:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1267:7:7",
																	"nodeType": "YulTypedName",
																	"src": "1267:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1288:43:7",
															"nodeType": "YulAssignment",
															"src": "1288:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1316:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1316:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1327:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1327:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1312:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1312:3:7"
																		},
																		"nativeSrc": "1312:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1312:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1299:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1299:12:7"
																},
																"nativeSrc": "1299:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1299:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1288:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1288:7:7"
																}
															]
														},
														{
															"nativeSrc": "1340:17:7",
															"nodeType": "YulAssignment",
															"src": "1340:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "1350:7:7",
																"nodeType": "YulIdentifier",
																"src": "1350:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1340:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1340:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1017:346:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1062:9:7",
														"nodeType": "YulTypedName",
														"src": "1062:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1073:7:7",
														"nodeType": "YulTypedName",
														"src": "1073:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1085:6:7",
														"nodeType": "YulTypedName",
														"src": "1085:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1093:6:7",
														"nodeType": "YulTypedName",
														"src": "1093:6:7",
														"type": ""
													}
												],
												"src": "1017:346:7"
											},
											{
												"body": {
													"nativeSrc": "1421:86:7",
													"nodeType": "YulBlock",
													"src": "1421:86:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1485:16:7",
																"nodeType": "YulBlock",
																"src": "1485:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1494:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1494:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1497:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1497:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1487:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1487:6:7"
																			},
																			"nativeSrc": "1487:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1487:12:7"
																		},
																		"nativeSrc": "1487:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1487:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1444:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1455:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1455:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1470:3:7",
																										"nodeType": "YulLiteral",
																										"src": "1470:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1475:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1475:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1466:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1466:3:7"
																								},
																								"nativeSrc": "1466:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1466:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1479:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1479:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1462:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1462:3:7"
																						},
																						"nativeSrc": "1462:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1462:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1451:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1451:3:7"
																				},
																				"nativeSrc": "1451:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1451:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1441:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1441:2:7"
																		},
																		"nativeSrc": "1441:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1441:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1434:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1434:6:7"
																},
																"nativeSrc": "1434:50:7",
																"nodeType": "YulFunctionCall",
																"src": "1434:50:7"
															},
															"nativeSrc": "1431:70:7",
															"nodeType": "YulIf",
															"src": "1431:70:7"
														}
													]
												},
												"name": "validator_revert_contract_IERC20",
												"nativeSrc": "1368:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1410:5:7",
														"nodeType": "YulTypedName",
														"src": "1410:5:7",
														"type": ""
													}
												],
												"src": "1368:139:7"
											},
											{
												"body": {
													"nativeSrc": "1630:420:7",
													"nodeType": "YulBlock",
													"src": "1630:420:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1676:16:7",
																"nodeType": "YulBlock",
																"src": "1676:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1685:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1685:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1688:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1688:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1678:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1678:6:7"
																			},
																			"nativeSrc": "1678:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1678:12:7"
																		},
																		"nativeSrc": "1678:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1678:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1651:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1651:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1660:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1660:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1647:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1647:3:7"
																		},
																		"nativeSrc": "1647:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1647:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1672:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1672:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1643:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1643:3:7"
																},
																"nativeSrc": "1643:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1643:32:7"
															},
															"nativeSrc": "1640:52:7",
															"nodeType": "YulIf",
															"src": "1640:52:7"
														},
														{
															"nativeSrc": "1701:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1701:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1727:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1727:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1714:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1714:12:7"
																},
																"nativeSrc": "1714:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1714:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1705:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1705:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1779:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1779:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "1746:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "1746:32:7"
																},
																"nativeSrc": "1746:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1746:39:7"
															},
															"nativeSrc": "1746:39:7",
															"nodeType": "YulExpressionStatement",
															"src": "1746:39:7"
														},
														{
															"nativeSrc": "1794:15:7",
															"nodeType": "YulAssignment",
															"src": "1794:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1804:5:7",
																"nodeType": "YulIdentifier",
																"src": "1804:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1794:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:7"
																}
															]
														},
														{
															"nativeSrc": "1818:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1818:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1833:1:7",
																"nodeType": "YulLiteral",
																"src": "1833:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1822:7:7",
																	"nodeType": "YulTypedName",
																	"src": "1822:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1843:43:7",
															"nodeType": "YulAssignment",
															"src": "1843:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1871:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1871:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1882:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1882:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1867:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1867:3:7"
																		},
																		"nativeSrc": "1867:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1867:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1854:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1854:12:7"
																},
																"nativeSrc": "1854:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1854:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1843:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1843:7:7"
																}
															]
														},
														{
															"nativeSrc": "1895:17:7",
															"nodeType": "YulAssignment",
															"src": "1895:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "1905:7:7",
																"nodeType": "YulIdentifier",
																"src": "1905:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1895:6:7"
																}
															]
														},
														{
															"nativeSrc": "1921:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1921:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1953:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1953:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1964:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1964:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1949:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:7"
																		},
																		"nativeSrc": "1949:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1936:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1936:12:7"
																},
																"nativeSrc": "1936:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1936:32:7"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "1925:7:7",
																	"nodeType": "YulTypedName",
																	"src": "1925:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "2010:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2010:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "1977:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "1977:32:7"
																},
																"nativeSrc": "1977:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1977:41:7"
															},
															"nativeSrc": "1977:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1977:41:7"
														},
														{
															"nativeSrc": "2027:17:7",
															"nodeType": "YulAssignment",
															"src": "2027:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "2037:7:7",
																"nodeType": "YulIdentifier",
																"src": "2037:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2027:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2027:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$729t_uint256t_address",
												"nativeSrc": "1512:538:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1580:9:7",
														"nodeType": "YulTypedName",
														"src": "1580:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1591:7:7",
														"nodeType": "YulTypedName",
														"src": "1591:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1603:6:7",
														"nodeType": "YulTypedName",
														"src": "1603:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1611:6:7",
														"nodeType": "YulTypedName",
														"src": "1611:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1619:6:7",
														"nodeType": "YulTypedName",
														"src": "1619:6:7",
														"type": ""
													}
												],
												"src": "1512:538:7"
											},
											{
												"body": {
													"nativeSrc": "2156:102:7",
													"nodeType": "YulBlock",
													"src": "2156:102:7",
													"statements": [
														{
															"nativeSrc": "2166:26:7",
															"nodeType": "YulAssignment",
															"src": "2166:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2178:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2178:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2189:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2189:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2174:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2174:3:7"
																},
																"nativeSrc": "2174:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2174:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2166:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2166:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2208:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2208:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2223:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2223:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2239:3:7",
																								"nodeType": "YulLiteral",
																								"src": "2239:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2244:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2244:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2235:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2235:3:7"
																						},
																						"nativeSrc": "2235:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2235:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2248:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2248:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2231:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2231:3:7"
																				},
																				"nativeSrc": "2231:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2231:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2219:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2219:3:7"
																		},
																		"nativeSrc": "2219:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2219:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2201:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2201:6:7"
																},
																"nativeSrc": "2201:51:7",
																"nodeType": "YulFunctionCall",
																"src": "2201:51:7"
															},
															"nativeSrc": "2201:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "2201:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2055:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2125:9:7",
														"nodeType": "YulTypedName",
														"src": "2125:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2136:6:7",
														"nodeType": "YulTypedName",
														"src": "2136:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2147:4:7",
														"nodeType": "YulTypedName",
														"src": "2147:4:7",
														"type": ""
													}
												],
												"src": "2055:203:7"
											},
											{
												"body": {
													"nativeSrc": "2305:76:7",
													"nodeType": "YulBlock",
													"src": "2305:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2359:16:7",
																"nodeType": "YulBlock",
																"src": "2359:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2368:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2368:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2371:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2371:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2361:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2361:6:7"
																			},
																			"nativeSrc": "2361:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2361:12:7"
																		},
																		"nativeSrc": "2361:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2361:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2328:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2328:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2349:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2349:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2342:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2342:6:7"
																						},
																						"nativeSrc": "2342:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2342:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2335:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2335:6:7"
																				},
																				"nativeSrc": "2335:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2335:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2325:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2325:2:7"
																		},
																		"nativeSrc": "2325:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2325:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2318:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:7"
																},
																"nativeSrc": "2318:40:7",
																"nodeType": "YulFunctionCall",
																"src": "2318:40:7"
															},
															"nativeSrc": "2315:60:7",
															"nodeType": "YulIf",
															"src": "2315:60:7"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "2263:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2294:5:7",
														"nodeType": "YulTypedName",
														"src": "2294:5:7",
														"type": ""
													}
												],
												"src": "2263:118:7"
											},
											{
												"body": {
													"nativeSrc": "2535:617:7",
													"nodeType": "YulBlock",
													"src": "2535:617:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2582:16:7",
																"nodeType": "YulBlock",
																"src": "2582:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2591:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2591:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2594:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2594:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2584:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2584:6:7"
																			},
																			"nativeSrc": "2584:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2584:12:7"
																		},
																		"nativeSrc": "2584:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2584:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2556:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2556:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2565:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2565:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2552:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2552:3:7"
																		},
																		"nativeSrc": "2552:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2552:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2577:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2577:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2548:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2548:3:7"
																},
																"nativeSrc": "2548:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2548:33:7"
															},
															"nativeSrc": "2545:53:7",
															"nodeType": "YulIf",
															"src": "2545:53:7"
														},
														{
															"nativeSrc": "2607:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2607:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2620:1:7",
																"nodeType": "YulLiteral",
																"src": "2620:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2611:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2611:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2630:32:7",
															"nodeType": "YulAssignment",
															"src": "2630:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2652:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2652:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2639:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2639:12:7"
																},
																"nativeSrc": "2639:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2639:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2630:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2630:5:7"
																}
															]
														},
														{
															"nativeSrc": "2671:15:7",
															"nodeType": "YulAssignment",
															"src": "2671:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2681:5:7",
																"nodeType": "YulIdentifier",
																"src": "2681:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2671:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2671:6:7"
																}
															]
														},
														{
															"nativeSrc": "2695:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2695:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2727:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2727:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2738:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2738:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2723:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2723:3:7"
																		},
																		"nativeSrc": "2723:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:7"
																},
																"nativeSrc": "2710:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2710:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2699:7:7",
																	"nodeType": "YulTypedName",
																	"src": "2699:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2784:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2784:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "2751:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "2751:32:7"
																},
																"nativeSrc": "2751:41:7",
																"nodeType": "YulFunctionCall",
																"src": "2751:41:7"
															},
															"nativeSrc": "2751:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "2751:41:7"
														},
														{
															"nativeSrc": "2801:17:7",
															"nodeType": "YulAssignment",
															"src": "2801:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "2811:7:7",
																"nodeType": "YulIdentifier",
																"src": "2811:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2801:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:7"
																}
															]
														},
														{
															"nativeSrc": "2827:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2827:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2859:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2859:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2870:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2870:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2855:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:7"
																		},
																		"nativeSrc": "2855:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2855:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2842:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2842:12:7"
																},
																"nativeSrc": "2842:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2842:32:7"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2831:7:7",
																	"nodeType": "YulTypedName",
																	"src": "2831:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "2905:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2905:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "2883:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "2883:21:7"
																},
																"nativeSrc": "2883:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2883:30:7"
															},
															"nativeSrc": "2883:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "2883:30:7"
														},
														{
															"nativeSrc": "2922:17:7",
															"nodeType": "YulAssignment",
															"src": "2922:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "2932:7:7",
																"nodeType": "YulIdentifier",
																"src": "2932:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2922:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2922:6:7"
																}
															]
														},
														{
															"nativeSrc": "2948:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2948:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2963:1:7",
																"nodeType": "YulLiteral",
																"src": "2963:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "2952:7:7",
																	"nodeType": "YulTypedName",
																	"src": "2952:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2973:43:7",
															"nodeType": "YulAssignment",
															"src": "2973:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3001:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3001:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3012:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3012:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2997:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2997:3:7"
																		},
																		"nativeSrc": "2997:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2997:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2984:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2984:12:7"
																},
																"nativeSrc": "2984:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2984:32:7"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "2973:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2973:7:7"
																}
															]
														},
														{
															"nativeSrc": "3025:17:7",
															"nodeType": "YulAssignment",
															"src": "3025:17:7",
															"value": {
																"name": "value_3",
																"nativeSrc": "3035:7:7",
																"nodeType": "YulIdentifier",
																"src": "3035:7:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3025:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:7"
																}
															]
														},
														{
															"nativeSrc": "3051:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3051:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3066:1:7",
																"nodeType": "YulLiteral",
																"src": "3066:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "3055:7:7",
																	"nodeType": "YulTypedName",
																	"src": "3055:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3076:44:7",
															"nodeType": "YulAssignment",
															"src": "3076:44:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3104:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3115:3:7",
																				"nodeType": "YulLiteral",
																				"src": "3115:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3100:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3100:3:7"
																		},
																		"nativeSrc": "3100:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3100:19:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3087:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3087:12:7"
																},
																"nativeSrc": "3087:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3087:33:7"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "3076:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3076:7:7"
																}
															]
														},
														{
															"nativeSrc": "3129:17:7",
															"nodeType": "YulAssignment",
															"src": "3129:17:7",
															"value": {
																"name": "value_4",
																"nativeSrc": "3139:7:7",
																"nodeType": "YulIdentifier",
																"src": "3139:7:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "3129:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3129:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$729t_boolt_uint256t_uint256",
												"nativeSrc": "2386:766:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2469:9:7",
														"nodeType": "YulTypedName",
														"src": "2469:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2480:7:7",
														"nodeType": "YulTypedName",
														"src": "2480:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2492:6:7",
														"nodeType": "YulTypedName",
														"src": "2492:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2516:6:7",
														"nodeType": "YulTypedName",
														"src": "2516:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2524:6:7",
														"nodeType": "YulTypedName",
														"src": "2524:6:7",
														"type": ""
													}
												],
												"src": "2386:766:7"
											},
											{
												"body": {
													"nativeSrc": "3244:288:7",
													"nodeType": "YulBlock",
													"src": "3244:288:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3290:16:7",
																"nodeType": "YulBlock",
																"src": "3290:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3299:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3299:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3302:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3302:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3292:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3292:6:7"
																			},
																			"nativeSrc": "3292:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3292:12:7"
																		},
																		"nativeSrc": "3292:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3292:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3265:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3265:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3274:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3274:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3261:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:7"
																		},
																		"nativeSrc": "3261:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3261:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3286:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3286:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3257:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3257:3:7"
																},
																"nativeSrc": "3257:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3257:32:7"
															},
															"nativeSrc": "3254:52:7",
															"nodeType": "YulIf",
															"src": "3254:52:7"
														},
														{
															"nativeSrc": "3315:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3315:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3328:1:7",
																"nodeType": "YulLiteral",
																"src": "3328:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3319:5:7",
																	"nodeType": "YulTypedName",
																	"src": "3319:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3338:32:7",
															"nodeType": "YulAssignment",
															"src": "3338:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3360:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3360:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3347:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3347:12:7"
																},
																"nativeSrc": "3347:23:7",
																"nodeType": "YulFunctionCall",
																"src": "3347:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3338:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3338:5:7"
																}
															]
														},
														{
															"nativeSrc": "3379:15:7",
															"nodeType": "YulAssignment",
															"src": "3379:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "3389:5:7",
																"nodeType": "YulIdentifier",
																"src": "3389:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3379:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3379:6:7"
																}
															]
														},
														{
															"nativeSrc": "3403:47:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3403:47:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3435:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3446:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3446:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3431:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3431:3:7"
																		},
																		"nativeSrc": "3431:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3431:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3418:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3418:12:7"
																},
																"nativeSrc": "3418:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3418:32:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3407:7:7",
																	"nodeType": "YulTypedName",
																	"src": "3407:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3492:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3492:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "3459:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3459:32:7"
																},
																"nativeSrc": "3459:41:7",
																"nodeType": "YulFunctionCall",
																"src": "3459:41:7"
															},
															"nativeSrc": "3459:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "3459:41:7"
														},
														{
															"nativeSrc": "3509:17:7",
															"nodeType": "YulAssignment",
															"src": "3509:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "3519:7:7",
																"nodeType": "YulIdentifier",
																"src": "3519:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3509:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3509:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "3157:375:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3202:9:7",
														"nodeType": "YulTypedName",
														"src": "3202:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3213:7:7",
														"nodeType": "YulTypedName",
														"src": "3213:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3225:6:7",
														"nodeType": "YulTypedName",
														"src": "3225:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3233:6:7",
														"nodeType": "YulTypedName",
														"src": "3233:6:7",
														"type": ""
													}
												],
												"src": "3157:375:7"
											},
											{
												"body": {
													"nativeSrc": "3666:119:7",
													"nodeType": "YulBlock",
													"src": "3666:119:7",
													"statements": [
														{
															"nativeSrc": "3676:26:7",
															"nodeType": "YulAssignment",
															"src": "3676:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3688:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3688:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3699:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3699:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3684:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3684:3:7"
																},
																"nativeSrc": "3684:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3684:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3676:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3676:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3718:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3718:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3729:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3729:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3711:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3711:6:7"
																},
																"nativeSrc": "3711:25:7",
																"nodeType": "YulFunctionCall",
																"src": "3711:25:7"
															},
															"nativeSrc": "3711:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "3711:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3756:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3756:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3767:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3767:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3752:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3752:3:7"
																		},
																		"nativeSrc": "3752:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3752:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3772:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3772:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3745:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3745:6:7"
																},
																"nativeSrc": "3745:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3745:34:7"
															},
															"nativeSrc": "3745:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3745:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3537:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3627:9:7",
														"nodeType": "YulTypedName",
														"src": "3627:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3638:6:7",
														"nodeType": "YulTypedName",
														"src": "3638:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3646:6:7",
														"nodeType": "YulTypedName",
														"src": "3646:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3657:4:7",
														"nodeType": "YulTypedName",
														"src": "3657:4:7",
														"type": ""
													}
												],
												"src": "3537:248:7"
											},
											{
												"body": {
													"nativeSrc": "3860:185:7",
													"nodeType": "YulBlock",
													"src": "3860:185:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3906:16:7",
																"nodeType": "YulBlock",
																"src": "3906:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3915:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3918:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3918:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3908:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3908:6:7"
																			},
																			"nativeSrc": "3908:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3908:12:7"
																		},
																		"nativeSrc": "3908:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3908:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3881:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3890:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3890:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3877:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3877:3:7"
																		},
																		"nativeSrc": "3877:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3877:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3902:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3902:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3873:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3873:3:7"
																},
																"nativeSrc": "3873:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3873:32:7"
															},
															"nativeSrc": "3870:52:7",
															"nodeType": "YulIf",
															"src": "3870:52:7"
														},
														{
															"nativeSrc": "3931:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3931:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3957:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3957:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3944:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3944:12:7"
																},
																"nativeSrc": "3944:23:7",
																"nodeType": "YulFunctionCall",
																"src": "3944:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3935:5:7",
																	"nodeType": "YulTypedName",
																	"src": "3935:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4009:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4009:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "3976:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3976:32:7"
																},
																"nativeSrc": "3976:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3976:39:7"
															},
															"nativeSrc": "3976:39:7",
															"nodeType": "YulExpressionStatement",
															"src": "3976:39:7"
														},
														{
															"nativeSrc": "4024:15:7",
															"nodeType": "YulAssignment",
															"src": "4024:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "4034:5:7",
																"nodeType": "YulIdentifier",
																"src": "4034:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4024:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4024:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3790:255:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3826:9:7",
														"nodeType": "YulTypedName",
														"src": "3826:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3837:7:7",
														"nodeType": "YulTypedName",
														"src": "3837:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3849:6:7",
														"nodeType": "YulTypedName",
														"src": "3849:6:7",
														"type": ""
													}
												],
												"src": "3790:255:7"
											},
											{
												"body": {
													"nativeSrc": "4165:102:7",
													"nodeType": "YulBlock",
													"src": "4165:102:7",
													"statements": [
														{
															"nativeSrc": "4175:26:7",
															"nodeType": "YulAssignment",
															"src": "4175:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4187:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4187:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4198:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4198:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4183:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4183:3:7"
																},
																"nativeSrc": "4183:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4183:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4175:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4175:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4217:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4217:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4232:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4232:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4248:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4248:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4253:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4253:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4244:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4244:3:7"
																						},
																						"nativeSrc": "4244:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4244:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4257:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4257:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4240:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:7"
																				},
																				"nativeSrc": "4240:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4228:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4228:3:7"
																		},
																		"nativeSrc": "4228:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4228:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4210:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4210:6:7"
																},
																"nativeSrc": "4210:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4210:51:7"
															},
															"nativeSrc": "4210:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4210:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "4050:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4134:9:7",
														"nodeType": "YulTypedName",
														"src": "4134:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4145:6:7",
														"nodeType": "YulTypedName",
														"src": "4145:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4156:4:7",
														"nodeType": "YulTypedName",
														"src": "4156:4:7",
														"type": ""
													}
												],
												"src": "4050:217:7"
											},
											{
												"body": {
													"nativeSrc": "4446:233:7",
													"nodeType": "YulBlock",
													"src": "4446:233:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4463:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4463:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4474:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4474:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4456:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4456:6:7"
																},
																"nativeSrc": "4456:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4456:21:7"
															},
															"nativeSrc": "4456:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4456:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4497:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4497:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4508:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4508:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4493:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4493:3:7"
																		},
																		"nativeSrc": "4493:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4493:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4513:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4513:2:7",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4486:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4486:6:7"
																},
																"nativeSrc": "4486:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4486:30:7"
															},
															"nativeSrc": "4486:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4486:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4536:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4536:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4547:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4547:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4532:3:7"
																		},
																		"nativeSrc": "4532:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4532:18:7"
																	},
																	{
																		"hexValue": "5875736447656e65736973506f6f6c3a2063616c6c6572206973206e6f742074",
																		"kind": "string",
																		"nativeSrc": "4552:34:7",
																		"nodeType": "YulLiteral",
																		"src": "4552:34:7",
																		"type": "",
																		"value": "XusdGenesisPool: caller is not t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4525:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4525:6:7"
																},
																"nativeSrc": "4525:62:7",
																"nodeType": "YulFunctionCall",
																"src": "4525:62:7"
															},
															"nativeSrc": "4525:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "4525:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4607:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4607:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4618:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4618:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4603:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4603:3:7"
																		},
																		"nativeSrc": "4603:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4603:18:7"
																	},
																	{
																		"hexValue": "6865206f70657261746f72",
																		"kind": "string",
																		"nativeSrc": "4623:13:7",
																		"nodeType": "YulLiteral",
																		"src": "4623:13:7",
																		"type": "",
																		"value": "he operator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4596:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4596:6:7"
																},
																"nativeSrc": "4596:41:7",
																"nodeType": "YulFunctionCall",
																"src": "4596:41:7"
															},
															"nativeSrc": "4596:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "4596:41:7"
														},
														{
															"nativeSrc": "4646:27:7",
															"nodeType": "YulAssignment",
															"src": "4646:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4658:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4658:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4669:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4669:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4654:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4654:3:7"
																},
																"nativeSrc": "4654:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4654:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4646:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4646:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94801dfd38f295ab953066afbb6df9200e899d0f59adca75e6b3a000501ad8e8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4272:407:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4423:9:7",
														"nodeType": "YulTypedName",
														"src": "4423:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4437:4:7",
														"nodeType": "YulTypedName",
														"src": "4437:4:7",
														"type": ""
													}
												],
												"src": "4272:407:7"
											},
											{
												"body": {
													"nativeSrc": "4716:95:7",
													"nodeType": "YulBlock",
													"src": "4716:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4733:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4733:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4740:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4740:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4745:10:7",
																				"nodeType": "YulLiteral",
																				"src": "4745:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4736:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4736:3:7"
																		},
																		"nativeSrc": "4736:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4736:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4726:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4726:6:7"
																},
																"nativeSrc": "4726:31:7",
																"nodeType": "YulFunctionCall",
																"src": "4726:31:7"
															},
															"nativeSrc": "4726:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "4726:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4773:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4773:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4776:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4776:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4766:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4766:6:7"
																},
																"nativeSrc": "4766:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4766:15:7"
															},
															"nativeSrc": "4766:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4766:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4797:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4797:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4800:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4800:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4790:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4790:6:7"
																},
																"nativeSrc": "4790:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4790:15:7"
															},
															"nativeSrc": "4790:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4790:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "4684:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4684:127:7"
											},
											{
												"body": {
													"nativeSrc": "4848:95:7",
													"nodeType": "YulBlock",
													"src": "4848:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4865:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4865:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4872:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4872:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4877:10:7",
																				"nodeType": "YulLiteral",
																				"src": "4877:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4868:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4868:3:7"
																		},
																		"nativeSrc": "4868:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4868:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4858:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4858:6:7"
																},
																"nativeSrc": "4858:31:7",
																"nodeType": "YulFunctionCall",
																"src": "4858:31:7"
															},
															"nativeSrc": "4858:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "4858:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4905:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4905:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4908:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4908:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4898:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4898:6:7"
																},
																"nativeSrc": "4898:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4898:15:7"
															},
															"nativeSrc": "4898:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4898:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4929:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4929:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4932:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4932:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4922:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:7"
																},
																"nativeSrc": "4922:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4922:15:7"
															},
															"nativeSrc": "4922:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4922:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4816:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4816:127:7"
											},
											{
												"body": {
													"nativeSrc": "4997:79:7",
													"nodeType": "YulBlock",
													"src": "4997:79:7",
													"statements": [
														{
															"nativeSrc": "5007:17:7",
															"nodeType": "YulAssignment",
															"src": "5007:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5019:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5019:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5022:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5022:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5015:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5015:3:7"
																},
																"nativeSrc": "5015:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5015:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5007:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5007:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5048:22:7",
																"nodeType": "YulBlock",
																"src": "5048:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5050:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:16:7"
																			},
																			"nativeSrc": "5050:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5050:18:7"
																		},
																		"nativeSrc": "5050:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5050:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5039:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5039:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5045:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5045:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5036:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5036:2:7"
																},
																"nativeSrc": "5036:11:7",
																"nodeType": "YulFunctionCall",
																"src": "5036:11:7"
															},
															"nativeSrc": "5033:37:7",
															"nodeType": "YulIf",
															"src": "5033:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4948:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4979:1:7",
														"nodeType": "YulTypedName",
														"src": "4979:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4982:1:7",
														"nodeType": "YulTypedName",
														"src": "4982:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4988:4:7",
														"nodeType": "YulTypedName",
														"src": "4988:4:7",
														"type": ""
													}
												],
												"src": "4948:128:7"
											},
											{
												"body": {
													"nativeSrc": "5129:77:7",
													"nodeType": "YulBlock",
													"src": "5129:77:7",
													"statements": [
														{
															"nativeSrc": "5139:16:7",
															"nodeType": "YulAssignment",
															"src": "5139:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5150:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5150:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5153:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5153:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5146:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5146:3:7"
																},
																"nativeSrc": "5146:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5146:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5139:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5178:22:7",
																"nodeType": "YulBlock",
																"src": "5178:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5180:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5180:16:7"
																			},
																			"nativeSrc": "5180:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5180:18:7"
																		},
																		"nativeSrc": "5180:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5180:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5170:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5170:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5173:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5173:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5167:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5167:2:7"
																},
																"nativeSrc": "5167:10:7",
																"nodeType": "YulFunctionCall",
																"src": "5167:10:7"
															},
															"nativeSrc": "5164:36:7",
															"nodeType": "YulIf",
															"src": "5164:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5081:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5112:1:7",
														"nodeType": "YulTypedName",
														"src": "5112:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5115:1:7",
														"nodeType": "YulTypedName",
														"src": "5115:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5121:3:7",
														"nodeType": "YulTypedName",
														"src": "5121:3:7",
														"type": ""
													}
												],
												"src": "5081:125:7"
											},
											{
												"body": {
													"nativeSrc": "5263:116:7",
													"nodeType": "YulBlock",
													"src": "5263:116:7",
													"statements": [
														{
															"nativeSrc": "5273:20:7",
															"nodeType": "YulAssignment",
															"src": "5273:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5288:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5288:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5291:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5291:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5284:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:7"
																},
																"nativeSrc": "5284:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5284:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5273:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5273:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5351:22:7",
																"nodeType": "YulBlock",
																"src": "5351:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5353:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5353:16:7"
																			},
																			"nativeSrc": "5353:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5353:18:7"
																		},
																		"nativeSrc": "5353:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5353:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5322:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "5322:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5315:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5315:6:7"
																				},
																				"nativeSrc": "5315:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5315:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5329:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "5329:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5336:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "5336:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5345:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "5345:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5332:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "5332:3:7"
																						},
																						"nativeSrc": "5332:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "5332:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5326:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "5326:2:7"
																				},
																				"nativeSrc": "5326:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5326:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5312:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5312:2:7"
																		},
																		"nativeSrc": "5312:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5312:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5305:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5305:6:7"
																},
																"nativeSrc": "5305:45:7",
																"nodeType": "YulFunctionCall",
																"src": "5305:45:7"
															},
															"nativeSrc": "5302:71:7",
															"nodeType": "YulIf",
															"src": "5302:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5211:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5242:1:7",
														"nodeType": "YulTypedName",
														"src": "5242:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5245:1:7",
														"nodeType": "YulTypedName",
														"src": "5245:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5251:7:7",
														"nodeType": "YulTypedName",
														"src": "5251:7:7",
														"type": ""
													}
												],
												"src": "5211:168:7"
											},
											{
												"body": {
													"nativeSrc": "5558:168:7",
													"nodeType": "YulBlock",
													"src": "5558:168:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5575:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5575:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5586:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5586:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5568:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5568:6:7"
																},
																"nativeSrc": "5568:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5568:21:7"
															},
															"nativeSrc": "5568:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5568:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5609:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5609:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5620:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5620:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5605:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5605:3:7"
																		},
																		"nativeSrc": "5605:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5605:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5625:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5625:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5598:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:7"
																},
																"nativeSrc": "5598:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5598:30:7"
															},
															"nativeSrc": "5598:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5598:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5648:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5648:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5659:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5659:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5644:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5644:3:7"
																		},
																		"nativeSrc": "5644:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5644:18:7"
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"kind": "string",
																		"nativeSrc": "5664:20:7",
																		"nodeType": "YulLiteral",
																		"src": "5664:20:7",
																		"type": "",
																		"value": "withdraw: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5637:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5637:6:7"
																},
																"nativeSrc": "5637:48:7",
																"nodeType": "YulFunctionCall",
																"src": "5637:48:7"
															},
															"nativeSrc": "5637:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "5637:48:7"
														},
														{
															"nativeSrc": "5694:26:7",
															"nodeType": "YulAssignment",
															"src": "5694:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5706:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5706:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5717:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5717:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5702:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5702:3:7"
																},
																"nativeSrc": "5702:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5702:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5694:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5694:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5384:342:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5535:9:7",
														"nodeType": "YulTypedName",
														"src": "5535:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5549:4:7",
														"nodeType": "YulTypedName",
														"src": "5549:4:7",
														"type": ""
													}
												],
												"src": "5384:342:7"
											},
											{
												"body": {
													"nativeSrc": "5777:171:7",
													"nodeType": "YulBlock",
													"src": "5777:171:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5808:111:7",
																"nodeType": "YulBlock",
																"src": "5808:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5829:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5829:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5836:3:7",
																							"nodeType": "YulLiteral",
																							"src": "5836:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5841:10:7",
																							"nodeType": "YulLiteral",
																							"src": "5841:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5832:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5832:3:7"
																					},
																					"nativeSrc": "5832:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5832:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5822:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5822:6:7"
																			},
																			"nativeSrc": "5822:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5822:31:7"
																		},
																		"nativeSrc": "5822:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5822:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5873:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5873:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5876:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5876:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5866:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5866:6:7"
																			},
																			"nativeSrc": "5866:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5866:15:7"
																		},
																		"nativeSrc": "5866:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5866:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5901:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5901:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5904:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5904:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5894:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5894:6:7"
																			},
																			"nativeSrc": "5894:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5894:15:7"
																		},
																		"nativeSrc": "5894:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5894:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5797:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5797:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5790:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5790:6:7"
																},
																"nativeSrc": "5790:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5790:9:7"
															},
															"nativeSrc": "5787:132:7",
															"nodeType": "YulIf",
															"src": "5787:132:7"
														},
														{
															"nativeSrc": "5928:14:7",
															"nodeType": "YulAssignment",
															"src": "5928:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5937:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5937:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5940:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5940:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5933:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5933:3:7"
																},
																"nativeSrc": "5933:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5933:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5928:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "5928:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5731:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5762:1:7",
														"nodeType": "YulTypedName",
														"src": "5762:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5765:1:7",
														"nodeType": "YulTypedName",
														"src": "5765:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5771:1:7",
														"nodeType": "YulTypedName",
														"src": "5771:1:7",
														"type": ""
													}
												],
												"src": "5731:217:7"
											},
											{
												"body": {
													"nativeSrc": "6082:145:7",
													"nodeType": "YulBlock",
													"src": "6082:145:7",
													"statements": [
														{
															"nativeSrc": "6092:26:7",
															"nodeType": "YulAssignment",
															"src": "6092:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6104:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6104:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6115:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6115:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6100:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6100:3:7"
																},
																"nativeSrc": "6100:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6100:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6092:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6092:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6134:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6134:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6149:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6149:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6165:3:7",
																								"nodeType": "YulLiteral",
																								"src": "6165:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6170:1:7",
																								"nodeType": "YulLiteral",
																								"src": "6170:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6161:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6161:3:7"
																						},
																						"nativeSrc": "6161:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6161:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6174:1:7",
																						"nodeType": "YulLiteral",
																						"src": "6174:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6157:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6157:3:7"
																				},
																				"nativeSrc": "6157:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6157:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6145:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6145:3:7"
																		},
																		"nativeSrc": "6145:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6145:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6127:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6127:6:7"
																},
																"nativeSrc": "6127:51:7",
																"nodeType": "YulFunctionCall",
																"src": "6127:51:7"
															},
															"nativeSrc": "6127:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "6127:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6198:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6198:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6209:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6209:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6194:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6194:3:7"
																		},
																		"nativeSrc": "6194:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6194:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6214:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6214:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6187:6:7"
																},
																"nativeSrc": "6187:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6187:34:7"
															},
															"nativeSrc": "6187:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6187:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5953:274:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6043:9:7",
														"nodeType": "YulTypedName",
														"src": "6043:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6054:6:7",
														"nodeType": "YulTypedName",
														"src": "6054:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6062:6:7",
														"nodeType": "YulTypedName",
														"src": "6062:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6073:4:7",
														"nodeType": "YulTypedName",
														"src": "6073:4:7",
														"type": ""
													}
												],
												"src": "5953:274:7"
											},
											{
												"body": {
													"nativeSrc": "6310:167:7",
													"nodeType": "YulBlock",
													"src": "6310:167:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6356:16:7",
																"nodeType": "YulBlock",
																"src": "6356:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6365:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6365:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6368:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6368:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6358:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:7"
																			},
																			"nativeSrc": "6358:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6358:12:7"
																		},
																		"nativeSrc": "6358:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6358:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6331:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6331:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6340:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6340:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6327:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6327:3:7"
																		},
																		"nativeSrc": "6327:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6327:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6352:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6352:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6323:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6323:3:7"
																},
																"nativeSrc": "6323:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6323:32:7"
															},
															"nativeSrc": "6320:52:7",
															"nodeType": "YulIf",
															"src": "6320:52:7"
														},
														{
															"nativeSrc": "6381:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6381:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6400:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6400:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6394:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6394:5:7"
																},
																"nativeSrc": "6394:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6394:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6385:5:7",
																	"nodeType": "YulTypedName",
																	"src": "6385:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6441:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6441:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "6419:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "6419:21:7"
																},
																"nativeSrc": "6419:28:7",
																"nodeType": "YulFunctionCall",
																"src": "6419:28:7"
															},
															"nativeSrc": "6419:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "6419:28:7"
														},
														{
															"nativeSrc": "6456:15:7",
															"nodeType": "YulAssignment",
															"src": "6456:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "6466:5:7",
																"nodeType": "YulIdentifier",
																"src": "6466:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6456:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6456:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6232:245:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6276:9:7",
														"nodeType": "YulTypedName",
														"src": "6276:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6287:7:7",
														"nodeType": "YulTypedName",
														"src": "6287:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6299:6:7",
														"nodeType": "YulTypedName",
														"src": "6299:6:7",
														"type": ""
													}
												],
												"src": "6232:245:7"
											},
											{
												"body": {
													"nativeSrc": "6563:103:7",
													"nodeType": "YulBlock",
													"src": "6563:103:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6609:16:7",
																"nodeType": "YulBlock",
																"src": "6609:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6618:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6618:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6621:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6621:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6611:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6611:6:7"
																			},
																			"nativeSrc": "6611:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6611:12:7"
																		},
																		"nativeSrc": "6611:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6611:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6584:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6584:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6593:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6593:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6580:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:7"
																		},
																		"nativeSrc": "6580:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6605:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6605:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6576:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6576:3:7"
																},
																"nativeSrc": "6576:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6576:32:7"
															},
															"nativeSrc": "6573:52:7",
															"nodeType": "YulIf",
															"src": "6573:52:7"
														},
														{
															"nativeSrc": "6634:26:7",
															"nodeType": "YulAssignment",
															"src": "6634:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6650:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6650:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6644:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6644:5:7"
																},
																"nativeSrc": "6644:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6644:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6634:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6634:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6482:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6529:9:7",
														"nodeType": "YulTypedName",
														"src": "6529:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6540:7:7",
														"nodeType": "YulTypedName",
														"src": "6540:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6552:6:7",
														"nodeType": "YulTypedName",
														"src": "6552:6:7",
														"type": ""
													}
												],
												"src": "6482:184:7"
											},
											{
												"body": {
													"nativeSrc": "6845:153:7",
													"nodeType": "YulBlock",
													"src": "6845:153:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6862:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6862:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6873:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6873:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6855:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6855:6:7"
																},
																"nativeSrc": "6855:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6855:21:7"
															},
															"nativeSrc": "6855:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6855:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6896:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6896:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6907:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6907:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6892:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6892:3:7"
																		},
																		"nativeSrc": "6892:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6892:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6912:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6912:1:7",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6885:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6885:6:7"
																},
																"nativeSrc": "6885:29:7",
																"nodeType": "YulFunctionCall",
																"src": "6885:29:7"
															},
															"nativeSrc": "6885:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "6885:29:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6934:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6934:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6945:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6945:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6930:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6930:3:7"
																		},
																		"nativeSrc": "6930:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6930:18:7"
																	},
																	{
																		"hexValue": "58757364",
																		"kind": "string",
																		"nativeSrc": "6950:6:7",
																		"nodeType": "YulLiteral",
																		"src": "6950:6:7",
																		"type": "",
																		"value": "Xusd"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6923:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6923:6:7"
																},
																"nativeSrc": "6923:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6923:34:7"
															},
															"nativeSrc": "6923:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6923:34:7"
														},
														{
															"nativeSrc": "6966:26:7",
															"nodeType": "YulAssignment",
															"src": "6966:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6978:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6978:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6989:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6989:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6974:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6974:3:7"
																},
																"nativeSrc": "6974:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6974:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6966:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6966:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a3ad23ca9ea6675f31c99a26a92dd1cd138946af4198749db7a4e3ff1ee8c462__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6671:327:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6822:9:7",
														"nodeType": "YulTypedName",
														"src": "6822:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6836:4:7",
														"nodeType": "YulTypedName",
														"src": "6836:4:7",
														"type": ""
													}
												],
												"src": "6671:327:7"
											},
											{
												"body": {
													"nativeSrc": "7177:160:7",
													"nodeType": "YulBlock",
													"src": "7177:160:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7194:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7194:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7205:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7205:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7187:6:7"
																},
																"nativeSrc": "7187:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7187:21:7"
															},
															"nativeSrc": "7187:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7187:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7228:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7228:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7239:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7239:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7224:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7224:3:7"
																		},
																		"nativeSrc": "7224:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7224:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7244:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7244:2:7",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7217:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7217:6:7"
																},
																"nativeSrc": "7217:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7217:30:7"
															},
															"nativeSrc": "7217:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7217:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7267:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7267:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7278:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7278:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7263:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7263:3:7"
																		},
																		"nativeSrc": "7263:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7263:18:7"
																	},
																	{
																		"hexValue": "706f6f6c2e746f6b656e",
																		"kind": "string",
																		"nativeSrc": "7283:12:7",
																		"nodeType": "YulLiteral",
																		"src": "7283:12:7",
																		"type": "",
																		"value": "pool.token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7256:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7256:6:7"
																},
																"nativeSrc": "7256:40:7",
																"nodeType": "YulFunctionCall",
																"src": "7256:40:7"
															},
															"nativeSrc": "7256:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "7256:40:7"
														},
														{
															"nativeSrc": "7305:26:7",
															"nodeType": "YulAssignment",
															"src": "7305:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7317:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7317:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7328:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7328:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7313:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7313:3:7"
																},
																"nativeSrc": "7313:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7313:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7305:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7305:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7003:334:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7154:9:7",
														"nodeType": "YulTypedName",
														"src": "7154:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7168:4:7",
														"nodeType": "YulTypedName",
														"src": "7168:4:7",
														"type": ""
													}
												],
												"src": "7003:334:7"
											},
											{
												"body": {
													"nativeSrc": "7499:214:7",
													"nodeType": "YulBlock",
													"src": "7499:214:7",
													"statements": [
														{
															"nativeSrc": "7509:26:7",
															"nodeType": "YulAssignment",
															"src": "7509:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7521:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7521:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7532:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7532:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7517:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7517:3:7"
																},
																"nativeSrc": "7517:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7517:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7509:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7509:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7551:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7551:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7566:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7566:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7582:3:7",
																								"nodeType": "YulLiteral",
																								"src": "7582:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7587:1:7",
																								"nodeType": "YulLiteral",
																								"src": "7587:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7578:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7578:3:7"
																						},
																						"nativeSrc": "7578:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7578:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7591:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7591:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7574:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7574:3:7"
																				},
																				"nativeSrc": "7574:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7574:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7562:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7562:3:7"
																		},
																		"nativeSrc": "7562:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7562:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7544:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7544:6:7"
																},
																"nativeSrc": "7544:51:7",
																"nodeType": "YulFunctionCall",
																"src": "7544:51:7"
															},
															"nativeSrc": "7544:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "7544:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7615:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7615:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7626:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7626:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7611:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7611:3:7"
																		},
																		"nativeSrc": "7611:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7611:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7635:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7635:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7651:3:7",
																								"nodeType": "YulLiteral",
																								"src": "7651:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7656:1:7",
																								"nodeType": "YulLiteral",
																								"src": "7656:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7647:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7647:3:7"
																						},
																						"nativeSrc": "7647:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7647:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7660:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7660:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7643:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7643:3:7"
																				},
																				"nativeSrc": "7643:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7643:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7631:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7631:3:7"
																		},
																		"nativeSrc": "7631:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7631:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7604:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7604:6:7"
																},
																"nativeSrc": "7604:60:7",
																"nodeType": "YulFunctionCall",
																"src": "7604:60:7"
															},
															"nativeSrc": "7604:60:7",
															"nodeType": "YulExpressionStatement",
															"src": "7604:60:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7684:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7684:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7695:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7695:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7680:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7680:3:7"
																		},
																		"nativeSrc": "7680:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7680:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7700:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7700:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7673:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7673:6:7"
																},
																"nativeSrc": "7673:34:7",
																"nodeType": "YulFunctionCall",
																"src": "7673:34:7"
															},
															"nativeSrc": "7673:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "7673:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7342:371:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7452:9:7",
														"nodeType": "YulTypedName",
														"src": "7452:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7463:6:7",
														"nodeType": "YulTypedName",
														"src": "7463:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7471:6:7",
														"nodeType": "YulTypedName",
														"src": "7471:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7479:6:7",
														"nodeType": "YulTypedName",
														"src": "7479:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7490:4:7",
														"nodeType": "YulTypedName",
														"src": "7490:4:7",
														"type": ""
													}
												],
												"src": "7342:371:7"
											},
											{
												"body": {
													"nativeSrc": "7892:181:7",
													"nodeType": "YulBlock",
													"src": "7892:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7909:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7909:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7920:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7920:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7902:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7902:6:7"
																},
																"nativeSrc": "7902:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7902:21:7"
															},
															"nativeSrc": "7902:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7902:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7943:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7943:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7954:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7954:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7939:3:7"
																		},
																		"nativeSrc": "7939:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7939:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7959:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7959:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7932:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7932:6:7"
																},
																"nativeSrc": "7932:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7932:30:7"
															},
															"nativeSrc": "7932:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7932:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7982:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7982:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7993:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7993:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7978:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7978:3:7"
																		},
																		"nativeSrc": "7978:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7978:18:7"
																	},
																	{
																		"hexValue": "5875736447656e65736973506f6f6c3a206578697374696e6720706f6f6c3f",
																		"kind": "string",
																		"nativeSrc": "7998:33:7",
																		"nodeType": "YulLiteral",
																		"src": "7998:33:7",
																		"type": "",
																		"value": "XusdGenesisPool: existing pool?"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7971:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7971:6:7"
																},
																"nativeSrc": "7971:61:7",
																"nodeType": "YulFunctionCall",
																"src": "7971:61:7"
															},
															"nativeSrc": "7971:61:7",
															"nodeType": "YulExpressionStatement",
															"src": "7971:61:7"
														},
														{
															"nativeSrc": "8041:26:7",
															"nodeType": "YulAssignment",
															"src": "8041:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8053:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8053:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8064:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8064:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8049:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8049:3:7"
																},
																"nativeSrc": "8049:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8049:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8041:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8041:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a9f72e63f751613ead647b479c0f98983ffcc3fa58c3c2b364cd8c5c4ac9b8d2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7718:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7869:9:7",
														"nodeType": "YulTypedName",
														"src": "7869:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7883:4:7",
														"nodeType": "YulTypedName",
														"src": "7883:4:7",
														"type": ""
													}
												],
												"src": "7718:355:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$729_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$729t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_contract_IERC20(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$729t_boolt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_2)\n        value2 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 96))\n        value3 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 128))\n        value4 := value_4\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_94801dfd38f295ab953066afbb6df9200e899d0f59adca75e6b3a000501ad8e8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"XusdGenesisPool: caller is not t\")\n        mstore(add(headStart, 96), \"he operator\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"withdraw: not good\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_a3ad23ca9ea6675f31c99a26a92dd1cd138946af4198749db7a4e3ff1ee8c462__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 4)\n        mstore(add(headStart, 64), \"Xusd\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"pool.token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_a9f72e63f751613ead647b479c0f98983ffcc3fa58c3c2b364cd8c5c4ac9b8d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"XusdGenesisPool: existing pool?\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610153575f3560e01c80635f96dc11116100bf57806392fae48d1161007957806392fae48d146102c157806393f1a40b146102c9578063943f013d1461030f578063b3ab15fb14610318578063e2bbb1581461032b578063f25bb8651461033e575f5ffd5b80635f96dc1114610278578063628b409f1461028157806362e006c71461028a578063630b5ba11461029d5780636e271dd5146102a55780637805583c146102ae575f5ffd5b806351eb05a61161011057806351eb05a6146102035780635312ea8e1461021657806354575af414610229578063570ca7351461023c5780635715f8f91461025c5780635b14295614610265575f5ffd5b80630e15561a146101575780631526fe271461017357806317caf6f1146101bf5780631ab06ee5146101c8578063231f0c6a146101dd578063441a3e70146101f0575b5f5ffd5b610160600c5481565b6040519081526020015b60405180910390f35b61018661018136600461133e565b610351565b604080516001600160a01b03909716875260208701959095529385019290925260608401521515608083015260a082015260c00161016a565b61016060075481565b6101db6101d6366004611355565b6103a5565b005b6101606101eb366004611355565b61043b565b6101db6101fe366004611355565b6104dd565b6101db61021136600461133e565b610703565b6101db61022436600461133e565b610869565b6101db61023736600461138c565b610961565b60035461024f906001600160a01b031681565b60405161016a91906113cb565b61016060025481565b61024f61027336600461133e565b610ae6565b61016060085481565b610160600a5481565b6101db6102983660046113ec565b610af1565b6101db610d05565b61016060095481565b6101606102bc36600461143a565b610d27565b610160610e8d565b6102fa6102d736600461143a565b600660209081525f92835260408084209091529082529020805460019091015482565b6040805192835260208301919091520161016a565b610160600b5481565b6101db610326366004611468565b610e9c565b6101db610339366004611355565b610ee8565b60045461024f906001600160a01b031681565b60058181548110610360575f80fd5b5f9182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909260ff9091169086565b6003546001600160a01b031633146103d85760405162461bcd60e51b81526004016103cf90611483565b60405180910390fd5b6103e0610d05565b5f600583815481106103f4576103f46114ce565b5f9182526020909120600690910201600481015490915060ff16156104345781816001015460075461042691906114f6565b6104309190611509565b6007555b6001015550565b5f81831061044a57505f6104d7565b60095482106104a157600954831061046357505f6104d7565b600854831161049057600a5460085460095461047f91906114f6565b610489919061151c565b90506104d7565b600a548360095461047f91906114f6565b60085482116104b157505f6104d7565b60085483116104ca57600a5460085461047f90846114f6565b600a5461047f84846114f6565b92915050565b5f3390505f600584815481106104f5576104f56114ce565b5f9182526020808320878452600680835260408086206001600160a01b038916875290935291909320805492909102909201925084111561056d5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b60448201526064016103cf565b61057685610703565b5f8160010154670de0b6b3a76400008460030154845f0154610598919061151c565b6105a29190611533565b6105ac91906114f6565b90508015610602576105be848261115d565b836001600160a01b03167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040516105f991815260200190565b60405180910390a25b84156106925784825f015f82825461061a91906114f6565b9091555050825460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906106509087908990600401611552565b6020604051808303815f875af115801561066c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610690919061156b565b505b60038301548254670de0b6b3a7640000916106ac9161151c565b6106b69190611533565b600183015560405185815286906001600160a01b038616907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a3505050505050565b5f60058281548110610717576107176114ce565b905f5260205f209060060201905080600201544211610734575050565b80546040516370a0823160e01b81525f916001600160a01b0316906370a08231906107639030906004016113cb565b602060405180830381865afa15801561077e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a29190611586565b9050805f036107b657504260029091015550565b600482015460ff166107ee5760048201805460ff19166001908117909155820154600780545f906107e8908490611509565b90915550505b6007541561085e575f61080583600201544261043b565b90505f60075484600101548361081b919061151c565b6108259190611533565b90508261083a82670de0b6b3a764000061151c565b6108449190611533565b846003015f8282546108569190611509565b909155505050505b504260029091015550565b5f6005828154811061087d5761087d6114ce565b5f91825260208083208584526006808352604080862033808852945280862080548782556001820197909755919094029091018054935163a9059cbb60e01b81529095509093926001600160a01b03169163a9059cbb916108e391908590600401611552565b6020604051808303815f875af11580156108ff573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610923919061156b565b50604051818152849033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a350505050565b6003546001600160a01b0316331461098b5760405162461bcd60e51b81526004016103cf90611483565b60095461099b9062278d00611509565b421015610a72576004546001600160a01b03908116908416036109e95760405162461bcd60e51b81526004016103cf90602080825260049082015263161d5cd960e21b604082015260600190565b6005545f5b81811015610a6f575f60058281548110610a0a57610a0a6114ce565b5f918252602090912060069091020180549091506001600160a01b0390811690871603610a665760405162461bcd60e51b815260206004820152600a6024820152693837b7b6173a37b5b2b760b11b60448201526064016103cf565b506001016109ee565b50505b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb90610aa09084908690600401611552565b6020604051808303815f875af1158015610abc573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ae0919061156b565b50505050565b5f6104d78183611244565b6003546001600160a01b03163314610b1b5760405162461bcd60e51b81526004016103cf90611483565b610b2484611256565b8215610b3257610b32610d05565b600854421015610b6257815f03610b4d576008549150610b77565b600854821015610b5d5760085491505b610b77565b811580610b6e57504282105b15610b77574291505b5f60085483111580610b895750428311155b6040805160c0810182526001600160a01b038881168252602082018a81529282018781525f60608401818152861580156080870190815260a087018b815260058054600181018255955296517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600690950294850180546001600160a01b031916919097161790955595517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db183015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db382015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db48201805460ff191691151591909117905590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db590910155909150610cfd578560075f828254610cf79190611509565b90915550505b505050505050565b6005545f5b81811015610d2357610d1b81610703565b600101610d0a565b5050565b5f5f60058481548110610d3c57610d3c6114ce565b5f9182526020808320878452600680835260408086206001600160a01b038a811688529452808620949091029091016003810154815492516370a0823160e01b815291965093949291909116906370a0823190610d9d9030906004016113cb565b602060405180830381865afa158015610db8573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ddc9190611586565b9050836002015442118015610df057508015155b15610e52575f610e0485600201544261043b565b90505f600754866001015483610e1a919061151c565b610e249190611533565b905082610e3982670de0b6b3a764000061151c565b610e439190611533565b610e4d9085611509565b935050505b60018301548354670de0b6b3a764000090610e6e90859061151c565b610e789190611533565b610e8291906114f6565b979650505050505050565b5f610e975f6112ee565b905090565b6003546001600160a01b03163314610ec65760405162461bcd60e51b81526004016103cf90611483565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b5f3390505f60058481548110610f0057610f006114ce565b5f9182526020808320878452600680835260408086206001600160a01b03891687529093529190932091029091019150610f3985610703565b805415610fce575f8160010154670de0b6b3a76400008460030154845f0154610f62919061151c565b610f6c9190611533565b610f7691906114f6565b90508015610fcc57610f88848261115d565b836001600160a01b03167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610fc391815260200190565b60405180910390a25b505b805460058301545f91610fe0916114f6565b90505f818611610ff05785610ff2565b815b905080156110eb5783546040516323b872dd60e01b81526001600160a01b03878116600483015230602483015260448201849052909116906323b872dd906064016020604051808303815f875af115801561104f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611073919061156b565b50835461108a905f906001600160a01b03166112f7565b156110d3576002546127109081906110a290826114f6565b6110ac908461151c565b6110b69190611533565b845f015f8282546110c79190611509565b909155506110eb915050565b80835f015f8282546110e59190611509565b90915550505b60038401548354670de0b6b3a7640000916111059161151c565b61110f9190611533565b600184015560405181815287906001600160a01b038716907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a350505050505050565b600480546040516370a0823160e01b81525f926001600160a01b03909216916370a082319161118e913091016113cb565b602060405180830381865afa1580156111a9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111cd9190611586565b9050801561123f578082111561120e576004805460405163a9059cbb60e01b81526001600160a01b039091169163a9059cbb91610aa0918791869101611552565b6004805460405163a9059cbb60e01b81526001600160a01b039091169163a9059cbb91610aa0918791879101611552565b505050565b5f61124f8383611318565b9392505050565b6005545f5b8181101561123f57826001600160a01b031660058281548110611280576112806114ce565b5f9182526020909120600690910201546001600160a01b0316036112e65760405162461bcd60e51b815260206004820152601f60248201527f5875736447656e65736973506f6f6c3a206578697374696e6720706f6f6c3f0060448201526064016103cf565b60010161125b565b5f6104d7825490565b6001600160a01b0381165f908152600183016020526040812054151561124f565b5f825f01828154811061132d5761132d6114ce565b905f5260205f200154905092915050565b5f6020828403121561134e575f5ffd5b5035919050565b5f5f60408385031215611366575f5ffd5b50508035926020909101359150565b6001600160a01b0381168114611389575f5ffd5b50565b5f5f5f6060848603121561139e575f5ffd5b83356113a981611375565b92506020840135915060408401356113c081611375565b809150509250925092565b6001600160a01b0391909116815260200190565b8015158114611389575f5ffd5b5f5f5f5f5f60a08688031215611400575f5ffd5b85359450602086013561141281611375565b93506040860135611422816113df565b94979396509394606081013594506080013592915050565b5f5f6040838503121561144b575f5ffd5b82359150602083013561145d81611375565b809150509250929050565b5f60208284031215611478575f5ffd5b813561124f81611375565b6020808252602b908201527f5875736447656e65736973506f6f6c3a2063616c6c6572206973206e6f74207460408201526a34329037b832b930ba37b960a91b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b818103818111156104d7576104d76114e2565b808201808211156104d7576104d76114e2565b80820281158282048414176104d7576104d76114e2565b5f8261154d57634e487b7160e01b5f52601260045260245ffd5b500490565b6001600160a01b03929092168252602082015260400190565b5f6020828403121561157b575f5ffd5b815161124f816113df565b5f60208284031215611596575f5ffd5b505191905056fea2646970667358221220e39b6ba85b135184adef6900236c7e8d953eb40ac576770644fb1d557b358bcf64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x153 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F96DC11 GT PUSH2 0xBF JUMPI DUP1 PUSH4 0x92FAE48D GT PUSH2 0x79 JUMPI DUP1 PUSH4 0x92FAE48D EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x943F013D EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xF25BB865 EQ PUSH2 0x33E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x628B409F EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x62E006C7 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x6E271DD5 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x7805583C EQ PUSH2 0x2AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x5715F8F9 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x5B142956 EQ PUSH2 0x265 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xE15561A EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1F0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x160 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x16A JUMP JUMPDEST PUSH2 0x160 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x3A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x869 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x138C JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x160 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x133E JUMP JUMPDEST PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x160 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x160 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x160 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x160 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x2FA PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x16A JUMP JUMPDEST PUSH2 0x160 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0xEE8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP6 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E0 PUSH2 0xD05 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3F4 JUMPI PUSH2 0x3F4 PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x434 JUMPI DUP2 DUP2 PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x1 ADD SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x44A JUMPI POP PUSH0 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x4A1 JUMPI PUSH1 0x9 SLOAD DUP4 LT PUSH2 0x463 JUMPI POP PUSH0 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 GT PUSH2 0x490 JUMPI PUSH1 0xA SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST SWAP1 POP PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0xA SLOAD DUP4 PUSH1 0x9 SLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 GT PUSH2 0x4B1 JUMPI POP PUSH0 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 GT PUSH2 0x4CA JUMPI PUSH1 0xA SLOAD PUSH1 0x8 SLOAD PUSH2 0x47F SWAP1 DUP5 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x47F DUP5 DUP5 PUSH2 0x14F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4F5 JUMPI PUSH2 0x4F5 PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x6 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP8 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SWAP2 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP5 GT ISZERO PUSH2 0x56D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x576 DUP6 PUSH2 0x703 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x598 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x602 JUMPI PUSH2 0x5BE DUP5 DUP3 PUSH2 0x115D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5F9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP5 ISZERO PUSH2 0x692 JUMPI DUP5 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x650 SWAP1 DUP8 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x690 SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST POP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP3 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x6AC SWAP2 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x717 JUMPI PUSH2 0x717 PUSH2 0x14CE JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x734 JUMPI POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x763 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x77E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x7B6 JUMPI POP TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH2 0x7EE JUMPI PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH0 SWAP1 PUSH2 0x7E8 SWAP1 DUP5 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x85E JUMPI PUSH0 PUSH2 0x805 DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x43B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 SLOAD DUP5 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x81B SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x825 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x83A DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMPDEST POP TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x87D JUMPI PUSH2 0x87D PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x6 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 CALLER DUP1 DUP9 MSTORE SWAP5 MSTORE DUP1 DUP7 KECCAK256 DUP1 SLOAD DUP8 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP8 SWAP1 SWAP8 SSTORE SWAP2 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD SWAP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP6 POP SWAP1 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x8E3 SWAP2 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x923 SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x99B SWAP1 PUSH3 0x278D00 PUSH2 0x1509 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA72 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x161D5CD9 PUSH1 0xE2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA6F JUMPI PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA0A JUMPI PUSH2 0xA0A PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP8 AND SUB PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x3837B7B6173A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x9EE JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0xAA0 SWAP1 DUP5 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xABC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D7 DUP2 DUP4 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0x1483 JUMP JUMPDEST PUSH2 0xB24 DUP5 PUSH2 0x1256 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xB32 JUMPI PUSH2 0xB32 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO PUSH2 0xB62 JUMPI DUP2 PUSH0 SUB PUSH2 0xB4D JUMPI PUSH1 0x8 SLOAD SWAP2 POP PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0xB5D JUMPI PUSH1 0x8 SLOAD SWAP2 POP JUMPDEST PUSH2 0xB77 JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0xB6E JUMPI POP TIMESTAMP DUP3 LT JUMPDEST ISZERO PUSH2 0xB77 JUMPI TIMESTAMP SWAP2 POP JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP4 GT ISZERO DUP1 PUSH2 0xB89 JUMPI POP TIMESTAMP DUP4 GT ISZERO JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP11 DUP2 MSTORE SWAP3 DUP3 ADD DUP8 DUP2 MSTORE PUSH0 PUSH1 0x60 DUP5 ADD DUP2 DUP2 MSTORE DUP7 ISZERO DUP1 ISZERO PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD DUP12 DUP2 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP6 MSTORE SWAP7 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 PUSH1 0x6 SWAP1 SWAP6 MUL SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP8 AND OR SWAP1 SWAP6 SSTORE SWAP6 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1 DUP4 ADD SSTORE SWAP2 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5 SWAP1 SWAP2 ADD SSTORE SWAP1 SWAP2 POP PUSH2 0xCFD JUMPI DUP6 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF7 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD23 JUMPI PUSH2 0xD1B DUP2 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD0A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD3C JUMPI PUSH2 0xD3C PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x6 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP9 MSTORE SWAP5 MSTORE DUP1 DUP7 KECCAK256 SWAP5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD PUSH1 0x3 DUP2 ADD SLOAD DUP2 SLOAD SWAP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP7 POP SWAP4 SWAP5 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xD9D SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDB8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDDC SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0xDF0 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE52 JUMPI PUSH0 PUSH2 0xE04 DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x43B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 SLOAD DUP7 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0xE1A SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0xE39 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x151C JUMP JUMPDEST PUSH2 0xE43 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0xE4D SWAP1 DUP6 PUSH2 0x1509 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD DUP4 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0xE6E SWAP1 DUP6 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0xE78 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE97 PUSH0 PUSH2 0x12EE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF00 JUMPI PUSH2 0xF00 PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x6 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP8 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0xF39 DUP6 PUSH2 0x703 JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0xFCE JUMPI PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0xF62 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0xF6C SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xFCC JUMPI PUSH2 0xF88 DUP5 DUP3 PUSH2 0x115D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xFC3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH1 0x5 DUP4 ADD SLOAD PUSH0 SWAP2 PUSH2 0xFE0 SWAP2 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP7 GT PUSH2 0xFF0 JUMPI DUP6 PUSH2 0xFF2 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x10EB JUMPI DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x104F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1073 SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST POP DUP4 SLOAD PUSH2 0x108A SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12F7 JUMP JUMPDEST ISZERO PUSH2 0x10D3 JUMPI PUSH1 0x2 SLOAD PUSH2 0x2710 SWAP1 DUP2 SWAP1 PUSH2 0x10A2 SWAP1 DUP3 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x10AC SWAP1 DUP5 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x10B6 SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST DUP5 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x10EB SWAP2 POP POP JUMP JUMPDEST DUP1 DUP4 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10E5 SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD DUP4 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1105 SWAP2 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x110F SWAP2 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH2 0x118E SWAP2 ADDRESS SWAP2 ADD PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11CD SWAP2 SWAP1 PUSH2 0x1586 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x123F JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x120E JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0xAA0 SWAP2 DUP8 SWAP2 DUP7 SWAP2 ADD PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0xAA0 SWAP2 DUP8 SWAP2 DUP8 SWAP2 ADD PUSH2 0x1552 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x124F DUP4 DUP4 PUSH2 0x1318 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x123F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1280 JUMPI PUSH2 0x1280 PUSH2 0x14CE JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x12E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5875736447656E65736973506F6F6C3A206578697374696E6720706F6F6C3F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x125B JUMP JUMPDEST PUSH0 PUSH2 0x4D7 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x124F JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x132D JUMPI PUSH2 0x132D PUSH2 0x14CE JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1366 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1389 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x139E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x13A9 DUP2 PUSH2 0x1375 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x13C0 DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1389 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1400 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1412 DUP2 PUSH2 0x1375 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x1422 DUP2 PUSH2 0x13DF JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x145D DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1478 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x124F DUP2 PUSH2 0x1375 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x5875736447656E65736973506F6F6C3A2063616C6C6572206973206E6F742074 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x34329037B832B930BA37B9 PUSH1 0xA9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4D7 JUMPI PUSH2 0x4D7 PUSH2 0x14E2 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4D7 JUMPI PUSH2 0x4D7 PUSH2 0x14E2 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4D7 JUMPI PUSH2 0x4D7 PUSH2 0x14E2 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x154D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x124F DUP2 PUSH2 0x13DF JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1596 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SWAP12 PUSH12 0xA85B135184ADEF6900236C7E DUP14 SWAP6 RETURNDATACOPY 0xB4 EXP 0xC5 PUSH23 0x770644FB1D557B358BCF64736F6C634300081B00330000 ",
							"sourceMap": "181:9911:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;971:27;;;;;;;;;160:25:7;;;148:2;133:18;971:27:6;;;;;;;;696:26;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;740:32:7;;;722:51;;804:2;789:18;;782:34;;;;832:18;;;825:34;;;;890:2;875:18;;868:34;946:14;939:22;933:3;918:19;;911:51;760:3;978:19;;971:35;709:3;694:19;696:26:6;427:585:7;798:34:6;;;;;;7393:310;;;;;;:::i;:::-;;:::i;:::-;;3256:626;;;;;;:::i;:::-;;:::i;7814:764::-;;;;;;:::i;:::-;;:::i;8765:835::-;;;;;;:::i;:::-;;:::i;6524:367::-;;;;;;:::i;:::-;;:::i;6897:490::-;;;;;;:::i;:::-;;:::i;643:23::-;;;;;-1:-1:-1;;;;;643:23:6;;;;;;;;;;:::i;605:31::-;;;;;;2398:121;;;;;;:::i;:::-;;:::i;838:28::-;;;;;;905;;;;;;4150:1208;;;;;;:::i;:::-;;:::i;8584:175::-;;;:::i;872:26::-;;;;;;2525:725;;;;;;:::i;:::-;;:::i;2279:113::-;;;:::i;728:64::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:25:7;;;3767:2;3752:18;;3745:34;;;;3684:18;728:64:6;3537:248:7;939:26:6;;;;;;7709:99;;;;;;:::i;:::-;;:::i;5364:1154::-;;;;;;:::i;:::-;;:::i;672:18::-;;;;;-1:-1:-1;;;;;672:18:6;;;696:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;696:26:6;;;;-1:-1:-1;696:26:6;;;;;;;;;;:::o;7393:310::-;10002:8;;-1:-1:-1;;;;;10002:8:6;10014:10;10002:22;9994:78;;;;-1:-1:-1;;;9994:78:6;;;;;;;:::i;:::-;;;;;;;;;7473:17:::1;:15;:17::i;:::-;7500:21;7524:8;7533:4;7524:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;7552;::::0;::::1;::::0;7524;;-1:-1:-1;7552:14:6::1;;7548:110;;;7636:11;7618:4;:15;;;7600;;:33;;;;:::i;:::-;:47;;;;:::i;:::-;7582:15;:65:::0;7548:110:::1;7667:15;;:29:::0;-1:-1:-1;7393:310:6:o;3256:626::-;3341:7;3377;3364:9;:20;3360:34;;-1:-1:-1;3393:1:6;3386:8;;3360:34;3419:11;;3408:7;:22;3404:472;;3463:11;;3450:9;:24;3446:38;;-1:-1:-1;3483:1:6;3476:8;;3446:38;3515:13;;3502:9;:26;3498:84;;3569:13;;3552;;3538:11;;:27;;;;:::i;:::-;3537:45;;;;:::i;:::-;3530:52;;;;3498:84;3631:13;;3618:9;3604:11;;:23;;;;:::i;3404:472::-;3690:13;;3679:7;:24;3675:38;;-1:-1:-1;3712:1:6;3705:8;;3675:38;3744:13;;3731:9;:26;3727:80;;3794:13;;3777;;3767:23;;:7;:23;:::i;3727:80::-;3852:13;;3829:19;3839:9;3829:7;:19;:::i;3404:472::-;3256:626;;;;:::o;7814:764::-;7882:15;7900:10;7882:28;;7920:21;7944:8;7953:4;7944:14;;;;;;;;:::i;:::-;;;;;;;;;7992;;;7944;7992;;;;;;;-1:-1:-1;;;;;7992:23:6;;;;;;;;;;;8033:11;;7944:14;;;;;;;;-1:-1:-1;;;8033:22:6;8025:53;;;;-1:-1:-1;;;8025:53:6;;5586:2:7;8025:53:6;;;5568:21:7;5625:2;5605:18;;;5598:30;-1:-1:-1;;;5644:18:7;;;5637:48;5702:18;;8025:53:6;5384:342:7;8025:53:6;8088:16;8099:4;8088:10;:16::i;:::-;8114;8179:4;:15;;;8172:4;8148;:20;;;8134:4;:11;;;:34;;;;:::i;:::-;8133:43;;;;:::i;:::-;:61;;;;:::i;:::-;8114:80;-1:-1:-1;8208:12:6;;8204:126;;8236:35;8253:7;8262:8;8236:16;:35::i;:::-;8301:7;-1:-1:-1;;;;;8290:29:6;;8310:8;8290:29;;;;160:25:7;;148:2;133:18;;14:177;8290:29:6;;;;;;;;8204:126;8343:11;;8339:115;;8385:7;8370:4;:11;;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;8406:10:6;;:37;;-1:-1:-1;;;8406:37:6;;-1:-1:-1;;;;;8406:10:6;;;;:19;;:37;;8426:7;;8435;;8406:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8339:115;8496:20;;;;8482:11;;8520:4;;8482:34;;;:::i;:::-;8481:43;;;;:::i;:::-;8463:15;;;:61;8539:32;;160:25:7;;;8557:4:6;;-1:-1:-1;;;;;8539:32:6;;;;;148:2:7;133:18;8539:32:6;;;;;;;7872:706;;;;7814:764;;:::o;8765:835::-;8816:21;8840:8;8849:4;8840:14;;;;;;;;:::i;:::-;;;;;;;;;;;8816:38;;8887:4;:19;;;8868:15;:38;8864:75;;8922:7;8765:835;:::o;8864:75::-;8970:10;;:35;;-1:-1:-1;;;8970:35:6;;8948:19;;-1:-1:-1;;;;;8970:10:6;;:20;;:35;;8999:4;;8970:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8948:57;;9019:11;9034:1;9019:16;9015:104;;-1:-1:-1;9073:15:6;9051:19;;;;:37;-1:-1:-1;8765:835:6:o;9015:104::-;9133:14;;;;;;9128:115;;9163:14;;;:21;;-1:-1:-1;;9163:21:6;9180:4;9163:21;;;;;;9217:15;;;9198;:34;;9163:14;;9198:34;;9217:15;;9198:34;:::i;:::-;;;;-1:-1:-1;;9128:115:6;9256:15;;:19;9252:295;;9291:24;9318:56;9337:4;:19;;;9358:15;9318:18;:56::i;:::-;9291:83;;9388:19;9449:15;;9430:4;:15;;;9411:16;:34;;;;:::i;:::-;9410:54;;;;:::i;:::-;9388:76;-1:-1:-1;9525:11:6;9503:18;9388:76;9517:4;9503:18;:::i;:::-;9502:34;;;;:::i;:::-;9478:4;:20;;;:58;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;9252:295:6;-1:-1:-1;9578:15:6;9556:19;;;;:37;-1:-1:-1;8765:835:6:o;6524:367::-;6584:21;6608:8;6617:4;6608:14;;;;;;;;:::i;:::-;;;;;;;;;6656;;;6608;6656;;;;;;;6671:10;6656:26;;;;;;;;6710:11;;6731:15;;;-1:-1:-1;6756:15:6;;:19;;;;6608:14;;;;;;;6785:10;;:40;;-1:-1:-1;;;6785:40:6;;6608:14;;-1:-1:-1;6656:26:6;;6710:11;-1:-1:-1;;;;;6785:10:6;;:19;;:40;;6671:10;6710:11;;6785:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6840:44:6;;160:25:7;;;6870:4:6;;6858:10;;6840:44;;148:2:7;133:18;6840:44:6;;;;;;;6574:317;;;6524:367;:::o;6897:490::-;10002:8;;-1:-1:-1;;;;;10002:8:6;10014:10;10002:22;9994:78;;;;-1:-1:-1;;;9994:78:6;;;;;;;:::i;:::-;7032:11:::1;::::0;:21:::1;::::0;7046:7:::1;7032:21;:::i;:::-;7014:15;:39;7010:334;;;7087:4;::::0;-1:-1:-1;;;;;7087:4:6;;::::1;7077:14:::0;;::::1;::::0;7069:31:::1;;;;-1:-1:-1::0;;;7069:31:6::1;;;;;;6873:2:7::0;6855:21;;;6912:1;6892:18;;;6885:29;-1:-1:-1;;;6945:2:7;6930:18;;6923:34;6989:2;6974:18;;6671:327;7069:31:6::1;7131:8;:15:::0;7114:14:::1;7160:174;7188:6;7182:3;:12;7160:174;;;7221:21;7245:8;7254:3;7245:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;7294:10:::0;;7245:13;;-1:-1:-1;;;;;;7294:10:6;;::::1;7284:20:::0;;::::1;::::0;7276:43:::1;;;::::0;-1:-1:-1;;;7276:43:6;;7205:2:7;7276:43:6::1;::::0;::::1;7187:21:7::0;7244:2;7224:18;;;7217:30;-1:-1:-1;;;7263:18:7;;;7256:40;7313:18;;7276:43:6::1;7003:334:7::0;7276:43:6::1;-1:-1:-1::0;7196:5:6::1;;7160:174;;;;7055:289;7010:334;7353:27;::::0;-1:-1:-1;;;7353:27:6;;-1:-1:-1;;;;;7353:15:6;::::1;::::0;::::1;::::0;:27:::1;::::0;7369:2;;7373:6;;7353:27:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6897:490:::0;;;:::o;2398:121::-;2460:7;2486:26;2460:7;2506:5;2486:19;:26::i;4150:1208::-;10002:8;;-1:-1:-1;;;;;10002:8:6;10014:10;10002:22;9994:78;;;;-1:-1:-1;;;9994:78:6;;;;;;;:::i;:::-;4341:26:::1;4360:6;4341:18;:26::i;:::-;4381:11;4377:59;;;4408:17;:15;:17::i;:::-;4467:13;;4449:15;:31;4445:417;;;4500:15;4519:1;4500:20:::0;4496:197:::1;;4558:13;;4540:31;;4445:417;;4496:197;4614:13;;4596:15;:31;4592:101;;;4665:13;;4647:31;;4592:101;4445:417;;;4727:20:::0;;;:57:::1;;;4769:15;4751;:33;4727:57;4723:129;;;4822:15;4804:33;;4723:129;4871:15;4909:13;;4890:15;:32;;4889:74;;;;4947:15;4928;:34;;4889:74;5000:261;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;5000:261:6;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;5000:261:6;;;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;4973:8:::1;:298:::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;4973:298:6::1;::::0;;;::::1;;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4973:298:6::1;::::0;::::1;;::::0;;;::::1;::::0;;;;;;;;;5000:261;;-1:-1:-1;5281:71:6::1;;5330:11;5311:15;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5281:71:6::1;4331:1027;4150:1208:::0;;;;;:::o;8584:175::-;8645:8;:15;8628:14;8670:83;8698:6;8692:3;:12;8670:83;;;8727:15;8738:3;8727:10;:15::i;:::-;8706:5;;8670:83;;;;8618:141;8584:175::o;2525:725::-;2598:7;2617:21;2641:8;2650:4;2641:14;;;;;;;;:::i;:::-;;;;;;;;;2689;;;2641;2689;;;;;;;-1:-1:-1;;;;;2689:21:6;;;;;;;;;;2641:14;;;;;;;2746:20;;;;2798:10;;:35;;-1:-1:-1;;;2798:35:6;;2641:14;;-1:-1:-1;2689:21:6;;2641:14;2798:10;;;;;:20;;:35;;2827:4;;2798:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2776:57;;2865:4;:19;;;2847:15;:37;:57;;;;-1:-1:-1;2888:16:6;;;2847:57;2843:328;;;2920:24;2947:56;2966:4;:19;;;2987:15;2947:18;:56::i;:::-;2920:83;;3017:19;3078:15;;3059:4;:15;;;3040:16;:34;;;;:::i;:::-;3039:54;;;;:::i;:::-;3017:76;-1:-1:-1;3149:11:6;3127:18;3017:76;3141:4;3127:18;:::i;:::-;3126:34;;;;:::i;:::-;3107:53;;;;:::i;:::-;;;2906:265;;2843:328;3228:15;;;;3188:11;;3221:4;;3188:29;;3202:15;;3188:29;:::i;:::-;3187:38;;;;:::i;:::-;:56;;;;:::i;:::-;3180:63;2525:725;-1:-1:-1;;;;;;;2525:725:6:o;2279:113::-;2334:7;2360:25;:16;:23;:25::i;:::-;2353:32;;2279:113;:::o;7709:99::-;10002:8;;-1:-1:-1;;;;;10002:8:6;10014:10;10002:22;9994:78;;;;-1:-1:-1;;;9994:78:6;;;;;;;:::i;:::-;7781:8:::1;:20:::0;;-1:-1:-1;;;;;;7781:20:6::1;-1:-1:-1::0;;;;;7781:20:6;;;::::1;::::0;;;::::1;::::0;;7709:99::o;5364:1154::-;5431:15;5449:10;5431:28;;5469:21;5493:8;5502:4;5493:14;;;;;;;;:::i;:::-;;;;;;;;;5541;;;5493;5541;;;;;;;-1:-1:-1;;;;;5541:23:6;;;;;;;;;;;5493:14;;;;;;-1:-1:-1;5574:16:6;5550:4;5574:10;:16::i;:::-;5604:11;;:15;5600:277;;5635:16;5700:4;:15;;;5693:4;5669;:20;;;5655:4;:11;;;:34;;;;:::i;:::-;5654:43;;;;:::i;:::-;:61;;;;:::i;:::-;5635:80;-1:-1:-1;5733:12:6;;5729:138;;5765:35;5782:7;5791:8;5765:16;:35::i;:::-;5834:7;-1:-1:-1;;;;;5823:29:6;;5843:8;5823:29;;;;160:25:7;;148:2;133:18;;14:177;5823:29:6;;;;;;;;5729:138;5621:256;5600:277;5932:11;;5914:15;;;;5886:25;;5914:29;;;:::i;:::-;5886:57;;5953:14;5980:17;5970:7;:27;:57;;6020:7;5970:57;;;6000:17;5970:57;5953:74;-1:-1:-1;6041:10:6;;6037:359;;6067:10;;:55;;-1:-1:-1;;;6067:55:6;;-1:-1:-1;;;;;7562:32:7;;;6067:55:6;;;7544:51:7;6108:4:6;7611:18:7;;;7604:60;7680:18;;;7673:34;;;6067:10:6;;;;:23;;7517:18:7;;6067:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6174:10:6;;6140:46;;6174:10;;-1:-1:-1;;;;;6174:10:6;6140:25;:46::i;:::-;6136:250;;;6283:16;;6224:5;;;;6273:26;;6224:5;6273:26;:::i;:::-;6263:37;;:6;:37;:::i;:::-;6262:49;;;;:::i;:::-;6247:4;:11;;;:64;;;;;;;:::i;:::-;;;;-1:-1:-1;6136:250:6;;-1:-1:-1;;6136:250:6;;6365:6;6350:4;:11;;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;6136:250:6;6438:20;;;;6424:11;;6462:4;;6424:34;;;:::i;:::-;6423:43;;;;:::i;:::-;6405:15;;;:61;6481:30;;160:25:7;;;6498:4:6;;-1:-1:-1;;;;;6481:30:6;;;;;148:2:7;133:18;6481:30:6;;;;;;;5421:1097;;;;;5364:1154;;:::o;9606:348::-;9704:4;;;:29;;-1:-1:-1;;;9704:29:6;;9681:20;;-1:-1:-1;;;;;9704:4:6;;;;:14;;:29;;9727:4;;9704:29;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9681:52;-1:-1:-1;9747:16:6;;9743:205;;9793:12;9783:7;:22;9779:159;;;9825:4;;;:32;;-1:-1:-1;;;9825:32:6;;-1:-1:-1;;;;;9825:4:6;;;;:13;;:32;;9839:3;;9844:12;;9825:32;;:::i;9779:159::-;9896:4;;;:27;;-1:-1:-1;;;9896:27:6;;-1:-1:-1;;;;;9896:4:6;;;;:13;;:27;;9910:3;;9915:7;;9896:27;;:::i;9779:159::-;9671:283;9606:348;;:::o;9574:156:5:-;9648:7;9698:22;9702:3;9714:5;9698:3;:22::i;:::-;9690:31;9574:156;-1:-1:-1;;;9574:156:5:o;3888:256:6:-;3972:8;:15;3955:14;3997:141;4025:6;4019:3;:12;3997:141;;;4085:6;-1:-1:-1;;;;;4062:29:6;:8;4071:3;4062:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;4062:19:6;:29;4054:73;;;;-1:-1:-1;;;4054:73:6;;7920:2:7;4054:73:6;;;7902:21:7;7959:2;7939:18;;;7932:30;7998:33;7978:18;;;7971:61;8049:18;;4054:73:6;7718:355:7;4054:73:6;4033:5;;3997:141;;9117:115:5;9180:7;9206:19;9214:3;4556:18;;4474:107;8871:165;-1:-1:-1;;;;;9004:23:5;;8951:4;4360:21;;;:14;;;:21;;;;;;:26;;8974:55;4264:129;4923:118;4990:7;5016:3;:11;;5028:5;5016:18;;;;;;;;:::i;:::-;;;;;;;;;5009:25;;4923:118;;;;:::o;196:226:7:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;369:23:7;;196:226;-1:-1:-1;196:226:7:o;1017:346::-;1085:6;1093;1146:2;1134:9;1125:7;1121:23;1117:32;1114:52;;;1162:1;1159;1152:12;1114:52;-1:-1:-1;;1207:23:7;;;1327:2;1312:18;;;1299:32;;-1:-1:-1;1017:346:7:o;1368:139::-;-1:-1:-1;;;;;1451:31:7;;1441:42;;1431:70;;1497:1;1494;1487:12;1431:70;1368:139;:::o;1512:538::-;1603:6;1611;1619;1672:2;1660:9;1651:7;1647:23;1643:32;1640:52;;;1688:1;1685;1678:12;1640:52;1727:9;1714:23;1746:39;1779:5;1746:39;:::i;:::-;1804:5;-1:-1:-1;1882:2:7;1867:18;;1854:32;;-1:-1:-1;1964:2:7;1949:18;;1936:32;1977:41;1936:32;1977:41;:::i;:::-;2037:7;2027:17;;;1512:538;;;;;:::o;2055:203::-;-1:-1:-1;;;;;2219:32:7;;;;2201:51;;2189:2;2174:18;;2055:203::o;2263:118::-;2349:5;2342:13;2335:21;2328:5;2325:32;2315:60;;2371:1;2368;2361:12;2386:766;2492:6;2500;2508;2516;2524;2577:3;2565:9;2556:7;2552:23;2548:33;2545:53;;;2594:1;2591;2584:12;2545:53;2639:23;;;-1:-1:-1;2738:2:7;2723:18;;2710:32;2751:41;2710:32;2751:41;:::i;:::-;2811:7;-1:-1:-1;2870:2:7;2855:18;;2842:32;2883:30;2842:32;2883:30;:::i;:::-;2386:766;;;;-1:-1:-1;2932:7:7;;3012:2;2997:18;;2984:32;;-1:-1:-1;3115:3:7;3100:19;3087:33;;2386:766;-1:-1:-1;;2386:766:7:o;3157:375::-;3225:6;3233;3286:2;3274:9;3265:7;3261:23;3257:32;3254:52;;;3302:1;3299;3292:12;3254:52;3347:23;;;-1:-1:-1;3446:2:7;3431:18;;3418:32;3459:41;3418:32;3459:41;:::i;:::-;3519:7;3509:17;;;3157:375;;;;;:::o;3790:255::-;3849:6;3902:2;3890:9;3881:7;3877:23;3873:32;3870:52;;;3918:1;3915;3908:12;3870:52;3957:9;3944:23;3976:39;4009:5;3976:39;:::i;4272:407::-;4474:2;4456:21;;;4513:2;4493:18;;;4486:30;4552:34;4547:2;4532:18;;4525:62;-1:-1:-1;;;4618:2:7;4603:18;;4596:41;4669:3;4654:19;;4272:407::o;4684:127::-;4745:10;4740:3;4736:20;4733:1;4726:31;4776:4;4773:1;4766:15;4800:4;4797:1;4790:15;4816:127;4877:10;4872:3;4868:20;4865:1;4858:31;4908:4;4905:1;4898:15;4932:4;4929:1;4922:15;4948:128;5015:9;;;5036:11;;;5033:37;;;5050:18;;:::i;5081:125::-;5146:9;;;5167:10;;;5164:36;;;5180:18;;:::i;5211:168::-;5284:9;;;5315;;5332:15;;;5326:22;;5312:37;5302:71;;5353:18;;:::i;5731:217::-;5771:1;5797;5787:132;;5841:10;5836:3;5832:20;5829:1;5822:31;5876:4;5873:1;5866:15;5904:4;5901:1;5894:15;5787:132;-1:-1:-1;5933:9:7;;5731:217::o;5953:274::-;-1:-1:-1;;;;;6145:32:7;;;;6127:51;;6209:2;6194:18;;6187:34;6115:2;6100:18;;5953:274::o;6232:245::-;6299:6;6352:2;6340:9;6331:7;6327:23;6323:32;6320:52;;;6368:1;6365;6358:12;6320:52;6400:9;6394:16;6419:28;6441:5;6419:28;:::i;6482:184::-;6552:6;6605:2;6593:9;6584:7;6580:23;6576:32;6573:52;;;6621:1;6618;6611:12;6573:52;-1:-1:-1;6644:16:7;;6482:184;-1:-1:-1;6482:184:7:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1117400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Xusd()": "2492",
								"XusdPerSecond()": "2328",
								"add(uint256,address,bool,uint256,uint256)": "infinite",
								"comissionPercent()": "2394",
								"comissionToken(uint256)": "4843",
								"comissionTokensCount()": "2377",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getGeneratedReward(uint256,uint256)": "infinite",
								"governanceRecoverUnsupported(address,uint256,address)": "infinite",
								"massUpdatePools()": "infinite",
								"operator()": "2449",
								"pendingXusd(uint256,address)": "infinite",
								"poolEndTime()": "2394",
								"poolInfo(uint256)": "15357",
								"poolStartTime()": "2306",
								"runningTime()": "2349",
								"set(uint256,uint256)": "infinite",
								"setOperator(address)": "26791",
								"totalAllocPoint()": "2351",
								"totalRewards()": "2307",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "4795",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"checkPoolDuplicate(contract IERC20)": "infinite",
								"safeXusdTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 10092,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 181,
									"end": 10092,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 181,
									"end": 10092,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 831,
									"end": 832,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 798,
									"end": 832,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 798,
									"end": 832,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1311,
									"end": 2273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1311,
									"end": 2273,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1573,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1541,
									"end": 1556,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 1541,
									"end": 1573,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2204,
									"end": 2206,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2186,
									"end": 2207,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2207,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2207,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2243,
									"end": 2244,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2223,
									"end": 2241,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2223,
									"end": 2241,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2223,
									"end": 2241,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6C617465"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2276,
									"end": 2278,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2261,
									"end": 2279,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2261,
									"end": 2279,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2254,
									"end": 2288,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2320,
									"end": 2322,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2002,
									"end": 2329,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1533,
									"end": 1582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1600,
									"end": 1619,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1600,
									"end": 1619,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1592,
									"end": 1661,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1661,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1592,
									"end": 1661,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1592,
									"end": 1661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1661,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2538,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1592,
									"end": 1661,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1592,
									"end": 1661,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1661,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2518,
									"end": 2539,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2575,
									"end": 2577,
									"name": "PUSH",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2555,
									"end": 2573,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2555,
									"end": 2573,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2573,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2548,
									"end": 2578,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2614,
									"end": 2648,
									"name": "PUSH",
									"source": 7,
									"value": "5875736447656E65736973506F6F6C3A2058757364206973207A65726F206164"
								},
								{
									"begin": 2594,
									"end": 2612,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2594,
									"end": 2612,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2594,
									"end": 2612,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2587,
									"end": 2649,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6472657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2665,
									"end": 2683,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2665,
									"end": 2683,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2665,
									"end": 2683,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2658,
									"end": 2693,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2710,
									"end": 2729,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2710,
									"end": 2729,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1592,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2334,
									"end": 2735,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1592,
									"end": 1661,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1592,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1695,
									"end": 1696,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1679,
									"end": 1692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1738,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1671,
									"end": 1738,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1738,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1671,
									"end": 1738,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1738,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1738,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2942,
									"end": 2944,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1671,
									"end": 1738,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1738,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1738,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2924,
									"end": 2945,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2981,
									"end": 2983,
									"name": "PUSH",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2961,
									"end": 2979,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2961,
									"end": 2979,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2961,
									"end": 2979,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2954,
									"end": 2984,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3020,
									"end": 3054,
									"name": "PUSH",
									"source": 7,
									"value": "5875736447656E65736973506F6F6C3A20746F74616C52657761726473206973"
								},
								{
									"begin": 3000,
									"end": 3018,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3000,
									"end": 3018,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3000,
									"end": 3018,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2993,
									"end": 3055,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "207A65726F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3071,
									"end": 3089,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3071,
									"end": 3089,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3089,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3064,
									"end": 3099,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3116,
									"end": 3135,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3116,
									"end": 3135,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1738,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2740,
									"end": 3141,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1738,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1671,
									"end": 1738,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1772,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1756,
									"end": 1768,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1756,
									"end": 1772,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1748,
									"end": 1813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1748,
									"end": 1813,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1748,
									"end": 1813,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1748,
									"end": 1813,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1748,
									"end": 1813,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1748,
									"end": 1813,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3348,
									"end": 3350,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1748,
									"end": 1813,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1748,
									"end": 1813,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1748,
									"end": 1813,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3330,
									"end": 3351,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3387,
									"end": 3389,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3367,
									"end": 3385,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3367,
									"end": 3385,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3367,
									"end": 3385,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3360,
									"end": 3390,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3426,
									"end": 3460,
									"name": "PUSH",
									"source": 7,
									"value": "5875736447656E65736973506F6F6C3A2072756E6E696E6754696D6520697320"
								},
								{
									"begin": 3406,
									"end": 3424,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3406,
									"end": 3424,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3424,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3399,
									"end": 3461,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7A65726F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3477,
									"end": 3495,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3477,
									"end": 3495,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3477,
									"end": 3495,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3470,
									"end": 3504,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3521,
									"end": 3540,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3521,
									"end": 3540,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1748,
									"end": 1813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 3146,
									"end": 3546,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1748,
									"end": 1813,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1748,
									"end": 1813,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1827,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1823,
									"end": 1843,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1843,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1823,
									"end": 1843,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1823,
									"end": 1843,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1843,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1843,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1843,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1843,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1865,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 1853,
									"end": 1881,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1881,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1881,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1891,
									"end": 1902,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1891,
									"end": 1917,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1891,
									"end": 1917,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1891,
									"end": 1917,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 1969,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1891,
									"end": 1917,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1881,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 1969,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1943,
									"end": 1969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 1969,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1943,
									"end": 1969,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1927,
									"end": 1940,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1927,
									"end": 1969,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1984,
									"end": 1993,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1979,
									"end": 2099,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1979,
									"end": 2099,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2003,
									"end": 2019,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2003,
									"end": 2026,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2000,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2026,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1979,
									"end": 2099,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1979,
									"end": 2099,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1979,
									"end": 2099,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2047,
									"end": 2088,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2086,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2068,
									"end": 2087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2087,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2047,
									"end": 2063,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 2067,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2047,
									"end": 2067,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2047,
									"end": 2067,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2047,
									"end": 2067,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2047,
									"end": 2088,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2047,
									"end": 2088,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2047,
									"end": 2088,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2047,
									"end": 2088,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2047,
									"end": 2088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2047,
									"end": 2088,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2047,
									"end": 2088,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2028,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2028,
									"end": 2031,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1979,
									"end": 2099,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1979,
									"end": 2099,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1979,
									"end": 2099,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1979,
									"end": 2099,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2108,
									"end": 2124,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2108,
									"end": 2144,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2144,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2108,
									"end": 2144,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2154,
									"end": 2167,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2154,
									"end": 2184,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2154,
									"end": 2184,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2154,
									"end": 2184,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2224,
									"end": 2235,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 2224,
									"end": 2235,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2208,
									"end": 2235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2208,
									"end": 2235,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2170,
									"end": 2184,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2208,
									"end": 2235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2208,
									"end": 2235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2208,
									"end": 2235,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2208,
									"end": 2235,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2205,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 2194,
									"end": 2235,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2245,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2245,
									"end": 2266,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2245,
									"end": 2266,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2245,
									"end": 2266,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2256,
									"end": 2266,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 2245,
									"end": 2266,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2245,
									"end": 2266,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2245,
									"end": 2266,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 181,
									"end": 10092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 181,
									"end": 10092,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 181,
									"end": 10092,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8316,
									"end": 8466,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 8316,
									"end": 8466,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8386,
									"end": 8390,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 8409,
									"end": 8459,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 8414,
									"end": 8417,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8434,
									"end": 8457,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 8434,
									"end": 8457,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 8409,
									"end": 8413,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 8409,
									"end": 8459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8409,
									"end": 8459,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 8409,
									"end": 8459,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8402,
									"end": 8459,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 8402,
									"end": 8459,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8316,
									"end": 8466,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 8316,
									"end": 8466,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 8316,
									"end": 8466,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 8316,
									"end": 8466,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 8316,
									"end": 8466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8316,
									"end": 8466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 8316,
									"end": 8466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2241,
									"end": 2647,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 2241,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2304,
									"end": 2308,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4374,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4360,
									"end": 4374,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4374,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2641,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 2320,
									"end": 2641,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2373,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2544,
									"end": 2562,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2544,
									"end": 2562,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2534,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2534,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2534,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2562,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2576,
									"end": 2587,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 2576,
									"end": 2587,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2641,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 2320,
									"end": 2641,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2625,
									"end": 2630,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2618,
									"end": 2630,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 2618,
									"end": 2630,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 328,
									"end": 1997,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 328,
									"end": 1997,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 468,
									"end": 474,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 482,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 490,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 498,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 500,
									"end": 506,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 508,
									"end": 514,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 561,
									"end": 564,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 549,
									"end": 558,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 540,
									"end": 547,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 536,
									"end": 559,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 532,
									"end": 565,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 529,
									"end": 582,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 529,
									"end": 582,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 529,
									"end": 582,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 578,
									"end": 579,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 576,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 568,
									"end": 580,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 529,
									"end": 582,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 529,
									"end": 582,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 601,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 631,
									"end": 640,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 601,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 601,
									"end": 641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 601,
									"end": 641,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 601,
									"end": 641,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 685,
									"end": 687,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 670,
									"end": 688,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 670,
									"end": 688,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 664,
									"end": 689,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 591,
									"end": 641,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 591,
									"end": 641,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 701,
									"end": 731,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 701,
									"end": 731,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 748,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 698,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 698,
									"end": 748,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 744,
									"end": 745,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 742,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 746,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 748,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 698,
									"end": 748,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 767,
									"end": 789,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 767,
									"end": 789,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 820,
									"end": 824,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 812,
									"end": 825,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 812,
									"end": 825,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 808,
									"end": 835,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SGT",
									"source": -1
								},
								{
									"begin": 798,
									"end": 853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 798,
									"end": 853,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 849,
									"end": 850,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 846,
									"end": 847,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 839,
									"end": 851,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 798,
									"end": 853,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 798,
									"end": 853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 876,
									"end": 885,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 876,
									"end": 885,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 897,
									"end": 927,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 897,
									"end": 927,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 894,
									"end": 950,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 894,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 894,
									"end": 950,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 930,
									"end": 948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 930,
									"end": 948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 930,
									"end": 948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 930,
									"end": 948,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 930,
									"end": 948,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1012,
									"end": 1014,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1006,
									"end": 1015,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 973,
									"end": 974,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 969,
									"end": 983,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 969,
									"end": 983,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 969,
									"end": 983,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 969,
									"end": 983,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1068,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 1058,
									"end": 1069,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1058,
									"end": 1069,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1054,
									"end": 1079,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1042,
									"end": 1080,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1042,
									"end": 1080,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1095,
									"end": 1129,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1095,
									"end": 1129,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1153,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1153,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1153,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1089,
									"end": 1177,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1089,
									"end": 1177,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1089,
									"end": 1177,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1157,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1157,
									"end": 1175,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1175,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1157,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1193,
									"end": 1195,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1186,
									"end": 1208,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1265,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1265,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1265,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1293,
									"end": 1295,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1323,
									"end": 1334,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1334,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1334,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1319,
									"end": 1339,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1319,
									"end": 1339,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1319,
									"end": 1339,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1265,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1281,
									"end": 1296,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1281,
									"end": 1296,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 1370,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 1370,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 1370,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1384,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1381,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1373,
									"end": 1385,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1415,
									"end": 1417,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1411,
									"end": 1413,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1418,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1418,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1586,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1427,
									"end": 1586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1443,
									"end": 1449,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1441,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1435,
									"end": 1450,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1586,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1586,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1427,
									"end": 1586,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1539,
									"end": 1542,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1509,
									"end": 1543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1509,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1544,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1544,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1575,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1460,
									"end": 1472,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1472,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1472,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1472,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1576,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1586,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1427,
									"end": 1586,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1586,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1427,
									"end": 1586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1673,
									"end": 1675,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1658,
									"end": 1676,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1658,
									"end": 1676,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1652,
									"end": 1677,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1769,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1752,
									"end": 1770,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 1752,
									"end": 1770,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1771,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1863,
									"end": 1866,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1848,
									"end": 1867,
									"name": "DUP14",
									"source": 7
								},
								{
									"begin": 1848,
									"end": 1867,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1868,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1960,
									"end": 1963,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 1945,
									"end": 1964,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 1964,
									"name": "SWAP14",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 1964,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 1965,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 328,
									"end": 1997,
									"name": "SWAP12",
									"source": 7
								},
								{
									"begin": 328,
									"end": 1997,
									"name": "SWAP15",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1611,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1611,
									"name": "SWAP14",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1652,
									"end": 1677,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1652,
									"end": 1677,
									"name": "SWAP12",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1771,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1771,
									"name": "SWAP11",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1868,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1868,
									"name": "SWAP10",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1939,
									"end": 1965,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 328,
									"end": 1997,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 328,
									"end": 1997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3551,
									"end": 3768,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 3551,
									"end": 3768,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3591,
									"end": 3592,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3618,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3607,
									"end": 3739,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 3607,
									"end": 3739,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3661,
									"end": 3671,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 3656,
									"end": 3659,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 3652,
									"end": 3672,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3649,
									"end": 3650,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3642,
									"end": 3673,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3696,
									"end": 3700,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3693,
									"end": 3694,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3686,
									"end": 3701,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3724,
									"end": 3728,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3721,
									"end": 3722,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3714,
									"end": 3729,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3607,
									"end": 3739,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 3607,
									"end": 3739,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3753,
									"end": 3762,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 3753,
									"end": 3762,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3551,
									"end": 3768,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3773,
									"end": 3900,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3773,
									"end": 3900,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3834,
									"end": 3844,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 3829,
									"end": 3832,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 3825,
									"end": 3845,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3822,
									"end": 3823,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3815,
									"end": 3846,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3865,
									"end": 3869,
									"name": "PUSH",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 3862,
									"end": 3863,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3855,
									"end": 3870,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3889,
									"end": 3893,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3886,
									"end": 3887,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3879,
									"end": 3894,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 4127,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 3905,
									"end": 4127,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3970,
									"end": 3979,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3970,
									"end": 3979,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3970,
									"end": 3979,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3991,
									"end": 4001,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3991,
									"end": 4001,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3991,
									"end": 4001,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4121,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4121,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 3988,
									"end": 4121,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4053,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 4038,
									"end": 4041,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 4034,
									"end": 4054,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4031,
									"end": 4032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4024,
									"end": 4055,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4078,
									"end": 4082,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 4075,
									"end": 4076,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4068,
									"end": 4083,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4106,
									"end": 4110,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4103,
									"end": 4104,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4096,
									"end": 4111,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 4127,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3905,
									"end": 4127,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 181,
									"end": 10092,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 10092,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 181,
									"end": 10092,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 10092,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 10092,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 181,
									"end": 10092,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 10092,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e39b6ba85b135184adef6900236c7e8d953eb40ac576770644fb1d557b358bcf64736f6c634300081b0033",
									".code": [
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "5F96DC11"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "92FAE48D"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "92FAE48D"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "93F1A40B"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "943F013D"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "B3AB15FB"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "E2BBB158"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "F25BB865"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "5F96DC11"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "628B409F"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "62E006C7"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "630B5BA1"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "6E271DD5"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "7805583C"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "51EB05A6"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "51EB05A6"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "5312EA8E"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "54575AF4"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "570CA735"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "5715F8F9"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "5B142956"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "E15561A"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "1526FE27"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "17CAF6F1"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "1AB06EE5"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "231F0C6A"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "441A3E70"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 10092,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 971,
											"end": 998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 971,
											"end": 998,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 971,
											"end": 998,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 971,
											"end": 998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 998,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 971,
											"end": 998,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 971,
											"end": 998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 998,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 971,
											"end": 998,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 696,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 696,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 740,
											"end": 772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 740,
											"end": 772,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 740,
											"end": 772,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 722,
											"end": 773,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 722,
											"end": 773,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 804,
											"end": 806,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 789,
											"end": 807,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 782,
											"end": 816,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 782,
											"end": 816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 782,
											"end": 816,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 782,
											"end": 816,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 832,
											"end": 850,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 832,
											"end": 850,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 832,
											"end": 850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 825,
											"end": 859,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 825,
											"end": 859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 825,
											"end": 859,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 825,
											"end": 859,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 890,
											"end": 892,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 875,
											"end": 893,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 875,
											"end": 893,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 868,
											"end": 902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 946,
											"end": 960,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 939,
											"end": 961,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 933,
											"end": 936,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 918,
											"end": 937,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 918,
											"end": 937,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 911,
											"end": 962,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 760,
											"end": 763,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 978,
											"end": 997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 978,
											"end": 997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 971,
											"end": 1006,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 709,
											"end": 712,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 694,
											"end": 713,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 427,
											"end": 1012,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 798,
											"end": 832,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 798,
											"end": 832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 798,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 798,
											"end": 832,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 798,
											"end": 832,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 798,
											"end": 832,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 798,
											"end": 832,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 7393,
											"end": 7703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 7393,
											"end": 7703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3256,
											"end": 3882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3256,
											"end": 3882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 7814,
											"end": 8578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 7814,
											"end": 8578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8765,
											"end": 9600,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 8765,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8765,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 8765,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 8765,
											"end": 9600,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8765,
											"end": 9600,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8765,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 8765,
											"end": 9600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8765,
											"end": 9600,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 8765,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8765,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 8765,
											"end": 9600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6891,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6524,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 6524,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 6524,
											"end": 6891,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6891,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6524,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 6524,
											"end": 6891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6891,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 6524,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 6524,
											"end": 6891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6897,
											"end": 7387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 6897,
											"end": 7387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 643,
											"end": 666,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 643,
											"end": 666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 643,
											"end": 666,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 643,
											"end": 666,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 643,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 643,
											"end": 666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 643,
											"end": 666,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 643,
											"end": 666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 643,
											"end": 666,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 643,
											"end": 666,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 643,
											"end": 666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 643,
											"end": 666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 643,
											"end": 666,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 643,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 643,
											"end": 666,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 643,
											"end": 666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 643,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 643,
											"end": 666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 605,
											"end": 636,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 605,
											"end": 636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 605,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 605,
											"end": 636,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 605,
											"end": 636,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 605,
											"end": 636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 605,
											"end": 636,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2519,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2398,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2398,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2398,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2519,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2398,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2398,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2519,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2398,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2398,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 838,
											"end": 866,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 838,
											"end": 866,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 838,
											"end": 866,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 838,
											"end": 866,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 905,
											"end": 933,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 905,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 905,
											"end": 933,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 905,
											"end": 933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 905,
											"end": 933,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4150,
											"end": 5358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4150,
											"end": 5358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8584,
											"end": 8759,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 8584,
											"end": 8759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8584,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 8584,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 8584,
											"end": 8759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 872,
											"end": 898,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 872,
											"end": 898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 872,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 872,
											"end": 898,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 872,
											"end": 898,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 872,
											"end": 898,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 872,
											"end": 898,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 3250,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2525,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2525,
											"end": 3250,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2525,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2525,
											"end": 3250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 3250,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2525,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2525,
											"end": 3250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2279,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 728,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 792,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 792,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3711,
											"end": 3736,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3711,
											"end": 3736,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3711,
											"end": 3736,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3769,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3779,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3779,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3779,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3684,
											"end": 3702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 728,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3537,
											"end": 3785,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 939,
											"end": 965,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 939,
											"end": 965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 939,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 939,
											"end": 965,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 939,
											"end": 965,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 939,
											"end": 965,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 965,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7709,
											"end": 7808,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7709,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7709,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 7709,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 7709,
											"end": 7808,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7709,
											"end": 7808,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7709,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 7709,
											"end": 7808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7709,
											"end": 7808,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 7709,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7709,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 7709,
											"end": 7808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5364,
											"end": 6518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5364,
											"end": 6518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 672,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 672,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 672,
											"end": 690,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 690,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 672,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 672,
											"end": 690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 672,
											"end": 690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 672,
											"end": 690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 672,
											"end": 690,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 696,
											"end": 722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 7393,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10010,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10002,
											"end": 10010,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10002,
											"end": 10010,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10014,
											"end": 10024,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10024,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 9994,
											"end": 10072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7473,
											"end": 7490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 7473,
											"end": 7488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 7473,
											"end": 7490,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7473,
											"end": 7490,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 7473,
											"end": 7490,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7500,
											"end": 7521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7533,
											"end": 7537,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 7524,
											"end": 7538,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7524,
											"end": 7538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7524,
											"end": 7538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7552,
											"end": 7566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7552,
											"end": 7566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7552,
											"end": 7566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7552,
											"end": 7566,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7552,
											"end": 7566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7548,
											"end": 7658,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7548,
											"end": 7658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 7548,
											"end": 7658,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7636,
											"end": 7647,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7618,
											"end": 7633,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7633,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7600,
											"end": 7615,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7600,
											"end": 7633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7600,
											"end": 7633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7600,
											"end": 7633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7600,
											"end": 7647,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7647,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7600,
											"end": 7647,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7647,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7600,
											"end": 7647,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7582,
											"end": 7597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7582,
											"end": 7647,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7548,
											"end": 7658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 7548,
											"end": 7658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7667,
											"end": 7682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7667,
											"end": 7696,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7393,
											"end": 7703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3341,
											"end": 3348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3377,
											"end": 3384,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3384,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3360,
											"end": 3394,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3393,
											"end": 3394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3386,
											"end": 3394,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3394,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3360,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3430,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3430,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3415,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3404,
											"end": 3876,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3474,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3463,
											"end": 3474,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3446,
											"end": 3484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3476,
											"end": 3484,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3484,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3446,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3528,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3515,
											"end": 3528,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3498,
											"end": 3582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3582,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3569,
											"end": 3582,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3565,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3552,
											"end": 3565,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3549,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3538,
											"end": 3549,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3538,
											"end": 3565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3538,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3565,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3538,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3537,
											"end": 3582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3537,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3582,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3537,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3530,
											"end": 3582,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3582,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3498,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3644,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3631,
											"end": 3644,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3627,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3604,
											"end": 3615,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3604,
											"end": 3615,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3604,
											"end": 3627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3876,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3404,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3703,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3690,
											"end": 3703,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3703,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3675,
											"end": 3713,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3712,
											"end": 3713,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3705,
											"end": 3713,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3713,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3675,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3744,
											"end": 3757,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3744,
											"end": 3757,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3731,
											"end": 3740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3731,
											"end": 3757,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3727,
											"end": 3807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3794,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3794,
											"end": 3807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3777,
											"end": 3790,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3774,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3767,
											"end": 3790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3807,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3727,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 3865,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3852,
											"end": 3865,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3839,
											"end": 3848,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3836,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3829,
											"end": 3848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3876,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3404,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7910,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7920,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7944,
											"end": 7952,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7953,
											"end": 7957,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 7944,
											"end": 7958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8006,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8015,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8044,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8033,
											"end": 8055,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5588,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5589,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5625,
											"end": 5627,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5605,
											"end": 5623,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5605,
											"end": 5623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5605,
											"end": 5623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5598,
											"end": 5628,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDA5D1A191C985DCE881B9BDD0819DBDBD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5685,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5384,
											"end": 5726,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8099,
											"end": 8103,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 8088,
											"end": 8104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8104,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8088,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8179,
											"end": 8183,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8194,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8179,
											"end": 8194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8194,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8176,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8148,
											"end": 8152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8168,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8148,
											"end": 8168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8168,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8134,
											"end": 8145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8145,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 8134,
											"end": 8168,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8134,
											"end": 8168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8168,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 8134,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8133,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 8133,
											"end": 8176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8133,
											"end": 8176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8133,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 8133,
											"end": 8176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8133,
											"end": 8176,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 8133,
											"end": 8176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8133,
											"end": 8194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 8133,
											"end": 8194,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8133,
											"end": 8194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8133,
											"end": 8194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 8133,
											"end": 8194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8133,
											"end": 8194,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 8133,
											"end": 8194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8208,
											"end": 8220,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8220,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8204,
											"end": 8330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 8204,
											"end": 8330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8236,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 8253,
											"end": 8260,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8262,
											"end": 8270,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8236,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8236,
											"end": 8271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8236,
											"end": 8271,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 8236,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8301,
											"end": 8308,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 8310,
											"end": 8318,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8319,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 8204,
											"end": 8330,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 8204,
											"end": 8330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8343,
											"end": 8354,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8343,
											"end": 8354,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 8339,
											"end": 8454,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8385,
											"end": 8392,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8392,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 8370,
											"end": 8392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 8370,
											"end": 8392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8392,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 8370,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8392,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8406,
											"end": 8416,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8416,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8406,
											"end": 8416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8416,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8416,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8425,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 8406,
											"end": 8425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8426,
											"end": 8433,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8426,
											"end": 8433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8435,
											"end": 8442,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8435,
											"end": 8442,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8406,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 8406,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8339,
											"end": 8454,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 8339,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8496,
											"end": 8516,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8496,
											"end": 8516,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8496,
											"end": 8516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8496,
											"end": 8516,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8482,
											"end": 8493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8482,
											"end": 8493,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8524,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8520,
											"end": 8524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8482,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8482,
											"end": 8516,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8482,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8482,
											"end": 8516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8482,
											"end": 8516,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8482,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 8481,
											"end": 8524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 8481,
											"end": 8524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8524,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 8481,
											"end": 8524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8463,
											"end": 8478,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8463,
											"end": 8478,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8463,
											"end": 8478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8463,
											"end": 8524,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8561,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8557,
											"end": 8561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "PUSH",
											"source": 6,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8571,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 8578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 8578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8765,
											"end": 9600,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 8765,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8816,
											"end": 8837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8840,
											"end": 8848,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8849,
											"end": 8853,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 8840,
											"end": 8854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 8854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8816,
											"end": 8854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8816,
											"end": 8854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8891,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8906,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8868,
											"end": 8883,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 8868,
											"end": 8906,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8864,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 8864,
											"end": 8939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8922,
											"end": 8929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8765,
											"end": 9600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8765,
											"end": 9600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8864,
											"end": 8939,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 8864,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 8980,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 8980,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8948,
											"end": 8967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8948,
											"end": 8967,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8970,
											"end": 8980,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 8980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 8990,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 8970,
											"end": 8990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9003,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 8970,
											"end": 9005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8970,
											"end": 9005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 8970,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8948,
											"end": 9005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8948,
											"end": 9005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9019,
											"end": 9030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9034,
											"end": 9035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9019,
											"end": 9035,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9015,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9015,
											"end": 9119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9073,
											"end": 9088,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9070,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9051,
											"end": 9070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9051,
											"end": 9088,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8765,
											"end": 9600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9015,
											"end": 9119,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9015,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9133,
											"end": 9147,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9133,
											"end": 9147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9133,
											"end": 9147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9133,
											"end": 9147,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9133,
											"end": 9147,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 9133,
											"end": 9147,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9128,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 9128,
											"end": 9243,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9177,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9163,
											"end": 9177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9184,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9163,
											"end": 9184,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9180,
											"end": 9184,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9163,
											"end": 9184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9184,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9184,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9232,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9213,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 9198,
											"end": 9232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9232,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9177,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9163,
											"end": 9177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 9198,
											"end": 9232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9232,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9217,
											"end": 9232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 9198,
											"end": 9232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9232,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 9198,
											"end": 9232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9232,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9128,
											"end": 9243,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 9128,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9256,
											"end": 9275,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9252,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 9252,
											"end": 9547,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9291,
											"end": 9315,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9318,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9337,
											"end": 9341,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9337,
											"end": 9356,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9337,
											"end": 9356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9337,
											"end": 9356,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9358,
											"end": 9373,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 9318,
											"end": 9336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 9318,
											"end": 9374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9318,
											"end": 9374,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9318,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9291,
											"end": 9374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9291,
											"end": 9374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9388,
											"end": 9407,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9449,
											"end": 9464,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 9449,
											"end": 9464,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9434,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9445,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9430,
											"end": 9445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9445,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9411,
											"end": 9427,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9411,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9411,
											"end": 9445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9411,
											"end": 9445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9411,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 9411,
											"end": 9445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9411,
											"end": 9445,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9411,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9410,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 9410,
											"end": 9464,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9410,
											"end": 9464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9410,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 9410,
											"end": 9464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9410,
											"end": 9464,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 9410,
											"end": 9464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9388,
											"end": 9464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9525,
											"end": 9536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 9388,
											"end": 9464,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9517,
											"end": 9521,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 9503,
											"end": 9521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 9502,
											"end": 9536,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 9502,
											"end": 9536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9536,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 9502,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9498,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9478,
											"end": 9498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9478,
											"end": 9536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9536,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9478,
											"end": 9536,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 9478,
											"end": 9536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9536,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9478,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9536,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9478,
											"end": 9536,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9252,
											"end": 9547,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 9252,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 9556,
											"end": 9575,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9556,
											"end": 9575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9556,
											"end": 9575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9556,
											"end": 9575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9556,
											"end": 9593,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8765,
											"end": 9600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6891,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 6524,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6584,
											"end": 6605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6608,
											"end": 6616,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6617,
											"end": 6621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 6608,
											"end": 6622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6670,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6670,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6656,
											"end": 6670,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6670,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6670,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6670,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6670,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6670,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6670,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6681,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6682,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6682,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6682,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6682,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6710,
											"end": 6721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6710,
											"end": 6721,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6756,
											"end": 6771,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6771,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6795,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6682,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6710,
											"end": 6721,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6785,
											"end": 6795,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6804,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 6785,
											"end": 6804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6710,
											"end": 6721,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6710,
											"end": 6721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6785,
											"end": 6825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6785,
											"end": 6825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6785,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6840,
											"end": 6884,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6840,
											"end": 6884,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6870,
											"end": 6874,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6870,
											"end": 6874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6858,
											"end": 6868,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6858,
											"end": 6868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6840,
											"end": 6884,
											"name": "PUSH",
											"source": 6,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 6840,
											"end": 6884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 6884,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6840,
											"end": 6884,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6840,
											"end": 6884,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6840,
											"end": 6884,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6840,
											"end": 6884,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6840,
											"end": 6884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6840,
											"end": 6884,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10010,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10002,
											"end": 10010,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10002,
											"end": 10010,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10014,
											"end": 10024,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10024,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 9994,
											"end": 10072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 7032,
											"end": 7043,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 7032,
											"end": 7053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7046,
											"end": 7053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "278D00"
										},
										{
											"begin": 7032,
											"end": 7053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7032,
											"end": 7053,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7053,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 7032,
											"end": 7053,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7014,
											"end": 7029,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7014,
											"end": 7053,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7344,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 7010,
											"end": 7344,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7087,
											"end": 7091,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7087,
											"end": 7091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7091,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 7069,
											"end": 7100,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7069,
											"end": 7100,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7069,
											"end": 7100,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7100,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7069,
											"end": 7100,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7069,
											"end": 7100,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6873,
											"end": 6875,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6855,
											"end": 6876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6876,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6912,
											"end": 6913,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6892,
											"end": 6910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6892,
											"end": 6910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6892,
											"end": 6910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "161D5CD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6945,
											"end": 6947,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6948,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6923,
											"end": 6957,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6989,
											"end": 6991,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6671,
											"end": 6998,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7069,
											"end": 7100,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 7069,
											"end": 7100,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7131,
											"end": 7139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7131,
											"end": 7146,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7160,
											"end": 7334,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7160,
											"end": 7334,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7188,
											"end": 7194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7182,
											"end": 7185,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7182,
											"end": 7194,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7334,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 7160,
											"end": 7334,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7221,
											"end": 7242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7245,
											"end": 7253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7254,
											"end": 7257,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 7245,
											"end": 7258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7245,
											"end": 7258,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7245,
											"end": 7258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7245,
											"end": 7258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7294,
											"end": 7304,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7294,
											"end": 7304,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7258,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7294,
											"end": 7304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7294,
											"end": 7304,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7294,
											"end": 7304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7304,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7304,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7276,
											"end": 7319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 7276,
											"end": 7319,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7276,
											"end": 7319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7319,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7276,
											"end": 7319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7276,
											"end": 7319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7276,
											"end": 7319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7276,
											"end": 7319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7276,
											"end": 7319,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7187,
											"end": 7208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7244,
											"end": 7246,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 7224,
											"end": 7242,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7224,
											"end": 7242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3837B7B6173A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7263,
											"end": 7281,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7263,
											"end": 7281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7296,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7331,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7313,
											"end": 7331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7003,
											"end": 7337,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7319,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 7276,
											"end": 7319,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7196,
											"end": 7201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7196,
											"end": 7201,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 7160,
											"end": 7334,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7334,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 7160,
											"end": 7334,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7334,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 7010,
											"end": 7344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7353,
											"end": 7380,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7353,
											"end": 7380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7353,
											"end": 7368,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7368,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 7353,
											"end": 7368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7353,
											"end": 7380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7373,
											"end": 7379,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7373,
											"end": 7379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7353,
											"end": 7380,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 7353,
											"end": 7380,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 7387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 7387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2519,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2398,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2460,
											"end": 2467,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2486,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10010,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10002,
											"end": 10010,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10002,
											"end": 10010,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10014,
											"end": 10024,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10024,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 9994,
											"end": 10072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 4360,
											"end": 4366,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4341,
											"end": 4367,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4367,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 4341,
											"end": 4367,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4392,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4377,
											"end": 4436,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4377,
											"end": 4436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4377,
											"end": 4436,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4408,
											"end": 4423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4408,
											"end": 4425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4408,
											"end": 4425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4467,
											"end": 4480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4467,
											"end": 4480,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4449,
											"end": 4464,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4449,
											"end": 4480,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4862,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4445,
											"end": 4862,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4500,
											"end": 4515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4519,
											"end": 4520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4496,
											"end": 4693,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4558,
											"end": 4571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4558,
											"end": 4571,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4540,
											"end": 4571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4540,
											"end": 4571,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4445,
											"end": 4862,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4496,
											"end": 4693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4614,
											"end": 4627,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4611,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4627,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4693,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4592,
											"end": 4693,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4665,
											"end": 4678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4665,
											"end": 4678,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4678,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4678,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4592,
											"end": 4693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4445,
											"end": 4862,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4862,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4445,
											"end": 4862,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4747,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4747,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4727,
											"end": 4784,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4784,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 4784,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4751,
											"end": 4766,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4751,
											"end": 4784,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4784,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4727,
											"end": 4784,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4852,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4723,
											"end": 4852,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4837,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4804,
											"end": 4837,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4804,
											"end": 4837,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4852,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4723,
											"end": 4852,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4909,
											"end": 4922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4909,
											"end": 4922,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4905,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4922,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4922,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4889,
											"end": 4963,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4889,
											"end": 4963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4889,
											"end": 4963,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4889,
											"end": 4963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4962,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 4943,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 4962,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 4962,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4889,
											"end": 4963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4889,
											"end": 4963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "PUSH",
											"source": 6,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
										},
										{
											"begin": 4973,
											"end": 5271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4973,
											"end": 5271,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "PUSH",
											"source": 6,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB1"
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "PUSH",
											"source": 6,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB2"
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "PUSH",
											"source": 6,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3"
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "PUSH",
											"source": 6,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB4"
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4973,
											"end": 5271,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "PUSH",
											"source": 6,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB5"
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5271,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5261,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5281,
											"end": 5352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5281,
											"end": 5352,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5341,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5311,
											"end": 5326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5341,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5341,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5341,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 5311,
											"end": 5341,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5311,
											"end": 5341,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5341,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 5311,
											"end": 5341,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5341,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5281,
											"end": 5352,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5281,
											"end": 5352,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4331,
											"end": 5358,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 5358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 5358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8584,
											"end": 8759,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 8584,
											"end": 8759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8645,
											"end": 8653,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8645,
											"end": 8660,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8642,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8670,
											"end": 8753,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 8670,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8698,
											"end": 8704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8695,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8704,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8753,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 8670,
											"end": 8753,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8738,
											"end": 8741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 8727,
											"end": 8742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8742,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8727,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8711,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8706,
											"end": 8711,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 8670,
											"end": 8753,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8753,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 8670,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8753,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8618,
											"end": 8759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8584,
											"end": 8759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 3250,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2525,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2649,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2641,
											"end": 2655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2703,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2703,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2689,
											"end": 2703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2703,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2689,
											"end": 2703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2703,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2703,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2689,
											"end": 2710,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2710,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2710,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2710,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2710,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2710,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2689,
											"end": 2710,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2710,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2655,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2818,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2798,
											"end": 2818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2831,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2798,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2798,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2798,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2869,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2884,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2865,
											"end": 2884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2884,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2847,
											"end": 2862,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2847,
											"end": 2884,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2847,
											"end": 2904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2847,
											"end": 2904,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2847,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2847,
											"end": 2904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2888,
											"end": 2904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 2904,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 2904,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2847,
											"end": 2904,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2847,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 3171,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2843,
											"end": 3171,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 2944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2966,
											"end": 2970,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 2985,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2966,
											"end": 2985,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 2985,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3002,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2947,
											"end": 3003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3003,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2947,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 3003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 3003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3036,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3093,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3078,
											"end": 3093,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3063,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3074,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3040,
											"end": 3074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3040,
											"end": 3074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3074,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3040,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3039,
											"end": 3093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3039,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3093,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3039,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3149,
											"end": 3160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3017,
											"end": 3093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3145,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3127,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3127,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3145,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3127,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3126,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3126,
											"end": 3160,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3126,
											"end": 3160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3126,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3126,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3126,
											"end": 3160,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3126,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3107,
											"end": 3160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3160,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3107,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3160,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3107,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3160,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 3171,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2843,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3243,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3228,
											"end": 3243,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3243,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3199,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3199,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3225,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3221,
											"end": 3225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3188,
											"end": 3217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3217,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3188,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3217,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3188,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3187,
											"end": 3225,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3187,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3225,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3187,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3187,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3187,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3243,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 3250,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2525,
											"end": 3250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2360,
											"end": 2376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2360,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2385,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2360,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2279,
											"end": 2392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2279,
											"end": 2392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7709,
											"end": 7808,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 7709,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10010,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10002,
											"end": 10010,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10002,
											"end": 10010,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10014,
											"end": 10024,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10024,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 9994,
											"end": 10072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 9994,
											"end": 10072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7781,
											"end": 7801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7801,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7709,
											"end": 7808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5446,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5501,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5502,
											"end": 5506,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5493,
											"end": 5507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5555,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5555,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5541,
											"end": 5555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5555,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5541,
											"end": 5555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5555,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5555,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5541,
											"end": 5564,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5564,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5564,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5564,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5564,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5564,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5564,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5541,
											"end": 5564,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5574,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5550,
											"end": 5554,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 5574,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5590,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5574,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5604,
											"end": 5615,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5604,
											"end": 5615,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5604,
											"end": 5619,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5600,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 5600,
											"end": 5877,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5635,
											"end": 5651,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5700,
											"end": 5704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5700,
											"end": 5715,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5700,
											"end": 5715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5700,
											"end": 5715,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5693,
											"end": 5697,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5689,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5669,
											"end": 5689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5689,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5659,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5666,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 5655,
											"end": 5689,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5655,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5689,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 5655,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5654,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5654,
											"end": 5697,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5654,
											"end": 5697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5654,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5654,
											"end": 5697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5654,
											"end": 5697,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5654,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5654,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 5654,
											"end": 5715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5654,
											"end": 5715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5654,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5654,
											"end": 5715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5654,
											"end": 5715,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 5654,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5635,
											"end": 5715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 5745,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5729,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 5729,
											"end": 5867,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5765,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 5782,
											"end": 5789,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5799,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5765,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5765,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5765,
											"end": 5800,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 5765,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5834,
											"end": 5841,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 5729,
											"end": 5867,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 5729,
											"end": 5867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5877,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5600,
											"end": 5877,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 5600,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5932,
											"end": 5943,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5932,
											"end": 5943,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5929,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5914,
											"end": 5929,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5929,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 5914,
											"end": 5943,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5914,
											"end": 5943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5943,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 5914,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5943,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5953,
											"end": 5967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5980,
											"end": 5997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5970,
											"end": 5977,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5970,
											"end": 5997,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5970,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 5970,
											"end": 6027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6020,
											"end": 6027,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5970,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 5970,
											"end": 6027,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5970,
											"end": 6027,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 5970,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6017,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5970,
											"end": 6027,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 5970,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5953,
											"end": 6027,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6041,
											"end": 6051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6041,
											"end": 6051,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6037,
											"end": 6396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6077,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6077,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7562,
											"end": 7594,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7562,
											"end": 7594,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7562,
											"end": 7594,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7595,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6108,
											"end": 6112,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7611,
											"end": 7629,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7611,
											"end": 7629,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7611,
											"end": 7629,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7604,
											"end": 7664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7698,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7680,
											"end": 7698,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 7707,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 7707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 7707,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6067,
											"end": 6077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6077,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6090,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 6067,
											"end": 6090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7517,
											"end": 7535,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7517,
											"end": 7535,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6067,
											"end": 6122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 6067,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6174,
											"end": 6184,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6174,
											"end": 6184,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 6140,
											"end": 6186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6174,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6174,
											"end": 6184,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6140,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6186,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 6140,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6136,
											"end": 6386,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6299,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6283,
											"end": 6299,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6273,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6273,
											"end": 6299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6273,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 6273,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6273,
											"end": 6299,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6273,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6263,
											"end": 6300,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6269,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6263,
											"end": 6300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6300,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6263,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6262,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6262,
											"end": 6311,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6262,
											"end": 6311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6262,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6262,
											"end": 6311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6262,
											"end": 6311,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6262,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6251,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6258,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6258,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6258,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6311,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6311,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6311,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6247,
											"end": 6311,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 6247,
											"end": 6311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6311,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6247,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6311,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6311,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6136,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6136,
											"end": 6386,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6136,
											"end": 6386,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6136,
											"end": 6386,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6136,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6354,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6350,
											"end": 6361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 6350,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6136,
											"end": 6386,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6136,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6462,
											"end": 6466,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6462,
											"end": 6466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6424,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 6424,
											"end": 6458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6424,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6424,
											"end": 6458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6424,
											"end": 6458,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 6424,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6423,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6423,
											"end": 6466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6423,
											"end": 6466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6423,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6423,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6423,
											"end": 6466,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6423,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6405,
											"end": 6420,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6405,
											"end": 6420,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6405,
											"end": 6420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6405,
											"end": 6466,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6502,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6498,
											"end": 6502,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "PUSH",
											"source": 6,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 6518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 6518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9954,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 9606,
											"end": 9954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9708,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9704,
											"end": 9708,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9708,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9681,
											"end": 9701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9701,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9704,
											"end": 9708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9708,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9708,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9708,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9718,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 9704,
											"end": 9718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9727,
											"end": 9731,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 9727,
											"end": 9731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9704,
											"end": 9733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 9704,
											"end": 9733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 9704,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9681,
											"end": 9733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9747,
											"end": 9763,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9763,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9743,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 9743,
											"end": 9948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9793,
											"end": 9805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9783,
											"end": 9790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9783,
											"end": 9805,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9938,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 9779,
											"end": 9938,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9829,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9825,
											"end": 9829,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9829,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9857,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9825,
											"end": 9857,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9825,
											"end": 9857,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9857,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9825,
											"end": 9829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9829,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9838,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 9825,
											"end": 9838,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 9825,
											"end": 9857,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9839,
											"end": 9842,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9839,
											"end": 9842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 9856,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 9856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9857,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 9825,
											"end": 9857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9938,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 9779,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9900,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9896,
											"end": 9900,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9900,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9923,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9896,
											"end": 9923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9896,
											"end": 9923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9923,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9896,
											"end": 9900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9900,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9909,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 9896,
											"end": 9909,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 9896,
											"end": 9923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9913,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9910,
											"end": 9913,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9915,
											"end": 9922,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9915,
											"end": 9922,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9923,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 9896,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9938,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 9779,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9671,
											"end": 9954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 9954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9574,
											"end": 9730,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9574,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9648,
											"end": 9655,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9698,
											"end": 9720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 9702,
											"end": 9705,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9714,
											"end": 9719,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9698,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 9698,
											"end": 9720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9698,
											"end": 9720,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 9698,
											"end": 9720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 9721,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9730,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9574,
											"end": 9730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3888,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 3980,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3972,
											"end": 3987,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3955,
											"end": 3969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4138,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 3997,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4031,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4138,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3997,
											"end": 4138,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4091,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4062,
											"end": 4091,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4070,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4071,
											"end": 4074,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4062,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4081,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4062,
											"end": 4081,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4091,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 4054,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4054,
											"end": 4127,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4054,
											"end": 4127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4127,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7920,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4054,
											"end": 4127,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 7923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7959,
											"end": 7961,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7939,
											"end": 7957,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7939,
											"end": 7957,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7939,
											"end": 7957,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 7962,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7998,
											"end": 8031,
											"name": "PUSH",
											"source": 7,
											"value": "5875736447656E65736973506F6F6C3A206578697374696E6720706F6F6C3F00"
										},
										{
											"begin": 7978,
											"end": 7996,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7978,
											"end": 7996,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7978,
											"end": 7996,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7971,
											"end": 8032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7718,
											"end": 8073,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4127,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 4054,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4038,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4033,
											"end": 4038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 3997,
											"end": 4138,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9232,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 9117,
											"end": 9232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9180,
											"end": 9187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9206,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 9214,
											"end": 9217,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4556,
											"end": 4574,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4556,
											"end": 4574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4474,
											"end": 4581,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9004,
											"end": 9027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9004,
											"end": 9027,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8974,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 5041,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 4923,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 4997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5016,
											"end": 5019,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5016,
											"end": 5027,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5028,
											"end": 5033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5016,
											"end": 5034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 5041,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 5041,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 5041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 5041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 5041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 196,
											"end": 422,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 196,
											"end": 422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 369,
											"end": 392,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 196,
											"end": 422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1363,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1017,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1099,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1148,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 1143,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1144,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1149,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1166,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 1114,
											"end": 1166,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1163,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1166,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 1114,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1327,
											"end": 1329,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1312,
											"end": 1330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1331,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1331,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1017,
											"end": 1363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1507,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 1368,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1451,
											"end": 1482,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1482,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1483,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1483,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 1431,
											"end": 1501,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1501,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 1431,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 2050,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1512,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1617,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1625,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1660,
											"end": 1669,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1658,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1670,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1643,
											"end": 1675,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1692,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 1640,
											"end": 1692,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1690,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1692,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 1640,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1737,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 1779,
											"end": 1784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 1746,
											"end": 1785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1785,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 1746,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1882,
											"end": 1884,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1964,
											"end": 1966,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1967,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 1977,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 2018,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 1977,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2037,
											"end": 2044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 2050,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 2050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 2050,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 2050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 2050,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 2050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2258,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2055,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2219,
											"end": 2251,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2251,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2251,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2201,
											"end": 2252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2201,
											"end": 2252,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2189,
											"end": 2191,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2381,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 2263,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2354,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2342,
											"end": 2355,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2356,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2325,
											"end": 2357,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 2315,
											"end": 2375,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2371,
											"end": 2372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2373,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 3152,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2386,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 2565,
											"end": 2574,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2556,
											"end": 2563,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2552,
											"end": 2575,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2581,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2598,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 2545,
											"end": 2598,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2594,
											"end": 2595,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2598,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 2545,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2740,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2741,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2742,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 2710,
											"end": 2742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 2751,
											"end": 2792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2792,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 2751,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2818,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2870,
											"end": 2872,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 2874,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2883,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 2842,
											"end": 2874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2883,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 2883,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2883,
											"end": 2913,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 2883,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 3152,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 3152,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 3152,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 3152,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2932,
											"end": 2939,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2932,
											"end": 2939,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3014,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3016,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3016,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3115,
											"end": 3118,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3087,
											"end": 3120,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3087,
											"end": 3120,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 3152,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2386,
											"end": 3152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3532,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3157,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3231,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3288,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3274,
											"end": 3283,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3272,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3284,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3289,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3306,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 3254,
											"end": 3306,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3302,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3304,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3306,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 3254,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3431,
											"end": 3449,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3431,
											"end": 3449,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 3459,
											"end": 3500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3532,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3532,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3532,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 4045,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 3790,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3904,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3890,
											"end": 3899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3881,
											"end": 3888,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3900,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3922,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 3870,
											"end": 3922,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3918,
											"end": 3919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3920,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3922,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 3870,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3957,
											"end": 3966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 4009,
											"end": 4014,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 3976,
											"end": 4015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4679,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 4272,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4513,
											"end": 4515,
											"name": "PUSH",
											"source": 7,
											"value": "2B"
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4516,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4552,
											"end": 4586,
											"name": "PUSH",
											"source": 7,
											"value": "5875736447656E65736973506F6F6C3A2063616C6C6572206973206E6F742074"
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4587,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34329037B832B930BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4618,
											"end": 4620,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4603,
											"end": 4621,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4621,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4637,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4669,
											"end": 4672,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4654,
											"end": 4673,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4673,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4684,
											"end": 4811,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 4684,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4755,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4740,
											"end": 4743,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4736,
											"end": 4756,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4733,
											"end": 4734,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4757,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4780,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4773,
											"end": 4774,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4766,
											"end": 4781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4804,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4797,
											"end": 4798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4805,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4943,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 4816,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4877,
											"end": 4887,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4872,
											"end": 4875,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4868,
											"end": 4888,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4865,
											"end": 4866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4912,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4898,
											"end": 4913,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4932,
											"end": 4936,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4929,
											"end": 4930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 4937,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4948,
											"end": 5076,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 4948,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5036,
											"end": 5047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5036,
											"end": 5047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5036,
											"end": 5047,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5033,
											"end": 5070,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5033,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5033,
											"end": 5070,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5050,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5050,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 5050,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5206,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 5081,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5155,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5155,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5167,
											"end": 5177,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5167,
											"end": 5177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5167,
											"end": 5177,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5200,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5164,
											"end": 5200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 5180,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5379,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5211,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5324,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5347,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5326,
											"end": 5348,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5326,
											"end": 5348,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5349,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5302,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5302,
											"end": 5373,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 5353,
											"end": 5371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5731,
											"end": 5948,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 5731,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 5772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 5787,
											"end": 5919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5851,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5836,
											"end": 5839,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5832,
											"end": 5852,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5822,
											"end": 5853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5876,
											"end": 5880,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5873,
											"end": 5874,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5866,
											"end": 5881,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5904,
											"end": 5908,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5901,
											"end": 5902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 5909,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5919,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 5787,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5933,
											"end": 5942,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5933,
											"end": 5942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5731,
											"end": 5948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5953,
											"end": 6227,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5953,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6145,
											"end": 6177,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6177,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6177,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6178,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6209,
											"end": 6211,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6194,
											"end": 6212,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6194,
											"end": 6212,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6187,
											"end": 6221,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6115,
											"end": 6117,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5953,
											"end": 6227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6232,
											"end": 6477,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6232,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6340,
											"end": 6349,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6331,
											"end": 6338,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6350,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6323,
											"end": 6355,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6372,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 6320,
											"end": 6372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6365,
											"end": 6366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6370,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6372,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 6320,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6400,
											"end": 6409,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6394,
											"end": 6410,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6441,
											"end": 6446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 6419,
											"end": 6447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6482,
											"end": 6666,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 6482,
											"end": 6666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6607,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6593,
											"end": 6602,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6591,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6580,
											"end": 6603,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6576,
											"end": 6608,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6625,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 6573,
											"end": 6625,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6621,
											"end": 6622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6611,
											"end": 6623,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6625,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 6573,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6644,
											"end": 6660,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6644,
											"end": 6660,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6482,
											"end": 6666,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6482,
											"end": 6666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"contracts/staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Xusd()": "f25bb865",
							"XusdPerSecond()": "628b409f",
							"add(uint256,address,bool,uint256,uint256)": "62e006c7",
							"comissionPercent()": "5715f8f9",
							"comissionToken(uint256)": "5b142956",
							"comissionTokensCount()": "92fae48d",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getGeneratedReward(uint256,uint256)": "231f0c6a",
							"governanceRecoverUnsupported(address,uint256,address)": "54575af4",
							"massUpdatePools()": "630b5ba1",
							"operator()": "570ca735",
							"pendingXusd(uint256,address)": "7805583c",
							"poolEndTime()": "6e271dd5",
							"poolInfo(uint256)": "1526fe27",
							"poolStartTime()": "5f96dc11",
							"runningTime()": "943f013d",
							"set(uint256,uint256)": "1ab06ee5",
							"setOperator(address)": "b3ab15fb",
							"totalAllocPoint()": "17caf6f1",
							"totalRewards()": "0e15561a",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Xusd\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"comissionTokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_comissionPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_runningTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Xusd\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"XusdPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_lastRewardTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDeposit\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comissionPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"comissionToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comissionTokensCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTime\",\"type\":\"uint256\"}],\"name\":\"getGeneratedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"governanceRecoverUnsupported\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingXusd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accXusdPerShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStarted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"maxDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"runningTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking.sol\":\"XusdGenesisRewardPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"contracts/staking.sol\":{\"keccak256\":\"0x7a6e6741722b9dafcb2a5e0116beec5622699a86d6a3ab9cca5b0f44ec2fb0af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42df2f860fe04dbf3f7ad4ddd38d8b89b0253caa0c6159545003485dffb0dbda\",\"dweb:/ipfs/QmQGWN5agYhyZDvmZsU5fdJNy8pjgH5hhGUqkphhiBUryb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1428,
								"contract": "contracts/staking.sol:XusdGenesisRewardPool",
								"label": "_comissionTokens",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(AddressSet)1111_storage"
							},
							{
								"astId": 1430,
								"contract": "contracts/staking.sol:XusdGenesisRewardPool",
								"label": "comissionPercent",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1432,
								"contract": "contracts/staking.sol:XusdGenesisRewardPool",
								"label": "operator",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1435,
								"contract": "contracts/staking.sol:XusdGenesisRewardPool",
								"label": "Xusd",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 1439,
								"contract": "contracts/staking.sol:XusdGenesisRewardPool",
								"label": "poolInfo",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_struct(PoolInfo)1425_storage)dyn_storage"
							},
							{
								"astId": 1446,
								"contract": "contracts/staking.sol:XusdGenesisRewardPool",
								"label": "userInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1411_storage))"
							},
							{
								"astId": 1449,
								"contract": "contracts/staking.sol:XusdGenesisRewardPool",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1451,
								"contract": "contracts/staking.sol:XusdGenesisRewardPool",
								"label": "poolStartTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1453,
								"contract": "contracts/staking.sol:XusdGenesisRewardPool",
								"label": "poolEndTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1455,
								"contract": "contracts/staking.sol:XusdGenesisRewardPool",
								"label": "XusdPerSecond",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1457,
								"contract": "contracts/staking.sol:XusdGenesisRewardPool",
								"label": "runningTime",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1459,
								"contract": "contracts/staking.sol:XusdGenesisRewardPool",
								"label": "totalRewards",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PoolInfo)1425_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1425_storage",
								"encoding": "dynamic_array",
								"label": "struct XusdGenesisRewardPool.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)729": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1411_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct XusdGenesisRewardPool.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1411_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1411_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct XusdGenesisRewardPool.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1411_storage)"
							},
							"t_struct(AddressSet)1111_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1110,
										"contract": "contracts/staking.sol:XusdGenesisRewardPool",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)796_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(PoolInfo)1425_storage": {
								"encoding": "inplace",
								"label": "struct XusdGenesisRewardPool.PoolInfo",
								"members": [
									{
										"astId": 1414,
										"contract": "contracts/staking.sol:XusdGenesisRewardPool",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)729"
									},
									{
										"astId": 1416,
										"contract": "contracts/staking.sol:XusdGenesisRewardPool",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1418,
										"contract": "contracts/staking.sol:XusdGenesisRewardPool",
										"label": "lastRewardTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1420,
										"contract": "contracts/staking.sol:XusdGenesisRewardPool",
										"label": "accXusdPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1422,
										"contract": "contracts/staking.sol:XusdGenesisRewardPool",
										"label": "isStarted",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 1424,
										"contract": "contracts/staking.sol:XusdGenesisRewardPool",
										"label": "maxDeposit",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(Set)796_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 791,
										"contract": "contracts/staking.sol:XusdGenesisRewardPool",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 795,
										"contract": "contracts/staking.sol:XusdGenesisRewardPool",
										"label": "_positions",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserInfo)1411_storage": {
								"encoding": "inplace",
								"label": "struct XusdGenesisRewardPool.UserInfo",
								"members": [
									{
										"astId": 1408,
										"contract": "contracts/staking.sol:XusdGenesisRewardPool",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1410,
										"contract": "contracts/staking.sol:XusdGenesisRewardPool",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1398
						]
					},
					"id": 1399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "205:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 788,
								"nodeType": "StructuredDocumentation",
								"src": "231:1098:5",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 1398,
							"linearizedBaseContracts": [
								1398
							],
							"name": "EnumerableSet",
							"nameLocation": "1338:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 796,
									"members": [
										{
											"constant": false,
											"id": 791,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1862:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 796,
											"src": "1852:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 789,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 790,
												"nodeType": "ArrayTypeName",
												"src": "1852:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 795,
											"mutability": "mutable",
											"name": "_positions",
											"nameLocation": "2054:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 796,
											"src": "2020:44:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 794,
												"keyName": "value",
												"keyNameLocation": "2036:5:5",
												"keyType": {
													"id": 792,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2020:33:5",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1805:3:5",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "1798:273:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "2310:337:5",
										"statements": [
											{
												"condition": {
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2324:22:5",
													"subExpression": {
														"arguments": [
															{
																"id": 808,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "2335:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 809,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "2340:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 807,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "2325:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2325:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "2604:37:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2625:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 806,
															"id": 834,
															"nodeType": "Return",
															"src": "2618:12:5"
														}
													]
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "2320:321:5",
												"trueBody": {
													"id": 832,
													"nodeType": "Block",
													"src": "2348:250:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "2379:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 812,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "2362:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 815,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2366:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "2362:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2374:4:5",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2362:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2362:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 819,
															"nodeType": "ExpressionStatement",
															"src": "2362:23:5"
														},
														{
															"expression": {
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 820,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "2520:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2524:10:5",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 795,
																		"src": "2520:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 824,
																	"indexExpression": {
																		"id": 822,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "2535:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2520:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 825,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "2544:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2548:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "2544:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2556:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2544:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2520:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 829,
															"nodeType": "ExpressionStatement",
															"src": "2520:42:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 806,
															"id": 831,
															"nodeType": "Return",
															"src": "2576:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "2077:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2250:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2267:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2255:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 799,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 798,
														"name": "Set",
														"nameLocations": [
															"2255:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "2255:3:5"
													},
													"referencedDeclaration": 796,
													"src": "2255:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2280:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2272:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 801,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:32:5"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2304:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 804,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:6:5"
									},
									"scope": 1398,
									"src": "2241:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "2887:1296:5",
										"statements": [
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2999:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 921,
														"src": "2991:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 849,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2991:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 855,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 851,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "3010:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3014:10:5",
														"memberName": "_positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 795,
														"src": "3010:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 854,
													"indexExpression": {
														"id": 853,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "3025:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3010:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2991:40:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 856,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3046:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3058:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3046:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 919,
													"nodeType": "Block",
													"src": "4140:37:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4161:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 848,
															"id": 918,
															"nodeType": "Return",
															"src": "4154:12:5"
														}
													]
												},
												"id": 920,
												"nodeType": "IfStatement",
												"src": "3042:1135:5",
												"trueBody": {
													"id": 916,
													"nodeType": "Block",
													"src": "3061:1073:5",
													"statements": [
														{
															"assignments": [
																860
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 860,
																	"mutability": "mutable",
																	"name": "valueIndex",
																	"nameLocation": "3421:10:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 916,
																	"src": "3413:18:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 859,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3413:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 864,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 861,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "3434:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3445:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3434:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3413:33:5"
														},
														{
															"assignments": [
																866
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 866,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3468:9:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 916,
																	"src": "3460:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 865,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3460:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 872,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 867,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "3480:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3484:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "3480:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3492:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3480:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3501:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3480:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3460:42:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 873,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "3521:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 874,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "3535:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3521:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 900,
															"nodeType": "IfStatement",
															"src": "3517:378:5",
															"trueBody": {
																"id": 899,
																"nodeType": "Block",
																"src": "3546:349:5",
																"statements": [
																	{
																		"assignments": [
																			877
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 877,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3572:9:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 899,
																				"src": "3564:17:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 876,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3564:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 882,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 878,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 842,
																					"src": "3584:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 879,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3588:7:5",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 791,
																				"src": "3584:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 881,
																			"indexExpression": {
																				"id": 880,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 866,
																				"src": "3596:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3584:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3564:42:5"
																	},
																	{
																		"expression": {
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 883,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 842,
																						"src": "3705:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 886,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3709:7:5",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 791,
																					"src": "3705:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 887,
																				"indexExpression": {
																					"id": 885,
																					"name": "valueIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 860,
																					"src": "3717:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3705:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 888,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 877,
																				"src": "3731:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3705:35:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 890,
																		"nodeType": "ExpressionStatement",
																		"src": "3705:35:5"
																	},
																	{
																		"expression": {
																			"id": 897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 891,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 842,
																						"src": "3844:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 894,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3848:10:5",
																					"memberName": "_positions",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 795,
																					"src": "3844:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 895,
																				"indexExpression": {
																					"id": 893,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 877,
																					"src": "3859:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3844:25:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 896,
																				"name": "position",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "3872:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3844:36:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 898,
																		"nodeType": "ExpressionStatement",
																		"src": "3844:36:5"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 901,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "3973:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 904,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3977:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "3973:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3985:3:5",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3973:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3973:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 907,
															"nodeType": "ExpressionStatement",
															"src": "3973:17:5"
														},
														{
															"expression": {
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4069:28:5",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 908,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "4076:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4080:10:5",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 795,
																		"src": "4076:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 911,
																	"indexExpression": {
																		"id": 910,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "4091:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4076:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 913,
															"nodeType": "ExpressionStatement",
															"src": "4069:28:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4119:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 848,
															"id": 915,
															"nodeType": "Return",
															"src": "4112:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "2653:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2824:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2844:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2832:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 840,
														"name": "Set",
														"nameLocations": [
															"2832:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "2832:3:5"
													},
													"referencedDeclaration": 796,
													"src": "2832:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2857:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2849:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 843,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:32:5"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2881:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2881:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:6:5"
									},
									"scope": 1398,
									"src": "2815:1368:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "4343:50:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 933,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "4360:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4364:10:5",
															"memberName": "_positions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 795,
															"src": "4360:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 936,
														"indexExpression": {
															"id": 935,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "4375:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4360:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4385:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4360:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 932,
												"id": 939,
												"nodeType": "Return",
												"src": "4353:33:5"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "4189:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4273:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4295:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "4283:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "Set",
														"nameLocations": [
															"4283:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "4283:3:5"
													},
													"referencedDeclaration": 796,
													"src": "4283:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4308:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "4300:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 927,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:32:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "4337:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 930,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4337:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:6:5"
									},
									"scope": 1398,
									"src": "4264:129:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "4539:42:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 950,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "4556:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4560:7:5",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 791,
														"src": "4556:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4568:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4556:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 949,
												"id": 953,
												"nodeType": "Return",
												"src": "4549:25:5"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "4399:70:5",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4483:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4503:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4491:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 944,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 943,
														"name": "Set",
														"nameLocations": [
															"4491:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "4491:3:5"
													},
													"referencedDeclaration": 796,
													"src": "4491:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:17:5"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4530:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:9:5"
									},
									"scope": 1398,
									"src": "4474:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "4999:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 966,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "5016:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5020:7:5",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 791,
														"src": "5016:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 969,
													"indexExpression": {
														"id": 968,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "5028:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5016:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 965,
												"id": 970,
												"nodeType": "Return",
												"src": "5009:25:5"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "4587:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4932:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4948:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4936:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 958,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 957,
														"name": "Set",
														"nameLocations": [
															"4936:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "4936:3:5"
													},
													"referencedDeclaration": 796,
													"src": "4936:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4961:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4953:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:32:5"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4990:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 963,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:9:5"
									},
									"scope": 1398,
									"src": "4923:118:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "5655:35:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 982,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "5672:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5676:7:5",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 791,
													"src": "5672:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 981,
												"id": 984,
												"nodeType": "Return",
												"src": "5665:18:5"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "5047:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5590:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5610:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5598:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "Set",
														"nameLocations": [
															"5598:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "5598:3:5"
													},
													"referencedDeclaration": 796,
													"src": "5598:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:17:5"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5637:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 978,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5637:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 979,
													"nodeType": "ArrayTypeName",
													"src": "5637:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:18:5"
									},
									"scope": 1398,
									"src": "5581:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 990,
									"members": [
										{
											"constant": false,
											"id": 989,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5747:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 990,
											"src": "5743:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 988,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 987,
													"name": "Set",
													"nameLocations": [
														"5743:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 796,
													"src": "5743:3:5"
												},
												"referencedDeclaration": 796,
												"src": "5743:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5722:10:5",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "5715:45:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "6006:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1002,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "6028:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6032:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "6028:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1004,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "6040:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1001,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "6023:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1006,
												"nodeType": "Return",
												"src": "6016:30:5"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "5766:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5939:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5962:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5943:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 993,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 992,
														"name": "Bytes32Set",
														"nameLocations": [
															"5943:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "5943:10:5"
													},
													"referencedDeclaration": 990,
													"src": "5943:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5967:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 995,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:39:5"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "6000:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6000:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:6:5"
									},
									"scope": 1398,
									"src": "5930:123:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "6300:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1020,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "6325:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6329:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "6325:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1022,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "6337:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1019,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "6317:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1024,
												"nodeType": "Return",
												"src": "6310:33:5"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "6059:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6230:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6256:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "6237:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1011,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1010,
														"name": "Bytes32Set",
														"nameLocations": [
															"6237:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "6237:10:5"
													},
													"referencedDeclaration": 990,
													"src": "6237:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6269:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "6261:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1013,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:39:5"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "6294:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6294:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:6:5"
									},
									"scope": 1398,
									"src": "6221:129:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "6517:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1038,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "6544:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6548:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "6544:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1040,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "6556:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1037,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "6534:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1042,
												"nodeType": "Return",
												"src": "6527:35:5"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "6356:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6440:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6468:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "6449:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1029,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1028,
														"name": "Bytes32Set",
														"nameLocations": [
															"6449:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "6449:10:5"
													},
													"referencedDeclaration": 990,
													"src": "6449:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6481:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "6473:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:39:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "6511:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6511:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6510:6:5"
									},
									"scope": 1398,
									"src": "6431:138:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "6722:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1054,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1048,
																"src": "6747:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6751:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "6747:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1053,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "6739:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1052,
												"id": 1057,
												"nodeType": "Return",
												"src": "6732:26:5"
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "6575:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6659:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6685:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "6666:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1047,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1046,
														"name": "Bytes32Set",
														"nameLocations": [
															"6666:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "6666:10:5"
													},
													"referencedDeclaration": 990,
													"src": "6666:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:24:5"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "6713:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:9:5"
									},
									"scope": 1398,
									"src": "6650:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "7190:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1071,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "7211:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7215:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "7211:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1073,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "7223:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1070,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "7207:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1069,
												"id": 1075,
												"nodeType": "Return",
												"src": "7200:29:5"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "6771:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7116:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7138:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "7119:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1062,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1061,
														"name": "Bytes32Set",
														"nameLocations": [
															"7119:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "7119:10:5"
													},
													"referencedDeclaration": 990,
													"src": "7119:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7151:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "7143:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7118:39:5"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "7181:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7180:9:5"
									},
									"scope": 1398,
									"src": "7107:129:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "7857:219:5",
										"statements": [
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7884:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "7867:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1089,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7867:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1090,
															"nodeType": "ArrayTypeName",
															"src": "7867:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1093,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "7900:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7904:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "7900:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1092,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "7892:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7867:44:5"
											},
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7938:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "7921:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1099,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7921:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1100,
															"nodeType": "ArrayTypeName",
															"src": "7921:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"nodeType": "VariableDeclarationStatement",
												"src": "7921:23:5"
											},
											{
												"AST": {
													"nativeSrc": "8007:39:5",
													"nodeType": "YulBlock",
													"src": "8007:39:5",
													"statements": [
														{
															"nativeSrc": "8021:15:5",
															"nodeType": "YulAssignment",
															"src": "8021:15:5",
															"value": {
																"name": "store",
																"nativeSrc": "8031:5:5",
																"nodeType": "YulIdentifier",
																"src": "8031:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8021:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1101,
														"isOffset": false,
														"isSlot": false,
														"src": "8021:6:5",
														"valueSize": 1
													},
													{
														"declaration": 1091,
														"isOffset": false,
														"isSlot": false,
														"src": "8031:5:5",
														"valueSize": 1
													}
												],
												"id": 1103,
												"nodeType": "InlineAssembly",
												"src": "7998:48:5"
											},
											{
												"expression": {
													"id": 1104,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1101,
													"src": "8063:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1086,
												"id": 1105,
												"nodeType": "Return",
												"src": "8056:13:5"
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "7242:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7785:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7811:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "7792:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1080,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1079,
														"name": "Bytes32Set",
														"nameLocations": [
															"7792:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "7792:10:5"
													},
													"referencedDeclaration": 990,
													"src": "7792:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:24:5"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "7839:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1083,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7839:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1084,
													"nodeType": "ArrayTypeName",
													"src": "7839:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:18:5"
									},
									"scope": 1398,
									"src": "7776:300:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1111,
									"members": [
										{
											"constant": false,
											"id": 1110,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8133:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 1111,
											"src": "8129:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1109,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1108,
													"name": "Set",
													"nameLocations": [
														"8129:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 796,
													"src": "8129:3:5"
												},
												"referencedDeclaration": 796,
												"src": "8129:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8108:10:5",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "8101:45:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "8392:74:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1123,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "8414:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8418:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "8414:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1131,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "8450:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8442:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1129,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8442:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8442:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8434:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1127,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8434:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8434:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8426:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1125,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8426:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8426:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1122,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "8409:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8409:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1136,
												"nodeType": "Return",
												"src": "8402:57:5"
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "8152:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8325:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8348:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "8329:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1114,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1113,
														"name": "AddressSet",
														"nameLocations": [
															"8329:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "8329:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "8329:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8361:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "8353:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8353:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:39:5"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "8386:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8386:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8385:6:5"
									},
									"scope": 1398,
									"src": "8316:150:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "8713:77:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1150,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "8738:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8742:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "8738:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1158,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1144,
																					"src": "8774:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8766:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1156,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8766:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8766:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8758:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1154,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8758:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8758:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8750:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1152,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8750:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8750:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1149,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "8730:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8730:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1163,
												"nodeType": "Return",
												"src": "8723:60:5"
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "8472:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8643:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8669:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "8650:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1141,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1140,
														"name": "AddressSet",
														"nameLocations": [
															"8650:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "8650:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "8650:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8682:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "8674:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8649:39:5"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "8707:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8707:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8706:6:5"
									},
									"scope": 1398,
									"src": "8634:156:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "8957:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1177,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "8984:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8988:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "8984:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1185,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1171,
																					"src": "9020:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9012:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1183,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9012:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9012:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9004:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1181,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9004:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9004:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8996:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1179,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8996:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8996:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1176,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "8974:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8974:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1175,
												"id": 1190,
												"nodeType": "Return",
												"src": "8967:62:5"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "8796:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8880:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8908:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "8889:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1168,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1167,
														"name": "AddressSet",
														"nameLocations": [
															"8889:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "8889:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "8889:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8921:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "8913:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8913:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:39:5"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "8951:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:6:5"
									},
									"scope": 1398,
									"src": "8871:165:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "9189:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1202,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "9214:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9218:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "9214:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1201,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "9206:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9206:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1205,
												"nodeType": "Return",
												"src": "9199:26:5"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "9042:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9126:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9152:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "9133:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1195,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1194,
														"name": "AddressSet",
														"nameLocations": [
															"9133:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "9133:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "9133:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9132:24:5"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "9180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9179:9:5"
									},
									"scope": 1398,
									"src": "9117:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "9657:73:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1225,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1211,
																						"src": "9702:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1226,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9706:6:5",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1110,
																					"src": "9702:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$796_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1227,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1213,
																					"src": "9714:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$796_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1224,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "9698:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9698:22:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9690:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1222,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9690:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9690:31:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9682:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1220,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9682:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9682:40:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9674:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1218,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9674:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9674:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1217,
												"id": 1232,
												"nodeType": "Return",
												"src": "9667:56:5"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "9238:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9583:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9605:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9586:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1209,
														"name": "AddressSet",
														"nameLocations": [
															"9586:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "9586:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "9586:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9618:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9610:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9610:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9585:39:5"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9648:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9648:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9647:9:5"
									},
									"scope": 1398,
									"src": "9574:156:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "10351:219:5",
										"statements": [
											{
												"assignments": [
													1248
												],
												"declarations": [
													{
														"constant": false,
														"id": 1248,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10378:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "10361:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1246,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10361:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1247,
															"nodeType": "ArrayTypeName",
															"src": "10361:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1253,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1250,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "10394:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10398:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "10394:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1249,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "10386:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10386:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10361:44:5"
											},
											{
												"assignments": [
													1258
												],
												"declarations": [
													{
														"constant": false,
														"id": 1258,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10432:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "10415:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1256,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10415:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1257,
															"nodeType": "ArrayTypeName",
															"src": "10415:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1259,
												"nodeType": "VariableDeclarationStatement",
												"src": "10415:23:5"
											},
											{
												"AST": {
													"nativeSrc": "10501:39:5",
													"nodeType": "YulBlock",
													"src": "10501:39:5",
													"statements": [
														{
															"nativeSrc": "10515:15:5",
															"nodeType": "YulAssignment",
															"src": "10515:15:5",
															"value": {
																"name": "store",
																"nativeSrc": "10525:5:5",
																"nodeType": "YulIdentifier",
																"src": "10525:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10515:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10515:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1258,
														"isOffset": false,
														"isSlot": false,
														"src": "10515:6:5",
														"valueSize": 1
													},
													{
														"declaration": 1248,
														"isOffset": false,
														"isSlot": false,
														"src": "10525:5:5",
														"valueSize": 1
													}
												],
												"id": 1260,
												"nodeType": "InlineAssembly",
												"src": "10492:48:5"
											},
											{
												"expression": {
													"id": 1261,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1258,
													"src": "10557:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1243,
												"id": 1262,
												"nodeType": "Return",
												"src": "10550:13:5"
											}
										]
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "9736:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10279:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10305:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "10286:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1236,
														"name": "AddressSet",
														"nameLocations": [
															"10286:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "10286:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "10286:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10285:24:5"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "10333:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1240,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10333:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1241,
													"nodeType": "ArrayTypeName",
													"src": "10333:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10332:18:5"
									},
									"scope": 1398,
									"src": "10270:300:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1268,
									"members": [
										{
											"constant": false,
											"id": 1267,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10621:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 1268,
											"src": "10617:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1266,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1265,
													"name": "Set",
													"nameLocations": [
														"10617:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 796,
													"src": "10617:3:5"
												},
												"referencedDeclaration": 796,
												"src": "10617:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10599:7:5",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "10592:42:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "10877:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1280,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "10899:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10903:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "10899:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1284,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "10919:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10911:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1282,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10911:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10911:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1279,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "10894:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10894:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1287,
												"nodeType": "Return",
												"src": "10887:39:5"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "10640:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10813:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10833:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "10817:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1270,
														"name": "UintSet",
														"nameLocations": [
															"10817:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "10817:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "10817:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10846:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "10838:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10816:36:5"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "10871:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10871:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10870:6:5"
									},
									"scope": 1398,
									"src": "10804:129:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "11177:59:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1301,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "11202:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11206:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "11202:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1305,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "11222:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11214:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1303,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11214:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11214:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1300,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "11194:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11194:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1308,
												"nodeType": "Return",
												"src": "11187:42:5"
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "10939:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11110:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11133:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "11117:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1291,
														"name": "UintSet",
														"nameLocations": [
															"11117:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "11117:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "11117:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11146:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "11138:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11138:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11116:36:5"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "11171:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11171:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11170:6:5"
									},
									"scope": 1398,
									"src": "11101:135:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "11400:61:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1322,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "11427:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11431:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "11427:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1326,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "11447:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11439:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1324,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11439:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11439:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1321,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "11417:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11417:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1329,
												"nodeType": "Return",
												"src": "11410:44:5"
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "11242:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11326:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11351:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "11335:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1312,
														"name": "UintSet",
														"nameLocations": [
															"11335:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "11335:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "11335:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11364:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "11356:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11356:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11334:36:5"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "11394:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11394:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11393:6:5"
									},
									"scope": 1398,
									"src": "11317:144:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "11611:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1341,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "11636:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11640:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "11636:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1340,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "11628:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11628:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1339,
												"id": 1344,
												"nodeType": "Return",
												"src": "11621:26:5"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "11467:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11551:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11574:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "11558:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1333,
														"name": "UintSet",
														"nameLocations": [
															"11558:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "11558:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "11558:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11557:21:5"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "11602:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11601:9:5"
									},
									"scope": 1398,
									"src": "11542:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "12076:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1360,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "12105:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12109:6:5",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1267,
																	"src": "12105:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$796_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 1362,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "12117:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$796_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1359,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "12101:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12101:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12093:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12093:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12093:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1365,
												"nodeType": "Return",
												"src": "12086:38:5"
											}
										]
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "11660:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12005:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12024:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "12008:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1348,
														"name": "UintSet",
														"nameLocations": [
															"12008:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "12008:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "12008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12037:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "12029:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12007:36:5"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "12067:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12067:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12066:9:5"
									},
									"scope": 1398,
									"src": "11996:135:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "12749:219:5",
										"statements": [
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12776:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1396,
														"src": "12759:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1379,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12759:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1380,
															"nodeType": "ArrayTypeName",
															"src": "12759:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1383,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "12792:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12796:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "12792:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1382,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "12784:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12784:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12759:44:5"
											},
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12830:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1396,
														"src": "12813:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1389,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12813:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1390,
															"nodeType": "ArrayTypeName",
															"src": "12813:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1392,
												"nodeType": "VariableDeclarationStatement",
												"src": "12813:23:5"
											},
											{
												"AST": {
													"nativeSrc": "12899:39:5",
													"nodeType": "YulBlock",
													"src": "12899:39:5",
													"statements": [
														{
															"nativeSrc": "12913:15:5",
															"nodeType": "YulAssignment",
															"src": "12913:15:5",
															"value": {
																"name": "store",
																"nativeSrc": "12923:5:5",
																"nodeType": "YulIdentifier",
																"src": "12923:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12913:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1391,
														"isOffset": false,
														"isSlot": false,
														"src": "12913:6:5",
														"valueSize": 1
													},
													{
														"declaration": 1381,
														"isOffset": false,
														"isSlot": false,
														"src": "12923:5:5",
														"valueSize": 1
													}
												],
												"id": 1393,
												"nodeType": "InlineAssembly",
												"src": "12890:48:5"
											},
											{
												"expression": {
													"id": 1394,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1391,
													"src": "12955:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1376,
												"id": 1395,
												"nodeType": "Return",
												"src": "12948:13:5"
											}
										]
									},
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "12137:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12680:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12703:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "12687:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1369,
														"name": "UintSet",
														"nameLocations": [
															"12687:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "12687:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "12687:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12686:21:5"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "12731:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1373,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12731:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1374,
													"nodeType": "ArrayTypeName",
													"src": "12731:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12730:18:5"
									},
									"scope": 1398,
									"src": "12671:297:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1399,
							"src": "1330:11640:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "205:12766:5"
				},
				"id": 5
			},
			"contracts/staking.sol": {
				"ast": {
					"absolutePath": "contracts/staking.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"EnumerableSet": [
							1398
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"XusdGenesisRewardPool": [
							2542
						]
					},
					"id": 2543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1401,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2543,
							"sourceUnit": 652,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 1402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2543,
							"sourceUnit": 1399,
							"src": "114:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "XusdGenesisRewardPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2542,
							"linearizedBaseContracts": [
								2542
							],
							"name": "XusdGenesisRewardPool",
							"nameLocation": "190:21:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1406,
									"libraryName": {
										"id": 1403,
										"name": "EnumerableSet",
										"nameLocations": [
											"224:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1398,
										"src": "224:13:6"
									},
									"nodeType": "UsingForDirective",
									"src": "218:49:6",
									"typeName": {
										"id": 1405,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1404,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"242:13:6",
												"256:10:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1111,
											"src": "242:24:6"
										},
										"referencedDeclaration": 1111,
										"src": "242:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"canonicalName": "XusdGenesisRewardPool.UserInfo",
									"id": 1411,
									"members": [
										{
											"constant": false,
											"id": 1408,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "307:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1411,
											"src": "299:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1407,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "299:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1410,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "331:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 1411,
											"src": "323:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1409,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "323:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "280:8:6",
									"nodeType": "StructDefinition",
									"scope": 2542,
									"src": "273:75:6",
									"visibility": "public"
								},
								{
									"canonicalName": "XusdGenesisRewardPool.PoolInfo",
									"id": 1425,
									"members": [
										{
											"constant": false,
											"id": 1414,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "387:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1425,
											"src": "380:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$729",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 1413,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1412,
													"name": "IERC20",
													"nameLocations": [
														"380:6:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 729,
													"src": "380:6:6"
												},
												"referencedDeclaration": 729,
												"src": "380:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1416,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "410:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 1425,
											"src": "402:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1415,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "402:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1418,
											"mutability": "mutable",
											"name": "lastRewardTime",
											"nameLocation": "438:14:6",
											"nodeType": "VariableDeclaration",
											"scope": 1425,
											"src": "430:22:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1417,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "430:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1420,
											"mutability": "mutable",
											"name": "accXusdPerShare",
											"nameLocation": "470:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 1425,
											"src": "462:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1419,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "462:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1422,
											"mutability": "mutable",
											"name": "isStarted",
											"nameLocation": "500:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1425,
											"src": "495:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1421,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "495:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1424,
											"mutability": "mutable",
											"name": "maxDeposit",
											"nameLocation": "527:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 1425,
											"src": "519:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1423,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "519:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "361:8:6",
									"nodeType": "StructDefinition",
									"scope": 2542,
									"src": "354:190:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1428,
									"mutability": "mutable",
									"name": "_comissionTokens",
									"nameLocation": "583:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "550:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$1111_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 1427,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1426,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"550:13:6",
												"564:10:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1111,
											"src": "550:24:6"
										},
										"referencedDeclaration": 1111,
										"src": "550:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "5715f8f9",
									"id": 1430,
									"mutability": "mutable",
									"name": "comissionPercent",
									"nameLocation": "620:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "605:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1429,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "570ca735",
									"id": 1432,
									"mutability": "mutable",
									"name": "operator",
									"nameLocation": "658:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "643:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1431,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "643:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f25bb865",
									"id": 1435,
									"mutability": "mutable",
									"name": "Xusd",
									"nameLocation": "686:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "672:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1434,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1433,
											"name": "IERC20",
											"nameLocations": [
												"672:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "672:6:6"
										},
										"referencedDeclaration": 729,
										"src": "672:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1439,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "714:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "696:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage",
										"typeString": "struct XusdGenesisRewardPool.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1437,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1436,
												"name": "PoolInfo",
												"nameLocations": [
													"696:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1425,
												"src": "696:8:6"
											},
											"referencedDeclaration": 1425,
											"src": "696:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
												"typeString": "struct XusdGenesisRewardPool.PoolInfo"
											}
										},
										"id": 1438,
										"nodeType": "ArrayTypeName",
										"src": "696:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage_ptr",
											"typeString": "struct XusdGenesisRewardPool.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1446,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "784:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "728:64:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1411_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct XusdGenesisRewardPool.UserInfo))"
									},
									"typeName": {
										"id": 1445,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1440,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "736:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "728:48:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1411_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct XusdGenesisRewardPool.UserInfo))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1444,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1441,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "755:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "747:28:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1411_storage_$",
												"typeString": "mapping(address => struct XusdGenesisRewardPool.UserInfo)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1443,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1442,
													"name": "UserInfo",
													"nameLocations": [
														"766:8:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1411,
													"src": "766:8:6"
												},
												"referencedDeclaration": 1411,
												"src": "766:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
													"typeString": "struct XusdGenesisRewardPool.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1449,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "813:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "798:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1447,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "798:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1448,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "831:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f96dc11",
									"id": 1451,
									"mutability": "mutable",
									"name": "poolStartTime",
									"nameLocation": "853:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "838:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1450,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "838:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6e271dd5",
									"id": 1453,
									"mutability": "mutable",
									"name": "poolEndTime",
									"nameLocation": "887:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "872:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1452,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "872:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "628b409f",
									"id": 1455,
									"mutability": "mutable",
									"name": "XusdPerSecond",
									"nameLocation": "920:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "905:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1454,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "905:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "943f013d",
									"id": 1457,
									"mutability": "mutable",
									"name": "runningTime",
									"nameLocation": "954:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "939:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "939:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 1459,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "986:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "971:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1458,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "971:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 1467,
									"name": "Deposit",
									"nameLocation": "1011:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1035:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "1019:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "1057:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "1041:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1070:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "1062:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:59:6"
									},
									"src": "1005:73:6"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 1475,
									"name": "Withdraw",
									"nameLocation": "1089:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1114:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1098:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "1136:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1120:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1149:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1141:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1097:59:6"
									},
									"src": "1083:74:6"
								},
								{
									"anonymous": false,
									"eventSelector": "bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595",
									"id": 1483,
									"name": "EmergencyWithdraw",
									"nameLocation": "1168:17:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1202:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1186:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "1224:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1208:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1237:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1229:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1185:59:6"
									},
									"src": "1162:83:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 1489,
									"name": "RewardPaid",
									"nameLocation": "1256:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1283:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1267:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1297:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1289:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:38:6"
									},
									"src": "1250:55:6"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "1523:750:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1506,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1541:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1547:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1541:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1508,
																"name": "_poolStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "1559:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1541:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c617465",
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1575:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															},
															"value": "late"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															}
														],
														"id": 1505,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1533:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1533:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "1533:49:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1514,
																"name": "_Xusd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "1600:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1617:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1609:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1515,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1609:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1609:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1600:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5875736447656e65736973506f6f6c3a2058757364206973207a65726f2061646472657373",
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1621:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2734a09ecd0aa61fbb750d6a51502de29edef70e696f5af4ce6e8c880e7c2102",
																"typeString": "literal_string \"XusdGenesisPool: Xusd is zero address\""
															},
															"value": "XusdGenesisPool: Xusd is zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2734a09ecd0aa61fbb750d6a51502de29edef70e696f5af4ce6e8c880e7c2102",
																"typeString": "literal_string \"XusdGenesisPool: Xusd is zero address\""
															}
														],
														"id": 1513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1592:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1592:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "1592:69:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1524,
																"name": "_totalRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1500,
																"src": "1679:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1695:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1679:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5875736447656e65736973506f6f6c3a20746f74616c52657761726473206973207a65726f",
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1698:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24073964cebb5a480a1017d149dc5fd778a4b28a8ec6083e8b545a9135500bad",
																"typeString": "literal_string \"XusdGenesisPool: totalRewards is zero\""
															},
															"value": "XusdGenesisPool: totalRewards is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24073964cebb5a480a1017d149dc5fd778a4b28a8ec6083e8b545a9135500bad",
																"typeString": "literal_string \"XusdGenesisPool: totalRewards is zero\""
															}
														],
														"id": 1523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1671:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1671:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "1671:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1531,
																"name": "_runningTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "1756:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1771:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1756:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5875736447656e65736973506f6f6c3a2072756e6e696e6754696d65206973207a65726f",
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1774:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_087c1afcbc4b80d51e756fd5b00eab1f558e892efb01f001555bfc4ba77a2ed0",
																"typeString": "literal_string \"XusdGenesisPool: runningTime is zero\""
															},
															"value": "XusdGenesisPool: runningTime is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_087c1afcbc4b80d51e756fd5b00eab1f558e892efb01f001555bfc4ba77a2ed0",
																"typeString": "literal_string \"XusdGenesisPool: runningTime is zero\""
															}
														],
														"id": 1530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1748:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1748:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "1748:65:6"
											},
											{
												"expression": {
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1537,
														"name": "Xusd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "1823:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1539,
																"name": "_Xusd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "1837:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1538,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1830:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1830:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1823:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "1823:20:6"
											},
											{
												"expression": {
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1543,
														"name": "totalRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "1853:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1544,
														"name": "_totalRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "1868:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1853:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "1853:28:6"
											},
											{
												"expression": {
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1547,
														"name": "runningTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "1891:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1548,
														"name": "_runningTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "1905:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1891:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "1891:26:6"
											},
											{
												"expression": {
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1551,
														"name": "XusdPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "1927:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1552,
															"name": "totalRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "1943:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1553,
															"name": "runningTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "1958:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1943:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1927:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "1927:42:6"
											},
											{
												"body": {
													"id": 1576,
													"nodeType": "Block",
													"src": "2033:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1571,
																			"name": "comissionTokens_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1494,
																			"src": "2068:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1573,
																		"indexExpression": {
																			"id": 1572,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "2085:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2068:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1568,
																		"name": "_comissionTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "2047:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1111_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2064:3:6",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1138,
																	"src": "2047:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1111_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1111_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2047:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1575,
															"nodeType": "ExpressionStatement",
															"src": "2047:41:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1561,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "1999:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1562,
															"name": "comissionTokens_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "2003:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2020:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2003:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1999:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1577,
												"initializationExpression": {
													"assignments": [
														1558
													],
													"declarations": [
														{
															"constant": false,
															"id": 1558,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1992:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1577,
															"src": "1984:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1557,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1984:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1560,
													"initialValue": {
														"hexValue": "30",
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1996:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1984:13:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2028:3:6",
														"subExpression": {
															"id": 1565,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "2028:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1567,
													"nodeType": "ExpressionStatement",
													"src": "2028:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1979:120:6"
											},
											{
												"expression": {
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1578,
														"name": "comissionPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "2108:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1579,
														"name": "_comissionPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "2127:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2108:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "2108:36:6"
											},
											{
												"expression": {
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1582,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "2154:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1583,
														"name": "_poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "2170:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2154:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "2154:30:6"
											},
											{
												"expression": {
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1586,
														"name": "poolEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "2194:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1587,
															"name": "poolStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "2208:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1588,
															"name": "runningTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "2224:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2208:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2194:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "2194:41:6"
											},
											{
												"expression": {
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1592,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "2245:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1593,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2256:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2260:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2256:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2245:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1596,
												"nodeType": "ExpressionStatement",
												"src": "2245:21:6"
											}
										]
									},
									"id": 1598,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "_Xusd",
												"nameLocation": "1340:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "1332:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "comissionTokens_",
												"nameLocation": "1372:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "1355:33:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1492,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1355:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1493,
													"nodeType": "ArrayTypeName",
													"src": "1355:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "_comissionPercent",
												"nameLocation": "1406:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "1398:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "_poolStartTime",
												"nameLocation": "1441:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "1433:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "_totalRewards",
												"nameLocation": "1473:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "1465:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "_runningTime",
												"nameLocation": "1504:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "1496:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:200:6"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:0:6"
									},
									"scope": 2542,
									"src": "1311:962:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "2343:49:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1603,
															"name": "_comissionTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "2360:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1111_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2377:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1207,
														"src": "2360:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1111_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1111_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2360:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1606,
												"nodeType": "Return",
												"src": "2353:32:6"
											}
										]
									},
									"functionSelector": "92fae48d",
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "comissionTokensCount",
									"nameLocation": "2288:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2308:2:6"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2334:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2334:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2333:9:6"
									},
									"scope": 2542,
									"src": "2279:113:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "2469:50:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1617,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "2506:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1615,
															"name": "_comissionTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "2486:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1111_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2503:2:6",
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1234,
														"src": "2486:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1111_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$1111_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2486:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1614,
												"id": 1619,
												"nodeType": "Return",
												"src": "2479:33:6"
											}
										]
									},
									"functionSelector": "5b142956",
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "comissionToken",
									"nameLocation": "2407:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2430:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "2422:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:15:6"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "2460:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2459:9:6"
									},
									"scope": 2542,
									"src": "2398:121:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "2607:643:6",
										"statements": [
											{
												"assignments": [
													1632
												],
												"declarations": [
													{
														"constant": false,
														"id": 1632,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "2634:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "2617:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1631,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1630,
																"name": "PoolInfo",
																"nameLocations": [
																	"2617:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1425,
																"src": "2617:8:6"
															},
															"referencedDeclaration": 1425,
															"src": "2617:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1636,
												"initialValue": {
													"baseExpression": {
														"id": 1633,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "2641:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1635,
													"indexExpression": {
														"id": 1634,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "2650:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2641:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1425_storage",
														"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2617:38:6"
											},
											{
												"assignments": [
													1639
												],
												"declarations": [
													{
														"constant": false,
														"id": 1639,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "2682:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "2665:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
															"typeString": "struct XusdGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"id": 1638,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1637,
																"name": "UserInfo",
																"nameLocations": [
																	"2665:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1411,
																"src": "2665:8:6"
															},
															"referencedDeclaration": 1411,
															"src": "2665:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1645,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1640,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "2689:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1411_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct XusdGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1642,
														"indexExpression": {
															"id": 1641,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "2698:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2689:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1411_storage_$",
															"typeString": "mapping(address => struct XusdGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1644,
													"indexExpression": {
														"id": 1643,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "2704:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2689:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1411_storage",
														"typeString": "struct XusdGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2665:45:6"
											},
											{
												"assignments": [
													1647
												],
												"declarations": [
													{
														"constant": false,
														"id": 1647,
														"mutability": "mutable",
														"name": "accXusdPerShare",
														"nameLocation": "2728:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "2720:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2720:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1650,
												"initialValue": {
													"expression": {
														"id": 1648,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "2746:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2751:15:6",
													"memberName": "accXusdPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1420,
													"src": "2746:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2720:46:6"
											},
											{
												"assignments": [
													1652
												],
												"declarations": [
													{
														"constant": false,
														"id": 1652,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nameLocation": "2784:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "2776:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1651,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2776:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1661,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1658,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2827:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_XusdGenesisRewardPool_$2542",
																		"typeString": "contract XusdGenesisRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_XusdGenesisRewardPool_$2542",
																		"typeString": "contract XusdGenesisRewardPool"
																	}
																],
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2819:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1656,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2819:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2819:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1653,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "2798:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																	"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2803:5:6",
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1414,
															"src": "2798:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2809:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "2798:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2776:57:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1662,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2847:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2853:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2847:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1664,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "2865:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																	"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2870:14:6",
															"memberName": "lastRewardTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1418,
															"src": "2865:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2847:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1667,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "2888:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2903:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2888:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2847:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1700,
												"nodeType": "IfStatement",
												"src": "2843:328:6",
												"trueBody": {
													"id": 1699,
													"nodeType": "Block",
													"src": "2906:265:6",
													"statements": [
														{
															"assignments": [
																1672
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1672,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nameLocation": "2928:16:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1699,
																	"src": "2920:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1671,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2920:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1679,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1674,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1632,
																			"src": "2966:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																				"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2971:14:6",
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1418,
																		"src": "2966:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1676,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2987:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2993:9:6",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "2987:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1673,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1783,
																	"src": "2947:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2947:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2920:83:6"
														},
														{
															"assignments": [
																1681
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1681,
																	"mutability": "mutable",
																	"name": "_XusdReward",
																	"nameLocation": "3025:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1699,
																	"src": "3017:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1680,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3017:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1689,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1682,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1672,
																				"src": "3040:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"expression": {
																					"id": 1683,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1632,
																					"src": "3059:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																						"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1684,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3064:10:6",
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1416,
																				"src": "3059:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3040:34:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1686,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3039:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1687,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "3078:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3039:54:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3017:76:6"
														},
														{
															"expression": {
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1690,
																	"name": "accXusdPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "3107:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1691,
																					"name": "_XusdReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1681,
																					"src": "3127:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31653138",
																					"id": 1692,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3141:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "3127:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1694,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3126:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1695,
																		"name": "tokenSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1652,
																		"src": "3149:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3126:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3107:53:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1698,
															"nodeType": "ExpressionStatement",
															"src": "3107:53:6"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1701,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1639,
																			"src": "3188:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																				"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3193:6:6",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1408,
																		"src": "3188:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1703,
																		"name": "accXusdPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1647,
																		"src": "3202:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3188:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1705,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3187:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3221:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "3187:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1708,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "3228:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1709,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3233:10:6",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "3228:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3187:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1711,
												"nodeType": "Return",
												"src": "3180:63:6"
											}
										]
									},
									"functionSelector": "7805583c",
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingXusd",
									"nameLocation": "2534:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "2554:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "2546:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2546:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2568:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "2560:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2560:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2545:29:6"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "2598:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2598:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2597:9:6"
									},
									"scope": 2542,
									"src": "2525:725:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "3350:532:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1722,
														"name": "_fromTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "3364:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1723,
														"name": "_toTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "3377:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3364:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1727,
												"nodeType": "IfStatement",
												"src": "3360:34:6",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3393:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1721,
													"id": 1726,
													"nodeType": "Return",
													"src": "3386:8:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1728,
														"name": "_toTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "3408:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1729,
														"name": "poolEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "3419:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3408:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1780,
													"nodeType": "Block",
													"src": "3661:215:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1756,
																	"name": "_toTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1717,
																	"src": "3679:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1757,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "3690:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3679:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1761,
															"nodeType": "IfStatement",
															"src": "3675:38:6",
															"trueBody": {
																"expression": {
																	"hexValue": "30",
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3712:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1721,
																"id": 1760,
																"nodeType": "Return",
																"src": "3705:8:6"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1762,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "3731:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1763,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "3744:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3731:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1772,
															"nodeType": "IfStatement",
															"src": "3727:80:6",
															"trueBody": {
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1767,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1765,
																					"name": "_toTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1717,
																					"src": "3767:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1766,
																					"name": "poolStartTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1451,
																					"src": "3777:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3767:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1768,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3766:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1769,
																		"name": "XusdPerSecond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "3794:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3766:41:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1721,
																"id": 1771,
																"nodeType": "Return",
																"src": "3759:48:6"
															}
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1773,
																				"name": "_toTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1717,
																				"src": "3829:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1774,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1715,
																				"src": "3839:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3829:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1776,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3828:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1777,
																	"name": "XusdPerSecond",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "3852:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3828:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1721,
															"id": 1779,
															"nodeType": "Return",
															"src": "3821:44:6"
														}
													]
												},
												"id": 1781,
												"nodeType": "IfStatement",
												"src": "3404:472:6",
												"trueBody": {
													"id": 1755,
													"nodeType": "Block",
													"src": "3432:223:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1731,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "3450:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1732,
																	"name": "poolEndTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1453,
																	"src": "3463:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3450:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1736,
															"nodeType": "IfStatement",
															"src": "3446:38:6",
															"trueBody": {
																"expression": {
																	"hexValue": "30",
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3483:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1721,
																"id": 1735,
																"nodeType": "Return",
																"src": "3476:8:6"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1737,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "3502:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1738,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "3515:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3502:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1747,
															"nodeType": "IfStatement",
															"src": "3498:84:6",
															"trueBody": {
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1740,
																					"name": "poolEndTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1453,
																					"src": "3538:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1741,
																					"name": "poolStartTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1451,
																					"src": "3552:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3538:27:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1743,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3537:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1744,
																		"name": "XusdPerSecond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "3569:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3537:45:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1721,
																"id": 1746,
																"nodeType": "Return",
																"src": "3530:52:6"
															}
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1748,
																				"name": "poolEndTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1453,
																				"src": "3604:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1749,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1715,
																				"src": "3618:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3604:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1751,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3603:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1752,
																	"name": "XusdPerSecond",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "3631:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3603:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1721,
															"id": 1754,
															"nodeType": "Return",
															"src": "3596:48:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "231f0c6a",
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGeneratedReward",
									"nameLocation": "3265:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "_fromTime",
												"nameLocation": "3292:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "3284:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3284:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "_toTime",
												"nameLocation": "3311:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "3303:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3283:36:6"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "3341:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3341:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3340:9:6"
									},
									"scope": 2542,
									"src": "3256:626:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "3945:199:6",
										"statements": [
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3963:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "3955:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1789,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3955:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1793,
												"initialValue": {
													"expression": {
														"id": 1791,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "3972:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3981:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3972:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3955:32:6"
											},
											{
												"body": {
													"id": 1814,
													"nodeType": "Block",
													"src": "4040:98:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		},
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1805,
																					"name": "poolInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1439,
																					"src": "4062:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage",
																						"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref[] storage ref"
																					}
																				},
																				"id": 1807,
																				"indexExpression": {
																					"id": 1806,
																					"name": "pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1795,
																					"src": "4071:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4062:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1425_storage",
																					"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref"
																				}
																			},
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4076:5:6",
																			"memberName": "token",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1414,
																			"src": "4062:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1809,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1786,
																			"src": "4085:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "4062:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5875736447656e65736973506f6f6c3a206578697374696e6720706f6f6c3f",
																		"id": 1811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4093:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a9f72e63f751613ead647b479c0f98983ffcc3fa58c3c2b364cd8c5c4ac9b8d2",
																			"typeString": "literal_string \"XusdGenesisPool: existing pool?\""
																		},
																		"value": "XusdGenesisPool: existing pool?"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a9f72e63f751613ead647b479c0f98983ffcc3fa58c3c2b364cd8c5c4ac9b8d2",
																			"typeString": "literal_string \"XusdGenesisPool: existing pool?\""
																		}
																	],
																	"id": 1804,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4054:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4054:73:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1813,
															"nodeType": "ExpressionStatement",
															"src": "4054:73:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1798,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "4019:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1799,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "4025:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4019:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1815,
												"initializationExpression": {
													"assignments": [
														1795
													],
													"declarations": [
														{
															"constant": false,
															"id": 1795,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "4010:3:6",
															"nodeType": "VariableDeclaration",
															"scope": 1815,
															"src": "4002:11:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1794,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4002:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1797,
													"initialValue": {
														"hexValue": "30",
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4016:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4002:15:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4033:5:6",
														"subExpression": {
															"id": 1801,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "4035:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1803,
													"nodeType": "ExpressionStatement",
													"src": "4033:5:6"
												},
												"nodeType": "ForStatement",
												"src": "3997:141:6"
											}
										]
									},
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPoolDuplicate",
									"nameLocation": "3897:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3923:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "3916:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1785,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1784,
														"name": "IERC20",
														"nameLocations": [
															"3916:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "3916:6:6"
													},
													"referencedDeclaration": 729,
													"src": "3916:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3915:15:6"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3945:0:6"
									},
									"scope": 2542,
									"src": "3888:256:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "4331:1027:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1834,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "4360:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														],
														"id": 1833,
														"name": "checkPoolDuplicate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "4341:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$729_$returns$__$",
															"typeString": "function (contract IERC20) view"
														}
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4341:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1836,
												"nodeType": "ExpressionStatement",
												"src": "4341:26:6"
											},
											{
												"condition": {
													"id": 1837,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1824,
													"src": "4381:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1842,
												"nodeType": "IfStatement",
												"src": "4377:59:6",
												"trueBody": {
													"id": 1841,
													"nodeType": "Block",
													"src": "4394:42:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1838,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2383,
																	"src": "4408:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4408:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1840,
															"nodeType": "ExpressionStatement",
															"src": "4408:17:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1843,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4449:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4455:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4449:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1845,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "4467:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4449:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1881,
													"nodeType": "Block",
													"src": "4709:153:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1866,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1826,
																		"src": "4727:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4746:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4727:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1869,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1826,
																		"src": "4751:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"expression": {
																			"id": 1870,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4769:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4775:9:6",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4769:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4751:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4727:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1880,
															"nodeType": "IfStatement",
															"src": "4723:129:6",
															"trueBody": {
																"id": 1879,
																"nodeType": "Block",
																"src": "4786:66:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1874,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1826,
																				"src": "4804:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1875,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "4822:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4828:9:6",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "4822:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4804:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1878,
																		"nodeType": "ExpressionStatement",
																		"src": "4804:33:6"
																	}
																]
															}
														}
													]
												},
												"id": 1882,
												"nodeType": "IfStatement",
												"src": "4445:417:6",
												"trueBody": {
													"id": 1865,
													"nodeType": "Block",
													"src": "4482:221:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1847,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1826,
																	"src": "4500:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4519:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4500:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1855,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1826,
																		"src": "4596:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 1856,
																		"name": "poolStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1451,
																		"src": "4614:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4596:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1863,
																"nodeType": "IfStatement",
																"src": "4592:101:6",
																"trueBody": {
																	"id": 1862,
																	"nodeType": "Block",
																	"src": "4629:64:6",
																	"statements": [
																		{
																			"expression": {
																				"id": 1860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1858,
																					"name": "_lastRewardTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1826,
																					"src": "4647:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 1859,
																					"name": "poolStartTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1451,
																					"src": "4665:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4647:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1861,
																			"nodeType": "ExpressionStatement",
																			"src": "4647:31:6"
																		}
																	]
																}
															},
															"id": 1864,
															"nodeType": "IfStatement",
															"src": "4496:197:6",
															"trueBody": {
																"id": 1854,
																"nodeType": "Block",
																"src": "4522:64:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1850,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1826,
																				"src": "4540:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1851,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1451,
																				"src": "4558:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4540:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1853,
																		"nodeType": "ExpressionStatement",
																		"src": "4540:31:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													1884
												],
												"declarations": [
													{
														"constant": false,
														"id": 1884,
														"mutability": "mutable",
														"name": "_isStarted",
														"nameLocation": "4876:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1916,
														"src": "4871:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1883,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4871:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1895,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1885,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1826,
																	"src": "4890:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1886,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "4909:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4890:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1888,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4889:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1889,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1826,
																	"src": "4928:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1890,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4947:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4953:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4947:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4928:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1893,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4927:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4889:74:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4871:92:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1900,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1822,
																	"src": "5034:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1901,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "5070:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1902,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1826,
																	"src": "5115:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5165:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 1904,
																	"name": "_isStarted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1884,
																	"src": "5195:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1905,
																	"name": "_maxDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "5235:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1899,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "5000:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1425_storage_ptr_$",
																	"typeString": "type(struct XusdGenesisRewardPool.PoolInfo storage pointer)"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"5027:5:6",
																"5058:10:6",
																"5099:14:6",
																"5148:15:6",
																"5184:9:6",
																"5223:10:6"
															],
															"names": [
																"token",
																"allocPoint",
																"lastRewardTime",
																"accXusdPerShare",
																"isStarted",
																"maxDeposit"
															],
															"nodeType": "FunctionCall",
															"src": "5000:261:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1425_memory_ptr",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1425_memory_ptr",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1896,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "4973:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4982:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4973:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1425_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct XusdGenesisRewardPool.PoolInfo storage ref[] storage pointer,struct XusdGenesisRewardPool.PoolInfo storage ref)"
														}
													},
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4973:298:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1908,
												"nodeType": "ExpressionStatement",
												"src": "4973:298:6"
											},
											{
												"condition": {
													"id": 1909,
													"name": "_isStarted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1884,
													"src": "5285:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1915,
												"nodeType": "IfStatement",
												"src": "5281:71:6",
												"trueBody": {
													"id": 1914,
													"nodeType": "Block",
													"src": "5297:55:6",
													"statements": [
														{
															"expression": {
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1910,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "5311:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1911,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "5330:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5311:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1913,
															"nodeType": "ExpressionStatement",
															"src": "5311:30:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "62e006c7",
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1830,
												"name": "onlyOperator",
												"nameLocations": [
													"4318:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2541,
												"src": "4318:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4318:12:6"
										}
									],
									"name": "add",
									"nameLocation": "4159:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "4180:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4172:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4172:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4208:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4201:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1821,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1820,
														"name": "IERC20",
														"nameLocations": [
															"4201:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "4201:6:6"
													},
													"referencedDeclaration": 729,
													"src": "4201:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "4229:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4224:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4224:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "_lastRewardTime",
												"nameLocation": "4258:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4250:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4250:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "_maxDeposit",
												"nameLocation": "4291:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "4283:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4283:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4162:146:6"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4331:0:6"
									},
									"scope": 2542,
									"src": "4150:1208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2073,
										"nodeType": "Block",
										"src": "5421:1097:6",
										"statements": [
											{
												"assignments": [
													1925
												],
												"declarations": [
													{
														"constant": false,
														"id": 1925,
														"mutability": "mutable",
														"name": "_sender",
														"nameLocation": "5439:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 2073,
														"src": "5431:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1924,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5431:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1928,
												"initialValue": {
													"expression": {
														"id": 1926,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5449:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5453:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5449:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5431:28:6"
											},
											{
												"assignments": [
													1931
												],
												"declarations": [
													{
														"constant": false,
														"id": 1931,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5486:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2073,
														"src": "5469:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1930,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1929,
																"name": "PoolInfo",
																"nameLocations": [
																	"5469:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1425,
																"src": "5469:8:6"
															},
															"referencedDeclaration": 1425,
															"src": "5469:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1935,
												"initialValue": {
													"baseExpression": {
														"id": 1932,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "5493:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1934,
													"indexExpression": {
														"id": 1933,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "5502:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5493:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1425_storage",
														"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5469:38:6"
											},
											{
												"assignments": [
													1938
												],
												"declarations": [
													{
														"constant": false,
														"id": 1938,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "5534:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2073,
														"src": "5517:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
															"typeString": "struct XusdGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"id": 1937,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1936,
																"name": "UserInfo",
																"nameLocations": [
																	"5517:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1411,
																"src": "5517:8:6"
															},
															"referencedDeclaration": 1411,
															"src": "5517:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1944,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1939,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "5541:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1411_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct XusdGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1941,
														"indexExpression": {
															"id": 1940,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "5550:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5541:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1411_storage_$",
															"typeString": "mapping(address => struct XusdGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1943,
													"indexExpression": {
														"id": 1942,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1925,
														"src": "5556:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5541:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1411_storage",
														"typeString": "struct XusdGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5517:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1946,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "5585:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1945,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2486,
														"src": "5574:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5574:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1948,
												"nodeType": "ExpressionStatement",
												"src": "5574:16:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1949,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "5604:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1950,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5609:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1408,
														"src": "5604:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5618:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5604:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1983,
												"nodeType": "IfStatement",
												"src": "5600:277:6",
												"trueBody": {
													"id": 1982,
													"nodeType": "Block",
													"src": "5621:256:6",
													"statements": [
														{
															"assignments": [
																1954
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1954,
																	"mutability": "mutable",
																	"name": "_pending",
																	"nameLocation": "5643:8:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1982,
																	"src": "5635:16:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1953,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5635:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1966,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1955,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1938,
																						"src": "5655:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																							"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
																						}
																					},
																					"id": 1956,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5660:6:6",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1408,
																					"src": "5655:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"expression": {
																						"id": 1957,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1931,
																						"src": "5669:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																							"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																						}
																					},
																					"id": 1958,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5674:15:6",
																					"memberName": "accXusdPerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1420,
																					"src": "5669:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5655:34:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1960,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5654:36:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5693:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "5654:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1963,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1938,
																		"src": "5700:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																			"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1964,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5705:10:6",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1410,
																	"src": "5700:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5654:61:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5635:80:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1967,
																	"name": "_pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1954,
																	"src": "5733:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5744:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5733:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1981,
															"nodeType": "IfStatement",
															"src": "5729:138:6",
															"trueBody": {
																"id": 1980,
																"nodeType": "Block",
																"src": "5747:120:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1971,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1925,
																					"src": "5782:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1972,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1954,
																					"src": "5791:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1970,
																				"name": "safeXusdTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2529,
																				"src": "5765:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5765:35:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1974,
																		"nodeType": "ExpressionStatement",
																		"src": "5765:35:6"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1976,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1925,
																					"src": "5834:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1977,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1954,
																					"src": "5843:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1975,
																				"name": "RewardPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1489,
																				"src": "5823:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5823:29:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1979,
																		"nodeType": "EmitStatement",
																		"src": "5818:34:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													1985
												],
												"declarations": [
													{
														"constant": false,
														"id": 1985,
														"mutability": "mutable",
														"name": "possibleToDeposit",
														"nameLocation": "5894:17:6",
														"nodeType": "VariableDeclaration",
														"scope": 2073,
														"src": "5886:25:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1984,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5886:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1991,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1986,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "5914:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5919:10:6",
														"memberName": "maxDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1424,
														"src": "5914:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1988,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "5932:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1989,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5937:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1408,
														"src": "5932:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5914:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5886:57:6"
											},
											{
												"assignments": [
													1993
												],
												"declarations": [
													{
														"constant": false,
														"id": 1993,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5961:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2073,
														"src": "5953:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1992,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5953:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2000,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1994,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "5970:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1995,
															"name": "possibleToDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "5980:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5970:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1998,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "6020:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5970:57:6",
													"trueExpression": {
														"id": 1997,
														"name": "possibleToDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1985,
														"src": "6000:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5953:74:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2001,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "6041:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6050:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6041:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2053,
												"nodeType": "IfStatement",
												"src": "6037:359:6",
												"trueBody": {
													"id": 2052,
													"nodeType": "Block",
													"src": "6053:343:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2009,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "6091:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2012,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6108:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_XusdGenesisRewardPool_$2542",
																					"typeString": "contract XusdGenesisRewardPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_XusdGenesisRewardPool_$2542",
																					"typeString": "contract XusdGenesisRewardPool"
																				}
																			],
																			"id": 2011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6100:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2010,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6100:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6100:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2014,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1993,
																		"src": "6115:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2004,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "6067:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																				"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 2007,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6072:5:6",
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1414,
																		"src": "6067:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6078:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "6067:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6067:55:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2016,
															"nodeType": "ExpressionStatement",
															"src": "6067:55:6"
														},
														{
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2021,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1931,
																					"src": "6174:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																						"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 2022,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6179:5:6",
																				"memberName": "token",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1414,
																				"src": "6174:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$729",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$729",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6166:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2019,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6166:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6166:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2017,
																		"name": "_comissionTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "6140:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1111_storage",
																			"typeString": "struct EnumerableSet.AddressSet storage ref"
																		}
																	},
																	"id": 2018,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6157:8:6",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1192,
																	"src": "6140:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1111_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1111_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 2024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6140:46:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2050,
																"nodeType": "Block",
																"src": "6332:54:6",
																"statements": [
																	{
																		"expression": {
																			"id": 2048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2044,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1938,
																					"src": "6350:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																						"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
																					}
																				},
																				"id": 2046,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "6355:6:6",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1408,
																				"src": "6350:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2047,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1993,
																				"src": "6365:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6350:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2049,
																		"nodeType": "ExpressionStatement",
																		"src": "6350:21:6"
																	}
																]
															},
															"id": 2051,
															"nodeType": "IfStatement",
															"src": "6136:250:6",
															"trueBody": {
																"id": 2043,
																"nodeType": "Block",
																"src": "6188:138:6",
																"statements": [
																	{
																		"assignments": [
																			2026
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2026,
																				"mutability": "mutable",
																				"name": "hundred",
																				"nameLocation": "6214:7:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 2043,
																				"src": "6206:15:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2025,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6206:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2028,
																		"initialValue": {
																			"hexValue": "3130303030",
																			"id": 2027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6224:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"value": "10000"
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6206:23:6"
																	},
																	{
																		"expression": {
																			"id": 2041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2029,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1938,
																					"src": "6247:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																						"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
																					}
																				},
																				"id": 2031,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "6252:6:6",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1408,
																				"src": "6247:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2040,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2037,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2032,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1993,
																								"src": "6263:6:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 2035,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 2033,
																											"name": "hundred",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2026,
																											"src": "6273:7:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"id": 2034,
																											"name": "comissionPercent",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1430,
																											"src": "6283:16:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "6273:26:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 2036,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "6272:28:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6263:37:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2038,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6262:39:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2039,
																					"name": "hundred",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2026,
																					"src": "6304:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6262:49:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6247:64:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2042,
																		"nodeType": "ExpressionStatement",
																		"src": "6247:64:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2054,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "6405:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2056,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6410:10:6",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "6405:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2057,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1938,
																			"src": "6424:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																				"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 2058,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6429:6:6",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1408,
																		"src": "6424:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 2059,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "6438:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																				"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6443:15:6",
																		"memberName": "accXusdPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1420,
																		"src": "6438:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6424:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2062,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6423:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6462:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "6423:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6405:61:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2066,
												"nodeType": "ExpressionStatement",
												"src": "6405:61:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2068,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "6489:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2069,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "6498:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2070,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "6504:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2067,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "6481:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6481:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2072,
												"nodeType": "EmitStatement",
												"src": "6476:35:6"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 2074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "5373:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "5389:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "5381:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5381:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5403:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "5395:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5380:31:6"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5421:0:6"
									},
									"scope": 2542,
									"src": "5364:1154:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "6574:317:6",
										"statements": [
											{
												"assignments": [
													2081
												],
												"declarations": [
													{
														"constant": false,
														"id": 2081,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6601:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2130,
														"src": "6584:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 2080,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2079,
																"name": "PoolInfo",
																"nameLocations": [
																	"6584:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1425,
																"src": "6584:8:6"
															},
															"referencedDeclaration": 1425,
															"src": "6584:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2085,
												"initialValue": {
													"baseExpression": {
														"id": 2082,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "6608:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2084,
													"indexExpression": {
														"id": 2083,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2076,
														"src": "6617:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6608:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1425_storage",
														"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6584:38:6"
											},
											{
												"assignments": [
													2088
												],
												"declarations": [
													{
														"constant": false,
														"id": 2088,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6649:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2130,
														"src": "6632:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
															"typeString": "struct XusdGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"id": 2087,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2086,
																"name": "UserInfo",
																"nameLocations": [
																	"6632:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1411,
																"src": "6632:8:6"
															},
															"referencedDeclaration": 1411,
															"src": "6632:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2095,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2089,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "6656:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1411_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct XusdGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 2091,
														"indexExpression": {
															"id": 2090,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "6665:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6656:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1411_storage_$",
															"typeString": "mapping(address => struct XusdGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 2094,
													"indexExpression": {
														"expression": {
															"id": 2092,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6671:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6675:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6671:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6656:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1411_storage",
														"typeString": "struct XusdGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6632:50:6"
											},
											{
												"assignments": [
													2097
												],
												"declarations": [
													{
														"constant": false,
														"id": 2097,
														"mutability": "mutable",
														"name": "_amount",
														"nameLocation": "6700:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 2130,
														"src": "6692:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2096,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6692:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2100,
												"initialValue": {
													"expression": {
														"id": 2098,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2088,
														"src": "6710:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
															"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
														}
													},
													"id": 2099,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6715:6:6",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1408,
													"src": "6710:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6692:29:6"
											},
											{
												"expression": {
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2101,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "6731:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2103,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6736:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1408,
														"src": "6731:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6745:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6731:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2106,
												"nodeType": "ExpressionStatement",
												"src": "6731:15:6"
											},
											{
												"expression": {
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2107,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "6756:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6761:10:6",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "6756:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6774:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6756:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2112,
												"nodeType": "ExpressionStatement",
												"src": "6756:19:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2118,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6805:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6809:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6805:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2120,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "6817:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2113,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2081,
																"src": "6785:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																	"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6790:5:6",
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1414,
															"src": "6785:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 2117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6796:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "6785:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6785:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2122,
												"nodeType": "ExpressionStatement",
												"src": "6785:40:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2124,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6858:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6862:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6858:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2126,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "6870:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2127,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "6876:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2123,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "6840:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6840:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2129,
												"nodeType": "EmitStatement",
												"src": "6835:49:6"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "6533:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6550:14:6"
									},
									"returnParameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6574:0:6"
									},
									"scope": 2542,
									"src": "6524:367:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "7000:387:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2143,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7014:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7020:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7014:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2145,
															"name": "poolEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "7032:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3330",
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7046:7:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2592000_by_1",
																"typeString": "int_const 2592000"
															},
															"value": "30"
														},
														"src": "7032:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7014:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2189,
												"nodeType": "IfStatement",
												"src": "7010:334:6",
												"trueBody": {
													"id": 2188,
													"nodeType": "Block",
													"src": "7055:289:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		},
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2150,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2134,
																			"src": "7077:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2151,
																			"name": "Xusd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "7087:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "7077:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "58757364",
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7093:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a3ad23ca9ea6675f31c99a26a92dd1cd138946af4198749db7a4e3ff1ee8c462",
																			"typeString": "literal_string \"Xusd\""
																		},
																		"value": "Xusd"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a3ad23ca9ea6675f31c99a26a92dd1cd138946af4198749db7a4e3ff1ee8c462",
																			"typeString": "literal_string \"Xusd\""
																		}
																	],
																	"id": 2149,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7069:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7069:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2155,
															"nodeType": "ExpressionStatement",
															"src": "7069:31:6"
														},
														{
															"assignments": [
																2157
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2157,
																	"mutability": "mutable",
																	"name": "length",
																	"nameLocation": "7122:6:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 2188,
																	"src": "7114:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2156,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7114:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2160,
															"initialValue": {
																"expression": {
																	"id": 2158,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "7131:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage",
																		"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7140:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7131:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7114:32:6"
														},
														{
															"body": {
																"id": 2186,
																"nodeType": "Block",
																"src": "7203:131:6",
																"statements": [
																	{
																		"assignments": [
																			2173
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2173,
																				"mutability": "mutable",
																				"name": "pool",
																				"nameLocation": "7238:4:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 2186,
																				"src": "7221:21:6",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																					"typeString": "struct XusdGenesisRewardPool.PoolInfo"
																				},
																				"typeName": {
																					"id": 2172,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 2171,
																						"name": "PoolInfo",
																						"nameLocations": [
																							"7221:8:6"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1425,
																						"src": "7221:8:6"
																					},
																					"referencedDeclaration": 1425,
																					"src": "7221:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																						"typeString": "struct XusdGenesisRewardPool.PoolInfo"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2177,
																		"initialValue": {
																			"baseExpression": {
																				"id": 2174,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1439,
																				"src": "7245:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage",
																					"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 2176,
																			"indexExpression": {
																				"id": 2175,
																				"name": "pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2162,
																				"src": "7254:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7245:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1425_storage",
																				"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7221:37:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_contract$_IERC20_$729",
																						"typeString": "contract IERC20"
																					},
																					"id": 2182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2179,
																						"name": "_token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2134,
																						"src": "7284:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$729",
																							"typeString": "contract IERC20"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"id": 2180,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2173,
																							"src": "7294:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																								"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 2181,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7299:5:6",
																						"memberName": "token",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1414,
																						"src": "7294:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$729",
																							"typeString": "contract IERC20"
																						}
																					},
																					"src": "7284:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "706f6f6c2e746f6b656e",
																					"id": 2183,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7306:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681",
																						"typeString": "literal_string \"pool.token\""
																					},
																					"value": "pool.token"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681",
																						"typeString": "literal_string \"pool.token\""
																					}
																				],
																				"id": 2178,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7276:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7276:43:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2185,
																		"nodeType": "ExpressionStatement",
																		"src": "7276:43:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2165,
																	"name": "pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2162,
																	"src": "7182:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2166,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "7188:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7182:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2187,
															"initializationExpression": {
																"assignments": [
																	2162
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2162,
																		"mutability": "mutable",
																		"name": "pid",
																		"nameLocation": "7173:3:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 2187,
																		"src": "7165:11:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2161,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7165:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2164,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7179:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7165:15:6"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "7196:5:6",
																	"subExpression": {
																		"id": 2168,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2162,
																		"src": "7198:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2170,
																"nodeType": "ExpressionStatement",
																"src": "7196:5:6"
															},
															"nodeType": "ForStatement",
															"src": "7160:174:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2193,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "7369:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2194,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "7373:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2190,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "7353:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 2192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7360:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "7353:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7353:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "7353:27:6"
											}
										]
									},
									"functionSelector": "54575af4",
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2141,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2140,
												"name": "onlyOperator",
												"nameLocations": [
													"6987:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2541,
												"src": "6987:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6987:12:6"
										}
									],
									"name": "governanceRecoverUnsupported",
									"nameLocation": "6906:28:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "6942:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "6935:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2133,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2132,
														"name": "IERC20",
														"nameLocations": [
															"6935:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "6935:6:6"
													},
													"referencedDeclaration": 729,
													"src": "6935:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6958:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "6950:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6950:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6974:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "6966:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6966:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6934:43:6"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7000:0:6"
									},
									"scope": 2542,
									"src": "6897:490:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2236,
										"nodeType": "Block",
										"src": "7463:240:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2207,
														"name": "massUpdatePools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2383,
														"src": "7473:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7473:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2209,
												"nodeType": "ExpressionStatement",
												"src": "7473:17:6"
											},
											{
												"assignments": [
													2212
												],
												"declarations": [
													{
														"constant": false,
														"id": 2212,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7517:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2236,
														"src": "7500:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 2211,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2210,
																"name": "PoolInfo",
																"nameLocations": [
																	"7500:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1425,
																"src": "7500:8:6"
															},
															"referencedDeclaration": 1425,
															"src": "7500:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2216,
												"initialValue": {
													"baseExpression": {
														"id": 2213,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "7524:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2215,
													"indexExpression": {
														"id": 2214,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2200,
														"src": "7533:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7524:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1425_storage",
														"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7500:38:6"
											},
											{
												"condition": {
													"expression": {
														"id": 2217,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2212,
														"src": "7552:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 2218,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7557:9:6",
													"memberName": "isStarted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1422,
													"src": "7552:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2229,
												"nodeType": "IfStatement",
												"src": "7548:110:6",
												"trueBody": {
													"id": 2228,
													"nodeType": "Block",
													"src": "7568:90:6",
													"statements": [
														{
															"expression": {
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2219,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "7582:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2220,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "7600:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"id": 2221,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2212,
																				"src": "7618:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																					"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 2222,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7623:10:6",
																			"memberName": "allocPoint",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1416,
																			"src": "7618:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7600:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2224,
																		"name": "_allocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2202,
																		"src": "7636:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7600:47:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7582:65:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2227,
															"nodeType": "ExpressionStatement",
															"src": "7582:65:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2230,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2212,
															"src": "7667:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 2232,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7672:10:6",
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1416,
														"src": "7667:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2233,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "7685:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7667:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2235,
												"nodeType": "ExpressionStatement",
												"src": "7667:29:6"
											}
										]
									},
									"functionSelector": "1ab06ee5",
									"id": 2237,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2204,
												"name": "onlyOperator",
												"nameLocations": [
													"7450:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2541,
												"src": "7450:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7450:12:6"
										}
									],
									"name": "set",
									"nameLocation": "7402:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7414:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "7406:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "7428:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "7420:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7420:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7405:35:6"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7463:0:6"
									},
									"scope": 2542,
									"src": "7393:310:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2248,
										"nodeType": "Block",
										"src": "7771:37:6",
										"statements": [
											{
												"expression": {
													"id": 2246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2244,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "7781:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2245,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2239,
														"src": "7792:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7781:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2247,
												"nodeType": "ExpressionStatement",
												"src": "7781:20:6"
											}
										]
									},
									"functionSelector": "b3ab15fb",
									"id": 2249,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2241,
												"name": "onlyOperator",
												"nameLocations": [
													"7758:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2541,
												"src": "7758:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7758:12:6"
										}
									],
									"name": "setOperator",
									"nameLocation": "7718:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "7738:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "7730:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7730:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7729:19:6"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7771:0:6"
									},
									"scope": 2542,
									"src": "7709:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2357,
										"nodeType": "Block",
										"src": "7872:706:6",
										"statements": [
											{
												"assignments": [
													2257
												],
												"declarations": [
													{
														"constant": false,
														"id": 2257,
														"mutability": "mutable",
														"name": "_sender",
														"nameLocation": "7890:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 2357,
														"src": "7882:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2256,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7882:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2260,
												"initialValue": {
													"expression": {
														"id": 2258,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7900:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7904:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7900:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7882:28:6"
											},
											{
												"assignments": [
													2263
												],
												"declarations": [
													{
														"constant": false,
														"id": 2263,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7937:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2357,
														"src": "7920:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 2262,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2261,
																"name": "PoolInfo",
																"nameLocations": [
																	"7920:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1425,
																"src": "7920:8:6"
															},
															"referencedDeclaration": 1425,
															"src": "7920:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2267,
												"initialValue": {
													"baseExpression": {
														"id": 2264,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "7944:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2266,
													"indexExpression": {
														"id": 2265,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2251,
														"src": "7953:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7944:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1425_storage",
														"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7920:38:6"
											},
											{
												"assignments": [
													2270
												],
												"declarations": [
													{
														"constant": false,
														"id": 2270,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7985:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2357,
														"src": "7968:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
															"typeString": "struct XusdGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"id": 2269,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2268,
																"name": "UserInfo",
																"nameLocations": [
																	"7968:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1411,
																"src": "7968:8:6"
															},
															"referencedDeclaration": 1411,
															"src": "7968:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2276,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2271,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "7992:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1411_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct XusdGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 2273,
														"indexExpression": {
															"id": 2272,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2251,
															"src": "8001:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7992:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1411_storage_$",
															"typeString": "mapping(address => struct XusdGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 2275,
													"indexExpression": {
														"id": 2274,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2257,
														"src": "8007:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7992:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1411_storage",
														"typeString": "struct XusdGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7968:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2278,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2270,
																	"src": "8033:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																		"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
																	}
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8038:6:6",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1408,
																"src": "8033:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2280,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2253,
																"src": "8048:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8033:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8057:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 2277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8025:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8025:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2284,
												"nodeType": "ExpressionStatement",
												"src": "8025:53:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2286,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2251,
															"src": "8099:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2285,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2486,
														"src": "8088:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8088:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2288,
												"nodeType": "ExpressionStatement",
												"src": "8088:16:6"
											},
											{
												"assignments": [
													2290
												],
												"declarations": [
													{
														"constant": false,
														"id": 2290,
														"mutability": "mutable",
														"name": "_pending",
														"nameLocation": "8122:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 2357,
														"src": "8114:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2289,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8114:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2302,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2291,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2270,
																			"src": "8134:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																				"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 2292,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8139:6:6",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1408,
																		"src": "8134:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 2293,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "8148:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																				"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 2294,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8153:15:6",
																		"memberName": "accXusdPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1420,
																		"src": "8148:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8134:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2296,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8133:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8172:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "8133:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 2299,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "8179:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2300,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8184:10:6",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "8179:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8133:61:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8114:80:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2303,
														"name": "_pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2290,
														"src": "8208:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8219:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8208:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2317,
												"nodeType": "IfStatement",
												"src": "8204:126:6",
												"trueBody": {
													"id": 2316,
													"nodeType": "Block",
													"src": "8222:108:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2307,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "8253:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2308,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2290,
																		"src": "8262:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2306,
																	"name": "safeXusdTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2529,
																	"src": "8236:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8236:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2310,
															"nodeType": "ExpressionStatement",
															"src": "8236:35:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2312,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "8301:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2313,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2290,
																		"src": "8310:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2311,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1489,
																	"src": "8290:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8290:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2315,
															"nodeType": "EmitStatement",
															"src": "8285:34:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2318,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2253,
														"src": "8343:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8353:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8343:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2337,
												"nodeType": "IfStatement",
												"src": "8339:115:6",
												"trueBody": {
													"id": 2336,
													"nodeType": "Block",
													"src": "8356:98:6",
													"statements": [
														{
															"expression": {
																"id": 2325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2321,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2270,
																		"src": "8370:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																			"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 2323,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8375:6:6",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1408,
																	"src": "8370:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 2324,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2253,
																	"src": "8385:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8370:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2326,
															"nodeType": "ExpressionStatement",
															"src": "8370:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2332,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "8426:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2333,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2253,
																		"src": "8435:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2327,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "8406:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																				"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 2330,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8411:5:6",
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1414,
																		"src": "8406:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8417:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "8406:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8406:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2335,
															"nodeType": "ExpressionStatement",
															"src": "8406:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2338,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "8463:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8468:10:6",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1410,
														"src": "8463:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2341,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2270,
																			"src": "8482:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1411_storage_ptr",
																				"typeString": "struct XusdGenesisRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8487:6:6",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1408,
																		"src": "8482:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 2343,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "8496:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																				"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 2344,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8501:15:6",
																		"memberName": "accXusdPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1420,
																		"src": "8496:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8482:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2346,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8481:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8520:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "8481:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8463:61:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2350,
												"nodeType": "ExpressionStatement",
												"src": "8463:61:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2352,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2257,
															"src": "8548:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2353,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2251,
															"src": "8557:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2354,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2253,
															"src": "8563:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2351,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "8539:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8539:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2356,
												"nodeType": "EmitStatement",
												"src": "8534:37:6"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 2358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "7823:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7840:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "7832:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7832:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7854:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "7846:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7831:31:6"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7872:0:6"
									},
									"scope": 2542,
									"src": "7814:764:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2382,
										"nodeType": "Block",
										"src": "8618:141:6",
										"statements": [
											{
												"assignments": [
													2362
												],
												"declarations": [
													{
														"constant": false,
														"id": 2362,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "8636:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2382,
														"src": "8628:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8628:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2365,
												"initialValue": {
													"expression": {
														"id": 2363,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "8645:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8654:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "8645:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8628:32:6"
											},
											{
												"body": {
													"id": 2380,
													"nodeType": "Block",
													"src": "8713:40:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2377,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2367,
																		"src": "8738:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2376,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2486,
																	"src": "8727:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8727:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2379,
															"nodeType": "ExpressionStatement",
															"src": "8727:15:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2370,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "8692:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2371,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2362,
														"src": "8698:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8692:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2381,
												"initializationExpression": {
													"assignments": [
														2367
													],
													"declarations": [
														{
															"constant": false,
															"id": 2367,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "8683:3:6",
															"nodeType": "VariableDeclaration",
															"scope": 2381,
															"src": "8675:11:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2366,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8675:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2369,
													"initialValue": {
														"hexValue": "30",
														"id": 2368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8689:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8675:15:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "8706:5:6",
														"subExpression": {
															"id": 2373,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2367,
															"src": "8708:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2375,
													"nodeType": "ExpressionStatement",
													"src": "8706:5:6"
												},
												"nodeType": "ForStatement",
												"src": "8670:83:6"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 2383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "8593:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8608:2:6"
									},
									"returnParameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8618:0:6"
									},
									"scope": 2542,
									"src": "8584:175:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2485,
										"nodeType": "Block",
										"src": "8806:794:6",
										"statements": [
											{
												"assignments": [
													2390
												],
												"declarations": [
													{
														"constant": false,
														"id": 2390,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "8833:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2485,
														"src": "8816:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 2389,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2388,
																"name": "PoolInfo",
																"nameLocations": [
																	"8816:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1425,
																"src": "8816:8:6"
															},
															"referencedDeclaration": 1425,
															"src": "8816:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2394,
												"initialValue": {
													"baseExpression": {
														"id": 2391,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "8840:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1425_storage_$dyn_storage",
															"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2393,
													"indexExpression": {
														"id": 2392,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2385,
														"src": "8849:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8840:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1425_storage",
														"typeString": "struct XusdGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8816:38:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2395,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8868:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8874:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8868:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 2397,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "8887:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 2398,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8892:14:6",
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1418,
														"src": "8887:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8868:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2402,
												"nodeType": "IfStatement",
												"src": "8864:75:6",
												"trueBody": {
													"id": 2401,
													"nodeType": "Block",
													"src": "8908:31:6",
													"statements": [
														{
															"functionReturnParameters": 2387,
															"id": 2400,
															"nodeType": "Return",
															"src": "8922:7:6"
														}
													]
												}
											},
											{
												"assignments": [
													2404
												],
												"declarations": [
													{
														"constant": false,
														"id": 2404,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nameLocation": "8956:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 2485,
														"src": "8948:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8948:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2413,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2410,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8999:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_XusdGenesisRewardPool_$2542",
																		"typeString": "contract XusdGenesisRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_XusdGenesisRewardPool_$2542",
																		"typeString": "contract XusdGenesisRewardPool"
																	}
																],
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8991:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2408,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8991:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8991:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 2405,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2390,
																"src": "8970:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																	"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8975:5:6",
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1414,
															"src": "8970:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 2407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8981:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "8970:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8970:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8948:57:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2414,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2404,
														"src": "9019:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9034:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9019:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2426,
												"nodeType": "IfStatement",
												"src": "9015:104:6",
												"trueBody": {
													"id": 2425,
													"nodeType": "Block",
													"src": "9037:82:6",
													"statements": [
														{
															"expression": {
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2417,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2390,
																		"src": "9051:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																			"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 2419,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9056:14:6",
																	"memberName": "lastRewardTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1418,
																	"src": "9051:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2420,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "9073:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9079:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "9073:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9051:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2423,
															"nodeType": "ExpressionStatement",
															"src": "9051:37:6"
														},
														{
															"functionReturnParameters": 2387,
															"id": 2424,
															"nodeType": "Return",
															"src": "9102:7:6"
														}
													]
												}
											},
											{
												"condition": {
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9132:15:6",
													"subExpression": {
														"expression": {
															"id": 2427,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "9133:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 2428,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9138:9:6",
														"memberName": "isStarted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1422,
														"src": "9133:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2442,
												"nodeType": "IfStatement",
												"src": "9128:115:6",
												"trueBody": {
													"id": 2441,
													"nodeType": "Block",
													"src": "9149:94:6",
													"statements": [
														{
															"expression": {
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2430,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2390,
																		"src": "9163:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																			"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9168:9:6",
																	"memberName": "isStarted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1422,
																	"src": "9163:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9180:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "9163:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2435,
															"nodeType": "ExpressionStatement",
															"src": "9163:21:6"
														},
														{
															"expression": {
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2436,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "9198:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 2437,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2390,
																		"src": "9217:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																			"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9222:10:6",
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1416,
																	"src": "9217:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9198:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2440,
															"nodeType": "ExpressionStatement",
															"src": "9198:34:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2443,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "9256:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9274:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9256:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2477,
												"nodeType": "IfStatement",
												"src": "9252:295:6",
												"trueBody": {
													"id": 2476,
													"nodeType": "Block",
													"src": "9277:270:6",
													"statements": [
														{
															"assignments": [
																2447
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2447,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nameLocation": "9299:16:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 2476,
																	"src": "9291:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2446,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9291:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2454,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2449,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "9337:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																				"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9342:14:6",
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1418,
																		"src": "9337:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 2451,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "9358:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9364:9:6",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "9358:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2448,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1783,
																	"src": "9318:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9318:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9291:83:6"
														},
														{
															"assignments": [
																2456
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2456,
																	"mutability": "mutable",
																	"name": "_XusdReward",
																	"nameLocation": "9396:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 2476,
																	"src": "9388:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2455,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9388:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2464,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2457,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2447,
																				"src": "9411:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"expression": {
																					"id": 2458,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2390,
																					"src": "9430:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																						"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 2459,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9435:10:6",
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1416,
																				"src": "9430:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9411:34:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2461,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9410:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2462,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "9449:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9410:54:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9388:76:6"
														},
														{
															"expression": {
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2465,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2390,
																		"src": "9478:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																			"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 2467,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9483:15:6",
																	"memberName": "accXusdPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1420,
																	"src": "9478:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2468,
																					"name": "_XusdReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "9503:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31653138",
																					"id": 2469,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9517:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "9503:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2471,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9502:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2472,
																		"name": "tokenSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2404,
																		"src": "9525:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9502:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9478:58:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2475,
															"nodeType": "ExpressionStatement",
															"src": "9478:58:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2478,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "9556:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1425_storage_ptr",
																"typeString": "struct XusdGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 2480,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9561:14:6",
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1418,
														"src": "9556:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2481,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9578:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9584:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9578:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9556:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2484,
												"nodeType": "ExpressionStatement",
												"src": "9556:37:6"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 2486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "8774:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "8793:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "8785:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8785:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8784:14:6"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8806:0:6"
									},
									"scope": 2542,
									"src": "8765:835:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2528,
										"nodeType": "Block",
										"src": "9671:283:6",
										"statements": [
											{
												"assignments": [
													2494
												],
												"declarations": [
													{
														"constant": false,
														"id": 2494,
														"mutability": "mutable",
														"name": "_XusdBalance",
														"nameLocation": "9689:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 2528,
														"src": "9681:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2493,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9681:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2502,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2499,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9727:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_XusdGenesisRewardPool_$2542",
																		"typeString": "contract XusdGenesisRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_XusdGenesisRewardPool_$2542",
																		"typeString": "contract XusdGenesisRewardPool"
																	}
																],
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9719:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2497,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9719:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9719:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2495,
															"name": "Xusd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "9704:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 2496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9709:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "9704:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9704:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9681:52:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2503,
														"name": "_XusdBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2494,
														"src": "9747:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9762:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9747:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2527,
												"nodeType": "IfStatement",
												"src": "9743:205:6",
												"trueBody": {
													"id": 2526,
													"nodeType": "Block",
													"src": "9765:183:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2506,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2490,
																	"src": "9783:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2507,
																	"name": "_XusdBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2494,
																	"src": "9793:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9783:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2524,
																"nodeType": "Block",
																"src": "9878:60:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2520,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2488,
																					"src": "9910:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2521,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2490,
																					"src": "9915:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2517,
																					"name": "Xusd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1435,
																					"src": "9896:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$729",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2519,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9901:8:6",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 696,
																				"src": "9896:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9896:27:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2523,
																		"nodeType": "ExpressionStatement",
																		"src": "9896:27:6"
																	}
																]
															},
															"id": 2525,
															"nodeType": "IfStatement",
															"src": "9779:159:6",
															"trueBody": {
																"id": 2516,
																"nodeType": "Block",
																"src": "9807:65:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2512,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2488,
																					"src": "9839:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2513,
																					"name": "_XusdBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2494,
																					"src": "9844:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2509,
																					"name": "Xusd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1435,
																					"src": "9825:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$729",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9830:8:6",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 696,
																				"src": "9825:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9825:32:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2515,
																		"nodeType": "ExpressionStatement",
																		"src": "9825:32:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 2529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeXusdTransfer",
									"nameLocation": "9615:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "9640:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "9632:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9632:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9653:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "9645:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9631:30:6"
									},
									"returnParameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9671:0:6"
									},
									"scope": 2542,
									"src": "9606:348:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2540,
										"nodeType": "Block",
										"src": "9984:106:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2532,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "10002:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2533,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10014:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10018:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10014:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10002:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5875736447656e65736973506f6f6c3a2063616c6c6572206973206e6f7420746865206f70657261746f72",
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10026:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94801dfd38f295ab953066afbb6df9200e899d0f59adca75e6b3a000501ad8e8",
																"typeString": "literal_string \"XusdGenesisPool: caller is not the operator\""
															},
															"value": "XusdGenesisPool: caller is not the operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94801dfd38f295ab953066afbb6df9200e899d0f59adca75e6b3a000501ad8e8",
																"typeString": "literal_string \"XusdGenesisPool: caller is not the operator\""
															}
														],
														"id": 2531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9994:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9994:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2538,
												"nodeType": "ExpressionStatement",
												"src": "9994:78:6"
											},
											{
												"id": 2539,
												"nodeType": "PlaceholderStatement",
												"src": "10082:1:6"
											}
										]
									},
									"id": 2541,
									"name": "onlyOperator",
									"nameLocation": "9969:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9981:2:6"
									},
									"src": "9960:130:6",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2543,
							"src": "181:9911:6",
							"usedErrors": [],
							"usedEvents": [
								1467,
								1475,
								1483,
								1489
							]
						}
					],
					"src": "32:10060:6"
				},
				"id": 6
			}
		}
	}
}